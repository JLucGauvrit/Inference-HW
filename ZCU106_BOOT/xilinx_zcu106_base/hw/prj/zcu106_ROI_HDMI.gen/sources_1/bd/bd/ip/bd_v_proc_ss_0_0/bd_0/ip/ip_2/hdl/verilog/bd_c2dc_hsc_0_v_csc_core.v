// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_c2dc_hsc_0_v_csc_core (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_dout,
        srcImg_empty_n,
        srcImg_read,
        height,
        width,
        colorMode_dout,
        colorMode_empty_n,
        colorMode_read,
        outImg_din,
        outImg_full_n,
        outImg_write,
        bPassThru_dout,
        bPassThru_empty_n,
        bPassThru_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state14 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] srcImg_dout;
input   srcImg_empty_n;
output   srcImg_read;
input  [15:0] height;
input  [15:0] width;
input  [7:0] colorMode_dout;
input   colorMode_empty_n;
output   colorMode_read;
output  [47:0] outImg_din;
input   outImg_full_n;
output   outImg_write;
input   bPassThru_dout;
input   bPassThru_empty_n;
output   bPassThru_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_read;
reg colorMode_read;
reg[47:0] outImg_din;
reg outImg_write;
reg bPassThru_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    srcImg_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    colorMode_blk_n;
reg    outImg_blk_n;
reg   [0:0] bPassThru_read_reg_1126;
reg    ap_enable_reg_pp0_iter10;
reg    bPassThru_blk_n;
reg   [10:0] x_reg_203;
wire   [11:0] empty_fu_214_p1;
wire   [0:0] cmp69_i_fu_218_p2;
reg   [0:0] cmp69_i_reg_1116;
wire   [10:0] lshr_ln1904_cast_fu_224_p4;
wire   [11:0] y_3_fu_234_p2;
reg   [11:0] y_3_reg_1135;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1904_fu_240_p2;
wire   [10:0] x_3_fu_245_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
reg    ap_block_state13_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1906_fu_251_p2;
wire   [7:0] trunc_ln145_fu_256_p1;
reg   [7:0] trunc_ln145_reg_1153;
reg   [7:0] trunc_ln145_reg_1153_pp0_iter2_reg;
reg   [7:0] trunc_ln145_reg_1153_pp0_iter3_reg;
reg   [7:0] trunc_ln145_reg_1153_pp0_iter4_reg;
reg   [7:0] trunc_ln145_1_reg_1162;
wire   [7:0] trunc_ln145_2_fu_270_p4;
reg   [7:0] trunc_ln145_2_reg_1168;
reg   [7:0] trunc_ln145_2_reg_1168_pp0_iter2_reg;
reg   [7:0] trunc_ln145_2_reg_1168_pp0_iter3_reg;
reg   [7:0] trunc_ln145_2_reg_1168_pp0_iter4_reg;
reg   [7:0] trunc_ln145_3_reg_1173;
wire   [7:0] trunc_ln9_fu_308_p4;
reg   [7:0] trunc_ln9_reg_1194;
reg   [7:0] trunc_ln9_reg_1194_pp0_iter2_reg;
reg   [7:0] trunc_ln9_reg_1194_pp0_iter3_reg;
reg   [7:0] trunc_ln9_reg_1194_pp0_iter4_reg;
reg   [7:0] tmp_reg_1214;
reg   [7:0] tmp_reg_1214_pp0_iter2_reg;
reg   [7:0] tmp_reg_1214_pp0_iter3_reg;
reg   [7:0] tmp_reg_1214_pp0_iter4_reg;
wire   [16:0] mul_ln1930_fu_365_p2;
reg   [16:0] mul_ln1930_reg_1238;
wire   [16:0] mul_ln1930_3_fu_390_p2;
reg   [16:0] mul_ln1930_3_reg_1258;
reg   [9:0] trunc_ln_reg_1263;
wire  signed [17:0] grp_fu_1012_p2;
reg   [9:0] trunc_ln1925_6_reg_1278;
wire  signed [17:0] grp_fu_1033_p2;
wire   [9:0] sub_ln1926_fu_457_p2;
reg   [9:0] sub_ln1926_reg_1293;
wire   [11:0] add_ln1927_fu_476_p2;
reg   [11:0] add_ln1927_reg_1298;
reg   [11:0] add_ln1927_reg_1298_pp0_iter6_reg;
reg   [11:0] add_ln1927_reg_1298_pp0_iter7_reg;
reg   [8:0] trunc_ln1931_2_reg_1303;
wire   [9:0] trunc_ln1934_fu_562_p1;
reg   [9:0] trunc_ln1934_reg_1313;
wire   [0:0] icmp_ln1934_fu_566_p2;
reg   [0:0] icmp_ln1934_reg_1318;
wire   [9:0] sub_ln1926_1_fu_609_p2;
reg   [9:0] sub_ln1926_1_reg_1323;
wire   [11:0] add_ln1927_1_fu_628_p2;
reg   [11:0] add_ln1927_1_reg_1328;
reg   [11:0] add_ln1927_1_reg_1328_pp0_iter6_reg;
reg   [11:0] add_ln1927_1_reg_1328_pp0_iter7_reg;
reg   [8:0] trunc_ln1931_5_reg_1333;
wire   [9:0] trunc_ln1934_1_fu_714_p1;
reg   [9:0] trunc_ln1934_1_reg_1343;
wire   [0:0] icmp_ln1934_2_fu_718_p2;
reg   [0:0] icmp_ln1934_2_reg_1348;
wire   [7:0] select_ln301_fu_749_p3;
reg   [7:0] select_ln301_reg_1353;
reg   [7:0] select_ln301_reg_1353_pp0_iter7_reg;
reg   [7:0] select_ln301_reg_1353_pp0_iter8_reg;
reg   [7:0] select_ln301_reg_1353_pp0_iter9_reg;
wire   [8:0] trunc_ln1935_fu_763_p1;
reg   [8:0] trunc_ln1935_reg_1358;
wire   [0:0] icmp_ln1935_fu_767_p2;
reg   [0:0] icmp_ln1935_reg_1363;
wire   [7:0] select_ln301_3_fu_798_p3;
reg   [7:0] select_ln301_3_reg_1368;
reg   [7:0] select_ln301_3_reg_1368_pp0_iter7_reg;
reg   [7:0] select_ln301_3_reg_1368_pp0_iter8_reg;
reg   [7:0] select_ln301_3_reg_1368_pp0_iter9_reg;
wire   [8:0] trunc_ln1935_1_fu_812_p1;
reg   [8:0] trunc_ln1935_1_reg_1373;
wire   [0:0] icmp_ln1935_2_fu_816_p2;
reg   [0:0] icmp_ln1935_2_reg_1378;
wire   [7:0] select_ln301_1_fu_838_p3;
reg   [7:0] select_ln301_1_reg_1383;
reg   [7:0] select_ln301_1_reg_1383_pp0_iter8_reg;
reg   [7:0] select_ln301_1_reg_1383_pp0_iter9_reg;
wire   [7:0] select_ln301_4_fu_862_p3;
reg   [7:0] select_ln301_4_reg_1388;
reg   [7:0] select_ln301_4_reg_1388_pp0_iter8_reg;
reg   [7:0] select_ln301_4_reg_1388_pp0_iter9_reg;
wire   [11:0] select_ln1936_fu_893_p3;
reg   [11:0] select_ln1936_reg_1393;
wire   [10:0] trunc_ln1936_fu_899_p1;
reg   [10:0] trunc_ln1936_reg_1398;
wire   [11:0] select_ln1936_2_fu_926_p3;
reg   [11:0] select_ln1936_2_reg_1403;
wire   [10:0] trunc_ln1936_1_fu_932_p1;
reg   [10:0] trunc_ln1936_1_reg_1408;
wire   [0:0] icmp_ln1936_1_fu_948_p2;
reg   [0:0] icmp_ln1936_1_reg_1413;
wire   [7:0] trunc_ln301_2_fu_954_p1;
reg   [7:0] trunc_ln301_2_reg_1418;
wire   [0:0] icmp_ln1936_3_fu_970_p2;
reg   [0:0] icmp_ln1936_3_reg_1423;
wire   [7:0] trunc_ln301_5_fu_976_p1;
reg   [7:0] trunc_ln301_5_reg_1428;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg   [11:0] y_reg_192;
wire    ap_CS_fsm_state14;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_i_fu_992_p7;
wire  signed [7:0] xor_ln1923_fu_294_p2;
wire  signed [7:0] xor_ln1923_1_fu_322_p2;
wire  signed [7:0] xor_ln1924_fu_349_p2;
wire   [7:0] mul_ln1930_fu_365_p0;
wire   [9:0] mul_ln1930_fu_365_p1;
wire  signed [7:0] xor_ln1924_1_fu_374_p2;
wire   [7:0] mul_ln1930_3_fu_390_p0;
wire   [9:0] mul_ln1930_3_fu_390_p1;
wire  signed [19:0] grp_fu_1005_p2;
wire   [16:0] grp_fu_1018_p3;
wire  signed [19:0] grp_fu_1026_p2;
wire   [16:0] grp_fu_1039_p3;
wire  signed [10:0] sext_ln1925_2_fu_435_p1;
wire   [10:0] zext_ln1925_4_fu_432_p1;
wire  signed [17:0] grp_fu_1047_p3;
wire   [7:0] trunc_ln1_fu_444_p4;
wire   [9:0] zext_ln1925_3_fu_429_p1;
wire  signed [9:0] sext_ln1926_1_fu_453_p1;
wire  signed [20:0] grp_fu_1056_p2;
wire   [10:0] trunc_ln2_fu_463_p4;
wire  signed [11:0] sext_ln1927_fu_472_p1;
wire   [11:0] zext_ln1925_2_fu_426_p1;
wire   [17:0] grp_fu_1063_p3;
wire   [7:0] trunc_ln3_fu_482_p4;
wire   [8:0] zext_ln1923_fu_420_p1;
wire   [8:0] zext_ln1931_1_fu_495_p1;
wire   [8:0] sub_ln1931_fu_499_p2;
wire   [17:0] shl_ln_fu_505_p3;
wire   [11:0] shl_ln1931_1_fu_517_p3;
wire  signed [18:0] sext_ln1931_fu_513_p1;
wire  signed [18:0] sext_ln1931_1_fu_525_p1;
wire   [18:0] sub_ln1931_1_fu_529_p2;
wire   [8:0] zext_ln1925_fu_423_p1;
wire  signed [8:0] sub_ln1932_fu_545_p2;
wire   [10:0] add_ln1925_fu_438_p2;
wire   [10:0] zext_ln1931_fu_491_p1;
wire   [10:0] select_ln1934_fu_555_p3;
wire   [10:0] zext_ln1925_9_fu_584_p1;
wire  signed [10:0] sext_ln1925_5_fu_587_p1;
wire  signed [17:0] grp_fu_1072_p3;
wire   [7:0] trunc_ln1926_1_fu_596_p4;
wire   [9:0] zext_ln1925_8_fu_581_p1;
wire  signed [9:0] sext_ln1926_3_fu_605_p1;
wire  signed [20:0] grp_fu_1081_p2;
wire   [10:0] trunc_ln1927_1_fu_615_p4;
wire   [11:0] zext_ln1925_7_fu_578_p1;
wire  signed [11:0] sext_ln1927_1_fu_624_p1;
wire   [17:0] grp_fu_1088_p3;
wire   [7:0] trunc_ln1931_3_fu_634_p4;
wire   [8:0] zext_ln1923_2_fu_572_p1;
wire   [8:0] zext_ln1931_3_fu_647_p1;
wire   [8:0] sub_ln1931_2_fu_651_p2;
wire   [17:0] shl_ln1931_2_fu_657_p3;
wire   [11:0] shl_ln1931_3_fu_669_p3;
wire  signed [18:0] sext_ln1931_3_fu_665_p1;
wire  signed [18:0] sext_ln1931_4_fu_677_p1;
wire   [18:0] sub_ln1931_3_fu_681_p2;
wire   [8:0] zext_ln1925_5_fu_575_p1;
wire  signed [8:0] sub_ln1932_1_fu_697_p2;
wire   [10:0] add_ln1925_1_fu_590_p2;
wire   [10:0] zext_ln1931_2_fu_643_p1;
wire   [10:0] select_ln1934_2_fu_707_p3;
wire  signed [9:0] sext_ln1931_2_fu_724_p1;
wire   [9:0] select_ln1934_1_fu_733_p3;
wire   [0:0] icmp_ln1934_1_fu_739_p2;
wire   [7:0] trunc_ln301_fu_745_p1;
wire   [9:0] add_ln1931_fu_727_p2;
wire   [9:0] select_ln1935_fu_757_p3;
wire  signed [9:0] sext_ln1931_5_fu_773_p1;
wire   [9:0] select_ln1934_3_fu_782_p3;
wire   [0:0] icmp_ln1934_3_fu_788_p2;
wire   [7:0] trunc_ln301_3_fu_794_p1;
wire   [9:0] add_ln1931_1_fu_776_p2;
wire   [9:0] select_ln1935_2_fu_806_p3;
wire   [8:0] select_ln1935_1_fu_822_p3;
wire   [0:0] icmp_ln1935_1_fu_828_p2;
wire   [7:0] trunc_ln301_1_fu_834_p1;
wire   [8:0] select_ln1935_3_fu_846_p3;
wire   [0:0] icmp_ln1935_3_fu_852_p2;
wire   [7:0] trunc_ln301_4_fu_858_p1;
wire  signed [19:0] grp_fu_1097_p2;
wire   [9:0] trunc_ln4_fu_870_p4;
wire  signed [10:0] sext_ln1932_1_fu_879_p1;
wire   [10:0] add_ln1932_fu_883_p2;
wire  signed [11:0] sext_ln1934_fu_889_p1;
wire  signed [19:0] grp_fu_1104_p2;
wire   [9:0] trunc_ln1932_1_fu_903_p4;
wire  signed [10:0] sext_ln1932_3_fu_912_p1;
wire   [10:0] add_ln1932_1_fu_916_p2;
wire  signed [11:0] sext_ln1934_1_fu_922_p1;
wire   [0:0] icmp_ln1936_fu_936_p2;
wire   [10:0] select_ln1936_1_fu_941_p3;
wire   [0:0] icmp_ln1936_2_fu_958_p2;
wire   [10:0] select_ln1936_3_fu_963_p3;
wire   [7:0] select_ln301_5_fu_986_p3;
wire   [7:0] select_ln301_2_fu_980_p3;
wire   [11:0] grp_fu_1005_p1;
wire   [10:0] grp_fu_1012_p1;
wire   [7:0] grp_fu_1018_p0;
wire   [7:0] grp_fu_1018_p1;
wire   [11:0] grp_fu_1026_p1;
wire   [10:0] grp_fu_1033_p1;
wire   [7:0] grp_fu_1039_p0;
wire   [7:0] grp_fu_1039_p1;
wire   [9:0] grp_fu_1047_p1;
wire   [12:0] grp_fu_1056_p1;
wire   [7:0] grp_fu_1063_p0;
wire   [10:0] grp_fu_1063_p1;
wire   [16:0] grp_fu_1063_p2;
wire   [9:0] grp_fu_1072_p1;
wire   [12:0] grp_fu_1081_p1;
wire   [7:0] grp_fu_1088_p0;
wire   [10:0] grp_fu_1088_p1;
wire   [16:0] grp_fu_1088_p2;
wire   [10:0] grp_fu_1097_p1;
wire   [10:0] grp_fu_1104_p1;
reg    grp_fu_1005_ce;
reg    grp_fu_1012_ce;
reg    grp_fu_1018_ce;
reg    grp_fu_1026_ce;
reg    grp_fu_1033_ce;
reg    grp_fu_1039_ce;
reg    grp_fu_1047_ce;
reg    grp_fu_1056_ce;
reg    grp_fu_1063_ce;
reg    grp_fu_1072_ce;
reg    grp_fu_1081_ce;
reg    grp_fu_1088_ce;
reg    grp_fu_1097_ce;
reg    grp_fu_1104_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [14:0] grp_fu_1018_p00;
wire   [14:0] grp_fu_1039_p00;
wire   [17:0] grp_fu_1063_p00;
wire   [17:0] grp_fu_1063_p20;
wire   [17:0] grp_fu_1088_p00;
wire   [17:0] grp_fu_1088_p20;
wire   [16:0] mul_ln1930_3_fu_390_p00;
wire   [16:0] mul_ln1930_fu_365_p00;
reg    ap_condition_1056;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

bd_c2dc_hsc_0_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U140(
    .din0(mul_ln1930_fu_365_p0),
    .din1(mul_ln1930_fu_365_p1),
    .dout(mul_ln1930_fu_365_p2)
);

bd_c2dc_hsc_0_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U141(
    .din0(mul_ln1930_3_fu_390_p0),
    .din1(mul_ln1930_3_fu_390_p1),
    .dout(mul_ln1930_3_fu_390_p2)
);

bd_c2dc_hsc_0_mul_mul_8s_12ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
mul_mul_8s_12ns_20_4_1_U142(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1923_fu_294_p2),
    .din1(grp_fu_1005_p1),
    .ce(grp_fu_1005_ce),
    .dout(grp_fu_1005_p2)
);

bd_c2dc_hsc_0_mul_mul_8s_11ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
mul_mul_8s_11ns_18_4_1_U143(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1923_fu_294_p2),
    .din1(grp_fu_1012_p1),
    .ce(grp_fu_1012_ce),
    .dout(grp_fu_1012_p2)
);

bd_c2dc_hsc_0_mac_muladd_8ns_8ns_17ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_17ns_17_4_1_U144(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1018_p0),
    .din1(grp_fu_1018_p1),
    .din2(mul_ln1930_reg_1238),
    .ce(grp_fu_1018_ce),
    .dout(grp_fu_1018_p3)
);

bd_c2dc_hsc_0_mul_mul_8s_12ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
mul_mul_8s_12ns_20_4_1_U145(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1923_1_fu_322_p2),
    .din1(grp_fu_1026_p1),
    .ce(grp_fu_1026_ce),
    .dout(grp_fu_1026_p2)
);

bd_c2dc_hsc_0_mul_mul_8s_11ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
mul_mul_8s_11ns_18_4_1_U146(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1923_1_fu_322_p2),
    .din1(grp_fu_1033_p1),
    .ce(grp_fu_1033_ce),
    .dout(grp_fu_1033_p2)
);

bd_c2dc_hsc_0_mac_muladd_8ns_8ns_17ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_17ns_17_4_1_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1039_p0),
    .din1(grp_fu_1039_p1),
    .din2(mul_ln1930_3_reg_1258),
    .ce(grp_fu_1039_ce),
    .dout(grp_fu_1039_p3)
);

bd_c2dc_hsc_0_mac_muladd_8s_10ns_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_8s_10ns_18s_18_4_1_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1924_fu_349_p2),
    .din1(grp_fu_1047_p1),
    .din2(grp_fu_1012_p2),
    .ce(grp_fu_1047_ce),
    .dout(grp_fu_1047_p3)
);

bd_c2dc_hsc_0_mul_mul_8s_13ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
mul_mul_8s_13ns_21_4_1_U149(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1924_fu_349_p2),
    .din1(grp_fu_1056_p1),
    .ce(grp_fu_1056_ce),
    .dout(grp_fu_1056_p2)
);

bd_c2dc_hsc_0_mac_muladd_8ns_11ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_11ns_17ns_18_4_1_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1063_p0),
    .din1(grp_fu_1063_p1),
    .din2(grp_fu_1063_p2),
    .ce(grp_fu_1063_ce),
    .dout(grp_fu_1063_p3)
);

bd_c2dc_hsc_0_mac_muladd_8s_10ns_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_8s_10ns_18s_18_4_1_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1924_1_fu_374_p2),
    .din1(grp_fu_1072_p1),
    .din2(grp_fu_1033_p2),
    .ce(grp_fu_1072_ce),
    .dout(grp_fu_1072_p3)
);

bd_c2dc_hsc_0_mul_mul_8s_13ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
mul_mul_8s_13ns_21_4_1_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln1924_1_fu_374_p2),
    .din1(grp_fu_1081_p1),
    .ce(grp_fu_1081_ce),
    .dout(grp_fu_1081_p2)
);

bd_c2dc_hsc_0_mac_muladd_8ns_11ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_11ns_17ns_18_4_1_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1088_p0),
    .din1(grp_fu_1088_p1),
    .din2(grp_fu_1088_p2),
    .ce(grp_fu_1088_ce),
    .dout(grp_fu_1088_p3)
);

bd_c2dc_hsc_0_mul_mul_9s_11ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
mul_mul_9s_11ns_20_4_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1932_fu_545_p2),
    .din1(grp_fu_1097_p1),
    .ce(grp_fu_1097_ce),
    .dout(grp_fu_1097_p2)
);

bd_c2dc_hsc_0_mul_mul_9s_11ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
mul_mul_9s_11ns_20_4_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln1932_1_fu_697_p2),
    .din1(grp_fu_1104_p1),
    .ce(grp_fu_1104_ce),
    .dout(grp_fu_1104_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1906_fu_251_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_reg_203 <= x_3_fu_245_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd0))) begin
        x_reg_203 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((bPassThru_empty_n == 1'b0) | (colorMode_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_reg_192 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_reg_192 <= y_3_reg_1135;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp69_i_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1927_1_reg_1328 <= add_ln1927_1_fu_628_p2;
        add_ln1927_reg_1298 <= add_ln1927_fu_476_p2;
        sub_ln1926_1_reg_1323 <= sub_ln1926_1_fu_609_p2;
        sub_ln1926_reg_1293 <= sub_ln1926_fu_457_p2;
        trunc_ln1925_6_reg_1278 <= {{grp_fu_1026_p2[19:10]}};
        trunc_ln_reg_1263 <= {{grp_fu_1005_p2[19:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1927_1_reg_1328_pp0_iter6_reg <= add_ln1927_1_reg_1328;
        add_ln1927_1_reg_1328_pp0_iter7_reg <= add_ln1927_1_reg_1328_pp0_iter6_reg;
        add_ln1927_reg_1298_pp0_iter6_reg <= add_ln1927_reg_1298;
        add_ln1927_reg_1298_pp0_iter7_reg <= add_ln1927_reg_1298_pp0_iter6_reg;
        icmp_ln1934_2_reg_1348 <= icmp_ln1934_2_fu_718_p2;
        icmp_ln1934_reg_1318 <= icmp_ln1934_fu_566_p2;
        icmp_ln1935_2_reg_1378 <= icmp_ln1935_2_fu_816_p2;
        icmp_ln1935_reg_1363 <= icmp_ln1935_fu_767_p2;
        icmp_ln1936_1_reg_1413 <= icmp_ln1936_1_fu_948_p2;
        icmp_ln1936_3_reg_1423 <= icmp_ln1936_3_fu_970_p2;
        mul_ln1930_3_reg_1258 <= mul_ln1930_3_fu_390_p2;
        mul_ln1930_reg_1238 <= mul_ln1930_fu_365_p2;
        select_ln1936_2_reg_1403 <= select_ln1936_2_fu_926_p3;
        select_ln1936_reg_1393 <= select_ln1936_fu_893_p3;
        select_ln301_1_reg_1383 <= select_ln301_1_fu_838_p3;
        select_ln301_1_reg_1383_pp0_iter8_reg <= select_ln301_1_reg_1383;
        select_ln301_1_reg_1383_pp0_iter9_reg <= select_ln301_1_reg_1383_pp0_iter8_reg;
        select_ln301_3_reg_1368 <= select_ln301_3_fu_798_p3;
        select_ln301_3_reg_1368_pp0_iter7_reg <= select_ln301_3_reg_1368;
        select_ln301_3_reg_1368_pp0_iter8_reg <= select_ln301_3_reg_1368_pp0_iter7_reg;
        select_ln301_3_reg_1368_pp0_iter9_reg <= select_ln301_3_reg_1368_pp0_iter8_reg;
        select_ln301_4_reg_1388 <= select_ln301_4_fu_862_p3;
        select_ln301_4_reg_1388_pp0_iter8_reg <= select_ln301_4_reg_1388;
        select_ln301_4_reg_1388_pp0_iter9_reg <= select_ln301_4_reg_1388_pp0_iter8_reg;
        select_ln301_reg_1353 <= select_ln301_fu_749_p3;
        select_ln301_reg_1353_pp0_iter7_reg <= select_ln301_reg_1353;
        select_ln301_reg_1353_pp0_iter8_reg <= select_ln301_reg_1353_pp0_iter7_reg;
        select_ln301_reg_1353_pp0_iter9_reg <= select_ln301_reg_1353_pp0_iter8_reg;
        tmp_reg_1214_pp0_iter2_reg <= tmp_reg_1214;
        tmp_reg_1214_pp0_iter3_reg <= tmp_reg_1214_pp0_iter2_reg;
        tmp_reg_1214_pp0_iter4_reg <= tmp_reg_1214_pp0_iter3_reg;
        trunc_ln145_2_reg_1168_pp0_iter2_reg <= trunc_ln145_2_reg_1168;
        trunc_ln145_2_reg_1168_pp0_iter3_reg <= trunc_ln145_2_reg_1168_pp0_iter2_reg;
        trunc_ln145_2_reg_1168_pp0_iter4_reg <= trunc_ln145_2_reg_1168_pp0_iter3_reg;
        trunc_ln145_reg_1153_pp0_iter2_reg <= trunc_ln145_reg_1153;
        trunc_ln145_reg_1153_pp0_iter3_reg <= trunc_ln145_reg_1153_pp0_iter2_reg;
        trunc_ln145_reg_1153_pp0_iter4_reg <= trunc_ln145_reg_1153_pp0_iter3_reg;
        trunc_ln1934_1_reg_1343 <= trunc_ln1934_1_fu_714_p1;
        trunc_ln1934_reg_1313 <= trunc_ln1934_fu_562_p1;
        trunc_ln1935_1_reg_1373 <= trunc_ln1935_1_fu_812_p1;
        trunc_ln1935_reg_1358 <= trunc_ln1935_fu_763_p1;
        trunc_ln1936_1_reg_1408 <= trunc_ln1936_1_fu_932_p1;
        trunc_ln1936_reg_1398 <= trunc_ln1936_fu_899_p1;
        trunc_ln301_2_reg_1418 <= trunc_ln301_2_fu_954_p1;
        trunc_ln301_5_reg_1428 <= trunc_ln301_5_fu_976_p1;
        trunc_ln9_reg_1194_pp0_iter2_reg <= trunc_ln9_reg_1194;
        trunc_ln9_reg_1194_pp0_iter3_reg <= trunc_ln9_reg_1194_pp0_iter2_reg;
        trunc_ln9_reg_1194_pp0_iter4_reg <= trunc_ln9_reg_1194_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bPassThru_read_reg_1126 <= bPassThru_dout;
        cmp69_i_reg_1116 <= cmp69_i_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_1214 <= {{srcImg_dout[31:24]}};
        trunc_ln145_1_reg_1162 <= {{srcImg_dout[15:8]}};
        trunc_ln145_2_reg_1168 <= {{srcImg_dout[23:16]}};
        trunc_ln145_3_reg_1173 <= {{srcImg_dout[39:32]}};
        trunc_ln145_reg_1153 <= trunc_ln145_fu_256_p1;
        trunc_ln9_reg_1194 <= {{srcImg_dout[47:40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp69_i_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln1931_2_reg_1303 <= {{sub_ln1931_1_fu_529_p2[18:10]}};
        trunc_ln1931_5_reg_1333 <= {{sub_ln1931_3_fu_681_p2[18:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_3_reg_1135 <= y_3_fu_234_p2;
    end
end

always @ (*) begin
    if ((icmp_ln1906_fu_251_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThru_blk_n = bPassThru_empty_n;
    end else begin
        bPassThru_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThru_empty_n == 1'b0) | (colorMode_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThru_read = 1'b1;
    end else begin
        bPassThru_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        colorMode_blk_n = colorMode_empty_n;
    end else begin
        colorMode_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThru_empty_n == 1'b0) | (colorMode_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        colorMode_read = 1'b1;
    end else begin
        colorMode_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1005_ce = 1'b1;
    end else begin
        grp_fu_1005_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1012_ce = 1'b1;
    end else begin
        grp_fu_1012_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1018_ce = 1'b1;
    end else begin
        grp_fu_1018_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1026_ce = 1'b1;
    end else begin
        grp_fu_1026_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1033_ce = 1'b1;
    end else begin
        grp_fu_1033_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1039_ce = 1'b1;
    end else begin
        grp_fu_1039_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1047_ce = 1'b1;
    end else begin
        grp_fu_1047_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1056_ce = 1'b1;
    end else begin
        grp_fu_1056_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1063_ce = 1'b1;
    end else begin
        grp_fu_1063_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1072_ce = 1'b1;
    end else begin
        grp_fu_1072_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1081_ce = 1'b1;
    end else begin
        grp_fu_1081_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1088_ce = 1'b1;
    end else begin
        grp_fu_1088_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1097_ce = 1'b1;
    end else begin
        grp_fu_1097_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1104_ce = 1'b1;
    end else begin
        grp_fu_1104_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThru_read_reg_1126 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outImg_blk_n = outImg_full_n;
    end else begin
        outImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0))) begin
            outImg_din = or_ln174_i_fu_992_p7;
        end else if ((1'b1 == ap_condition_1056)) begin
            outImg_din = srcImg_dout;
        end else begin
            outImg_din = 'bx;
        end
    end else begin
        outImg_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((bPassThru_read_reg_1126 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outImg_write = 1'b1;
    end else begin
        outImg_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_blk_n = srcImg_empty_n;
    end else begin
        srcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_read = 1'b1;
    end else begin
        srcImg_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bPassThru_empty_n == 1'b0) | (colorMode_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1904_fu_240_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1906_fu_251_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln1906_fu_251_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1925_1_fu_590_p2 = ($signed(zext_ln1925_9_fu_584_p1) + $signed(sext_ln1925_5_fu_587_p1));

assign add_ln1925_fu_438_p2 = ($signed(sext_ln1925_2_fu_435_p1) + $signed(zext_ln1925_4_fu_432_p1));

assign add_ln1927_1_fu_628_p2 = ($signed(zext_ln1925_7_fu_578_p1) + $signed(sext_ln1927_1_fu_624_p1));

assign add_ln1927_fu_476_p2 = ($signed(sext_ln1927_fu_472_p1) + $signed(zext_ln1925_2_fu_426_p1));

assign add_ln1931_1_fu_776_p2 = ($signed(sext_ln1931_5_fu_773_p1) + $signed(10'd128));

assign add_ln1931_fu_727_p2 = ($signed(sext_ln1931_2_fu_724_p1) + $signed(10'd128));

assign add_ln1932_1_fu_916_p2 = ($signed(sext_ln1932_3_fu_912_p1) + $signed(11'd128));

assign add_ln1932_fu_883_p2 = ($signed(sext_ln1932_1_fu_879_p1) + $signed(11'd128));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThru_read_reg_1126 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThru_read_reg_1126 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThru_read_reg_1126 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThru_read_reg_1126 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((bPassThru_empty_n == 1'b0) | (colorMode_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter10 = ((bPassThru_read_reg_1126 == 1'd0) & (outImg_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((srcImg_empty_n == 1'b0) | ((bPassThru_read_reg_1126 == 1'd1) & (outImg_full_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1056 = ((bPassThru_read_reg_1126 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign cmp69_i_fu_218_p2 = ((colorMode_dout != 8'd0) ? 1'b1 : 1'b0);

assign empty_fu_214_p1 = height[11:0];

assign grp_fu_1005_p1 = 20'd1733;

assign grp_fu_1012_p1 = 18'd595;

assign grp_fu_1018_p0 = grp_fu_1018_p00;

assign grp_fu_1018_p00 = trunc_ln145_2_fu_270_p4;

assign grp_fu_1018_p1 = 15'd117;

assign grp_fu_1026_p1 = 20'd1733;

assign grp_fu_1033_p1 = 18'd595;

assign grp_fu_1039_p0 = grp_fu_1039_p00;

assign grp_fu_1039_p00 = trunc_ln9_fu_308_p4;

assign grp_fu_1039_p1 = 15'd117;

assign grp_fu_1047_p1 = 18'd404;

assign grp_fu_1056_p1 = 21'd2081;

assign grp_fu_1063_p0 = grp_fu_1063_p00;

assign grp_fu_1063_p00 = trunc_ln145_1_reg_1162;

assign grp_fu_1063_p1 = 18'd601;

assign grp_fu_1063_p2 = grp_fu_1063_p20;

assign grp_fu_1063_p20 = grp_fu_1018_p3;

assign grp_fu_1072_p1 = 18'd404;

assign grp_fu_1081_p1 = 21'd2081;

assign grp_fu_1088_p0 = grp_fu_1088_p00;

assign grp_fu_1088_p00 = trunc_ln145_3_reg_1173;

assign grp_fu_1088_p1 = 18'd601;

assign grp_fu_1088_p2 = grp_fu_1088_p20;

assign grp_fu_1088_p20 = grp_fu_1039_p3;

assign grp_fu_1097_p1 = 20'd898;

assign grp_fu_1104_p1 = 20'd898;

assign icmp_ln1904_fu_240_p2 = ((y_reg_192 == empty_fu_214_p1) ? 1'b1 : 1'b0);

assign icmp_ln1906_fu_251_p2 = ((x_reg_203 == lshr_ln1904_cast_fu_224_p4) ? 1'b1 : 1'b0);

assign icmp_ln1934_1_fu_739_p2 = (($signed(select_ln1934_1_fu_733_p3) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1934_2_fu_718_p2 = (($signed(select_ln1934_2_fu_707_p3) < $signed(11'd255)) ? 1'b1 : 1'b0);

assign icmp_ln1934_3_fu_788_p2 = (($signed(select_ln1934_3_fu_782_p3) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1934_fu_566_p2 = (($signed(select_ln1934_fu_555_p3) < $signed(11'd255)) ? 1'b1 : 1'b0);

assign icmp_ln1935_1_fu_828_p2 = (($signed(select_ln1935_1_fu_822_p3) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1935_2_fu_816_p2 = (($signed(select_ln1935_2_fu_806_p3) < $signed(10'd255)) ? 1'b1 : 1'b0);

assign icmp_ln1935_3_fu_852_p2 = (($signed(select_ln1935_3_fu_846_p3) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1935_fu_767_p2 = (($signed(select_ln1935_fu_757_p3) < $signed(10'd255)) ? 1'b1 : 1'b0);

assign icmp_ln1936_1_fu_948_p2 = (($signed(select_ln1936_1_fu_941_p3) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1936_2_fu_958_p2 = (($signed(select_ln1936_2_reg_1403) < $signed(12'd255)) ? 1'b1 : 1'b0);

assign icmp_ln1936_3_fu_970_p2 = (($signed(select_ln1936_3_fu_963_p3) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1936_fu_936_p2 = (($signed(select_ln1936_reg_1393) < $signed(12'd255)) ? 1'b1 : 1'b0);

assign lshr_ln1904_cast_fu_224_p4 = {{width[11:1]}};

assign mul_ln1930_3_fu_390_p0 = mul_ln1930_3_fu_390_p00;

assign mul_ln1930_3_fu_390_p00 = tmp_reg_1214;

assign mul_ln1930_3_fu_390_p1 = 17'd306;

assign mul_ln1930_fu_365_p0 = mul_ln1930_fu_365_p00;

assign mul_ln1930_fu_365_p00 = trunc_ln145_reg_1153;

assign mul_ln1930_fu_365_p1 = 17'd306;

assign or_ln174_i_fu_992_p7 = {{{{{{select_ln301_5_fu_986_p3}, {select_ln301_4_reg_1388_pp0_iter9_reg}}, {select_ln301_3_reg_1368_pp0_iter9_reg}}, {select_ln301_2_fu_980_p3}}, {select_ln301_1_reg_1383_pp0_iter9_reg}}, {select_ln301_reg_1353_pp0_iter9_reg}};

assign select_ln1934_1_fu_733_p3 = ((icmp_ln1934_reg_1318[0:0] == 1'b1) ? trunc_ln1934_reg_1313 : 10'd255);

assign select_ln1934_2_fu_707_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? add_ln1925_1_fu_590_p2 : zext_ln1931_2_fu_643_p1);

assign select_ln1934_3_fu_782_p3 = ((icmp_ln1934_2_reg_1348[0:0] == 1'b1) ? trunc_ln1934_1_reg_1343 : 10'd255);

assign select_ln1934_fu_555_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? add_ln1925_fu_438_p2 : zext_ln1931_fu_491_p1);

assign select_ln1935_1_fu_822_p3 = ((icmp_ln1935_reg_1363[0:0] == 1'b1) ? trunc_ln1935_reg_1358 : 9'd255);

assign select_ln1935_2_fu_806_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? sub_ln1926_1_reg_1323 : add_ln1931_1_fu_776_p2);

assign select_ln1935_3_fu_846_p3 = ((icmp_ln1935_2_reg_1378[0:0] == 1'b1) ? trunc_ln1935_1_reg_1373 : 9'd255);

assign select_ln1935_fu_757_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? sub_ln1926_reg_1293 : add_ln1931_fu_727_p2);

assign select_ln1936_1_fu_941_p3 = ((icmp_ln1936_fu_936_p2[0:0] == 1'b1) ? trunc_ln1936_reg_1398 : 11'd255);

assign select_ln1936_2_fu_926_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? add_ln1927_1_reg_1328_pp0_iter7_reg : sext_ln1934_1_fu_922_p1);

assign select_ln1936_3_fu_963_p3 = ((icmp_ln1936_2_fu_958_p2[0:0] == 1'b1) ? trunc_ln1936_1_reg_1408 : 11'd255);

assign select_ln1936_fu_893_p3 = ((cmp69_i_reg_1116[0:0] == 1'b1) ? add_ln1927_reg_1298_pp0_iter7_reg : sext_ln1934_fu_889_p1);

assign select_ln301_1_fu_838_p3 = ((icmp_ln1935_1_fu_828_p2[0:0] == 1'b1) ? trunc_ln301_1_fu_834_p1 : 8'd0);

assign select_ln301_2_fu_980_p3 = ((icmp_ln1936_1_reg_1413[0:0] == 1'b1) ? trunc_ln301_2_reg_1418 : 8'd0);

assign select_ln301_3_fu_798_p3 = ((icmp_ln1934_3_fu_788_p2[0:0] == 1'b1) ? trunc_ln301_3_fu_794_p1 : 8'd0);

assign select_ln301_4_fu_862_p3 = ((icmp_ln1935_3_fu_852_p2[0:0] == 1'b1) ? trunc_ln301_4_fu_858_p1 : 8'd0);

assign select_ln301_5_fu_986_p3 = ((icmp_ln1936_3_reg_1423[0:0] == 1'b1) ? trunc_ln301_5_reg_1428 : 8'd0);

assign select_ln301_fu_749_p3 = ((icmp_ln1934_1_fu_739_p2[0:0] == 1'b1) ? trunc_ln301_fu_745_p1 : 8'd0);

assign sext_ln1925_2_fu_435_p1 = $signed(trunc_ln_reg_1263);

assign sext_ln1925_5_fu_587_p1 = $signed(trunc_ln1925_6_reg_1278);

assign sext_ln1926_1_fu_453_p1 = $signed(trunc_ln1_fu_444_p4);

assign sext_ln1926_3_fu_605_p1 = $signed(trunc_ln1926_1_fu_596_p4);

assign sext_ln1927_1_fu_624_p1 = $signed(trunc_ln1927_1_fu_615_p4);

assign sext_ln1927_fu_472_p1 = $signed(trunc_ln2_fu_463_p4);

assign sext_ln1931_1_fu_525_p1 = $signed(shl_ln1931_1_fu_517_p3);

assign sext_ln1931_2_fu_724_p1 = $signed(trunc_ln1931_2_reg_1303);

assign sext_ln1931_3_fu_665_p1 = $signed(shl_ln1931_2_fu_657_p3);

assign sext_ln1931_4_fu_677_p1 = $signed(shl_ln1931_3_fu_669_p3);

assign sext_ln1931_5_fu_773_p1 = $signed(trunc_ln1931_5_reg_1333);

assign sext_ln1931_fu_513_p1 = $signed(shl_ln_fu_505_p3);

assign sext_ln1932_1_fu_879_p1 = $signed(trunc_ln4_fu_870_p4);

assign sext_ln1932_3_fu_912_p1 = $signed(trunc_ln1932_1_fu_903_p4);

assign sext_ln1934_1_fu_922_p1 = $signed(add_ln1932_1_fu_916_p2);

assign sext_ln1934_fu_889_p1 = $signed(add_ln1932_fu_883_p2);

assign shl_ln1931_1_fu_517_p3 = {{sub_ln1931_fu_499_p2}, {3'd0}};

assign shl_ln1931_2_fu_657_p3 = {{sub_ln1931_2_fu_651_p2}, {9'd0}};

assign shl_ln1931_3_fu_669_p3 = {{sub_ln1931_2_fu_651_p2}, {3'd0}};

assign shl_ln_fu_505_p3 = {{sub_ln1931_fu_499_p2}, {9'd0}};

assign start_out = real_start;

assign sub_ln1926_1_fu_609_p2 = ($signed(zext_ln1925_8_fu_581_p1) - $signed(sext_ln1926_3_fu_605_p1));

assign sub_ln1926_fu_457_p2 = ($signed(zext_ln1925_3_fu_429_p1) - $signed(sext_ln1926_1_fu_453_p1));

assign sub_ln1931_1_fu_529_p2 = ($signed(sext_ln1931_fu_513_p1) - $signed(sext_ln1931_1_fu_525_p1));

assign sub_ln1931_2_fu_651_p2 = (zext_ln1923_2_fu_572_p1 - zext_ln1931_3_fu_647_p1);

assign sub_ln1931_3_fu_681_p2 = ($signed(sext_ln1931_3_fu_665_p1) - $signed(sext_ln1931_4_fu_677_p1));

assign sub_ln1931_fu_499_p2 = (zext_ln1923_fu_420_p1 - zext_ln1931_1_fu_495_p1);

assign sub_ln1932_1_fu_697_p2 = (zext_ln1925_5_fu_575_p1 - zext_ln1931_3_fu_647_p1);

assign sub_ln1932_fu_545_p2 = (zext_ln1925_fu_423_p1 - zext_ln1931_1_fu_495_p1);

assign trunc_ln145_2_fu_270_p4 = {{srcImg_dout[23:16]}};

assign trunc_ln145_fu_256_p1 = srcImg_dout[7:0];

assign trunc_ln1926_1_fu_596_p4 = {{grp_fu_1072_p3[17:10]}};

assign trunc_ln1927_1_fu_615_p4 = {{grp_fu_1081_p2[20:10]}};

assign trunc_ln1931_3_fu_634_p4 = {{grp_fu_1088_p3[17:10]}};

assign trunc_ln1932_1_fu_903_p4 = {{grp_fu_1104_p2[19:10]}};

assign trunc_ln1934_1_fu_714_p1 = select_ln1934_2_fu_707_p3[9:0];

assign trunc_ln1934_fu_562_p1 = select_ln1934_fu_555_p3[9:0];

assign trunc_ln1935_1_fu_812_p1 = select_ln1935_2_fu_806_p3[8:0];

assign trunc_ln1935_fu_763_p1 = select_ln1935_fu_757_p3[8:0];

assign trunc_ln1936_1_fu_932_p1 = select_ln1936_2_fu_926_p3[10:0];

assign trunc_ln1936_fu_899_p1 = select_ln1936_fu_893_p3[10:0];

assign trunc_ln1_fu_444_p4 = {{grp_fu_1047_p3[17:10]}};

assign trunc_ln2_fu_463_p4 = {{grp_fu_1056_p2[20:10]}};

assign trunc_ln301_1_fu_834_p1 = select_ln1935_1_fu_822_p3[7:0];

assign trunc_ln301_2_fu_954_p1 = select_ln1936_1_fu_941_p3[7:0];

assign trunc_ln301_3_fu_794_p1 = select_ln1934_3_fu_782_p3[7:0];

assign trunc_ln301_4_fu_858_p1 = select_ln1935_3_fu_846_p3[7:0];

assign trunc_ln301_5_fu_976_p1 = select_ln1936_3_fu_963_p3[7:0];

assign trunc_ln301_fu_745_p1 = select_ln1934_1_fu_733_p3[7:0];

assign trunc_ln3_fu_482_p4 = {{grp_fu_1063_p3[17:10]}};

assign trunc_ln4_fu_870_p4 = {{grp_fu_1097_p2[19:10]}};

assign trunc_ln9_fu_308_p4 = {{srcImg_dout[47:40]}};

assign x_3_fu_245_p2 = (x_reg_203 + 11'd1);

assign xor_ln1923_1_fu_322_p2 = (trunc_ln9_fu_308_p4 ^ 8'd128);

assign xor_ln1923_fu_294_p2 = (trunc_ln145_2_fu_270_p4 ^ 8'd128);

assign xor_ln1924_1_fu_374_p2 = (trunc_ln145_3_reg_1173 ^ 8'd128);

assign xor_ln1924_fu_349_p2 = (trunc_ln145_1_reg_1162 ^ 8'd128);

assign y_3_fu_234_p2 = (y_reg_192 + 12'd1);

assign zext_ln1923_2_fu_572_p1 = trunc_ln9_reg_1194_pp0_iter4_reg;

assign zext_ln1923_fu_420_p1 = trunc_ln145_2_reg_1168_pp0_iter4_reg;

assign zext_ln1925_2_fu_426_p1 = trunc_ln145_reg_1153_pp0_iter4_reg;

assign zext_ln1925_3_fu_429_p1 = trunc_ln145_reg_1153_pp0_iter4_reg;

assign zext_ln1925_4_fu_432_p1 = trunc_ln145_reg_1153_pp0_iter4_reg;

assign zext_ln1925_5_fu_575_p1 = tmp_reg_1214_pp0_iter4_reg;

assign zext_ln1925_7_fu_578_p1 = tmp_reg_1214_pp0_iter4_reg;

assign zext_ln1925_8_fu_581_p1 = tmp_reg_1214_pp0_iter4_reg;

assign zext_ln1925_9_fu_584_p1 = tmp_reg_1214_pp0_iter4_reg;

assign zext_ln1925_fu_423_p1 = trunc_ln145_reg_1153_pp0_iter4_reg;

assign zext_ln1931_1_fu_495_p1 = trunc_ln3_fu_482_p4;

assign zext_ln1931_2_fu_643_p1 = trunc_ln1931_3_fu_634_p4;

assign zext_ln1931_3_fu_647_p1 = trunc_ln1931_3_fu_634_p4;

assign zext_ln1931_fu_491_p1 = trunc_ln3_fu_482_p4;

endmodule //bd_c2dc_hsc_0_v_csc_core
