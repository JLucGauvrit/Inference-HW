// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_vscale_core_polyphase (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        SrcImg_dout,
        SrcImg_empty_n,
        SrcImg_read,
        OutImg_din,
        OutImg_full_n,
        OutImg_write,
        HeightIn,
        WidthIn,
        HeightOut,
        LineRate,
        vfltCoeff_0_address0,
        vfltCoeff_0_ce0,
        vfltCoeff_0_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state5 = 7'd4;
parameter    ap_ST_fsm_state6 = 7'd8;
parameter    ap_ST_fsm_state7 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state20 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [47:0] SrcImg_dout;
input   SrcImg_empty_n;
output   SrcImg_read;
output  [47:0] OutImg_din;
input   OutImg_full_n;
output   OutImg_write;
input  [15:0] HeightIn;
input  [12:0] WidthIn;
input  [11:0] HeightOut;
input  [31:0] LineRate;
output  [8:0] vfltCoeff_0_address0;
output   vfltCoeff_0_ce0;
input  [15:0] vfltCoeff_0_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg SrcImg_read;
reg OutImg_write;
reg vfltCoeff_0_ce0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    SrcImg_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln215_reg_3183;
reg   [0:0] brmerge_reg_3144;
reg   [0:0] cmp81_reg_3140;
reg    OutImg_blk_n;
reg    ap_enable_reg_pp1_iter11;
reg   [0:0] OutputWriteEn_reg_3131;
reg   [8:0] indvar_flatten_reg_488;
reg   [6:0] i_reg_499;
reg   [2:0] j_reg_510;
reg   [11:0] x_reg_591;
reg   [7:0] PixArray_val_V_5_5_1_reg_716;
reg   [7:0] PixArray_val_V_5_5_1_reg_716_pp1_iter4_reg;
wire    ap_block_state8_pp1_stage0_iter0;
reg    ap_predicate_op220_read_state9;
reg    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_state12_pp1_stage0_iter4;
wire    ap_block_state13_pp1_stage0_iter5;
wire    ap_block_state14_pp1_stage0_iter6;
wire    ap_block_state15_pp1_stage0_iter7;
wire    ap_block_state16_pp1_stage0_iter8;
wire    ap_block_state17_pp1_stage0_iter9;
wire    ap_block_state18_pp1_stage0_iter10;
reg    ap_block_state19_pp1_stage0_iter11;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] PixArray_val_V_5_5_1_reg_716_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_5_1_reg_716_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_5_4_1_reg_727;
reg   [7:0] PixArray_val_V_5_4_1_reg_727_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_5_4_1_reg_727_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_4_1_reg_727_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_5_3_1_reg_738;
reg   [7:0] PixArray_val_V_5_3_1_reg_738_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_5_3_1_reg_738_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_3_1_reg_738_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_5_2_1_reg_749;
reg   [7:0] PixArray_val_V_5_2_1_reg_749_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_5_2_1_reg_749_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_2_1_reg_749_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_5_1_1_reg_760;
reg   [7:0] PixArray_val_V_5_1_1_reg_760_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_5_1_1_reg_760_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_1_1_reg_760_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_5_0_1_reg_771;
reg   [7:0] PixArray_val_V_5_0_1_reg_771_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_5_0_1_reg_771_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_5_0_1_reg_771_pp1_iter6_reg;
reg   [7:0] PixArray_val_V_4_5_0_reg_782;
reg   [7:0] PixArray_val_V_4_5_0_reg_782_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_5_0_reg_782_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_4_4_0_reg_792;
reg   [7:0] PixArray_val_V_4_4_0_reg_792_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_4_0_reg_792_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_4_3_0_reg_802;
reg   [7:0] PixArray_val_V_4_3_0_reg_802_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_3_0_reg_802_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_4_2_0_reg_812;
reg   [7:0] PixArray_val_V_4_2_0_reg_812_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_2_0_reg_812_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_4_1_0_reg_822;
reg   [7:0] PixArray_val_V_4_1_0_reg_822_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_1_0_reg_822_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_4_0_0_reg_832;
reg   [7:0] PixArray_val_V_4_0_0_reg_832_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_4_0_0_reg_832_pp1_iter5_reg;
reg   [7:0] PixArray_val_V_3_5_0_reg_842;
reg   [7:0] PixArray_val_V_3_5_0_reg_842_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_3_4_0_reg_852;
reg   [7:0] PixArray_val_V_3_4_0_reg_852_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_3_3_0_reg_862;
reg   [7:0] PixArray_val_V_3_3_0_reg_862_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_3_2_0_reg_872;
reg   [7:0] PixArray_val_V_3_2_0_reg_872_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_3_1_0_reg_882;
reg   [7:0] PixArray_val_V_3_1_0_reg_882_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_3_0_0_reg_892;
reg   [7:0] PixArray_val_V_3_0_0_reg_892_pp1_iter4_reg;
reg   [7:0] PixArray_val_V_2_5_0_reg_902;
reg   [7:0] PixArray_val_V_2_4_0_reg_912;
reg   [7:0] PixArray_val_V_2_3_0_reg_922;
reg   [7:0] PixArray_val_V_2_2_0_reg_932;
reg   [7:0] PixArray_val_V_2_1_0_reg_942;
reg   [7:0] PixArray_val_V_2_0_0_reg_952;
wire   [31:0] zext_ln138_fu_1024_p1;
reg   [31:0] zext_ln138_reg_2972;
wire   [16:0] zext_ln141_fu_1028_p1;
reg   [16:0] zext_ln141_reg_2977;
wire   [11:0] YLoopSize_fu_1046_p2;
reg   [11:0] YLoopSize_reg_2982;
reg   [11:0] XLoopSize_reg_2988;
wire   [8:0] add_ln166_1_fu_1068_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln166_fu_1074_p2;
reg   [0:0] icmp_ln166_reg_2999;
wire   [2:0] select_ln166_fu_1092_p3;
reg   [2:0] select_ln166_reg_3003;
reg   [2:0] select_ln166_reg_3003_pp0_iter1_reg;
wire   [6:0] select_ln166_1_fu_1100_p3;
reg   [6:0] select_ln166_1_reg_3008;
reg   [6:0] select_ln166_1_reg_3008_pp0_iter1_reg;
wire   [5:0] trunc_ln171_fu_1108_p1;
reg   [5:0] trunc_ln171_reg_3015;
wire   [2:0] add_ln169_fu_1112_p2;
wire   [0:0] icmp_ln176_fu_1165_p2;
reg   [0:0] icmp_ln176_reg_3030;
wire    ap_CS_fsm_state5;
wire   [0:0] cmp40233_fu_1170_p2;
reg   [0:0] cmp40233_reg_3034;
wire   [11:0] y_1_fu_1175_p2;
reg   [11:0] y_1_reg_3038;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln185_fu_1186_p2;
reg   [0:0] icmp_ln185_reg_3046;
wire   [0:0] icmp_ln176_1_fu_1181_p2;
wire   [0:0] GetNewLine_1_fu_1202_p2;
reg   [0:0] GetNewLine_1_reg_3055;
wire   [31:0] offset_1_fu_1214_p2;
reg   [31:0] offset_1_reg_3061;
wire   [0:0] icmp_ln204_1_fu_1228_p2;
reg   [0:0] icmp_ln204_1_reg_3066;
wire   [15:0] PixArrayLoc_3_fu_1233_p3;
reg   [15:0] PixArrayLoc_3_reg_3071;
wire   [0:0] icmp164_fu_1251_p2;
reg   [0:0] icmp164_reg_3077;
wire   [0:0] cmp106_fu_1257_p2;
reg   [0:0] cmp106_reg_3082;
wire   [31:0] offset_4_fu_1331_p3;
reg   [31:0] offset_4_reg_3116;
wire    ap_CS_fsm_state7;
wire   [7:0] Phase_fu_1338_p3;
reg   [7:0] Phase_reg_3121;
wire   [31:0] WriteLocNext_2_fu_1345_p3;
reg   [31:0] WriteLocNext_2_reg_3126;
wire   [0:0] OutputWriteEn_fu_1352_p2;
wire   [0:0] GetNewLine_2_fu_1357_p3;
reg   [0:0] GetNewLine_2_reg_3135;
wire   [0:0] cmp81_fu_1382_p2;
wire   [0:0] brmerge_fu_1387_p2;
reg   [5:0] FiltCoeff_0_addr_1_reg_3148;
reg   [5:0] FiltCoeff_1_addr_1_reg_3153;
reg   [5:0] FiltCoeff_2_addr_1_reg_3158;
reg   [5:0] FiltCoeff_3_addr_1_reg_3163;
reg   [5:0] FiltCoeff_4_addr_1_reg_3168;
reg   [5:0] FiltCoeff_5_addr_1_reg_3173;
wire   [11:0] x_1_fu_1392_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln215_fu_1398_p2;
reg   [0:0] icmp_ln215_reg_3183_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_0_addr_reg_3187;
reg   [10:0] LineBuf_val_V_0_addr_reg_3187_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_1_addr_reg_3193;
reg   [10:0] LineBuf_val_V_1_addr_reg_3193_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_2_addr_reg_3199;
reg   [10:0] LineBuf_val_V_2_addr_reg_3199_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_3_addr_reg_3205;
reg   [10:0] LineBuf_val_V_3_addr_reg_3205_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_4_addr_reg_3211;
reg   [10:0] LineBuf_val_V_4_addr_reg_3211_pp1_iter1_reg;
reg   [10:0] LineBuf_val_V_5_addr_reg_3217;
reg   [10:0] LineBuf_val_V_5_addr_reg_3217_pp1_iter1_reg;
wire   [7:0] PixArrayVal_val_V_0_6_fu_1413_p1;
reg   [7:0] PixArrayVal_val_V_0_6_reg_3223;
reg   [7:0] PixArrayVal_val_V_1_6_reg_3231;
reg   [7:0] PixArrayVal_val_V_2_6_reg_3239;
reg   [7:0] PixArrayVal_val_V_3_6_reg_3247;
reg   [7:0] PixArrayVal_val_V_4_6_reg_3255;
reg   [7:0] PixArray_val_V_5_5_2_reg_3263;
wire   [7:0] PixArrayVal_val_V_0_7_fu_1467_p1;
reg   [7:0] PixArrayVal_val_V_0_7_reg_3271;
reg   [7:0] PixArrayVal_val_V_1_7_reg_3278;
reg   [7:0] PixArrayVal_val_V_2_7_reg_3285;
reg   [7:0] PixArrayVal_val_V_3_7_reg_3292;
reg   [7:0] PixArrayVal_val_V_4_7_reg_3299;
reg   [7:0] PixArray_val_V_4_5_reg_3306;
wire   [7:0] PixArrayVal_val_V_0_8_fu_1521_p1;
reg   [7:0] PixArrayVal_val_V_0_8_reg_3313;
reg   [7:0] PixArrayVal_val_V_1_8_reg_3320;
reg   [7:0] PixArrayVal_val_V_2_8_reg_3327;
reg   [7:0] PixArrayVal_val_V_3_8_reg_3334;
reg   [7:0] PixArrayVal_val_V_4_8_reg_3341;
reg   [7:0] PixArray_val_V_3_5_reg_3348;
wire   [7:0] PixArrayVal_val_V_0_9_fu_1575_p1;
reg   [7:0] PixArrayVal_val_V_0_9_reg_3355;
reg   [7:0] PixArrayVal_val_V_1_9_reg_3362;
reg   [7:0] PixArrayVal_val_V_2_9_reg_3369;
reg   [7:0] PixArrayVal_val_V_3_9_reg_3376;
reg   [7:0] PixArrayVal_val_V_4_9_reg_3383;
reg   [7:0] PixArray_val_V_2_5_reg_3390;
wire   [7:0] PixArrayVal_val_V_0_10_fu_1629_p1;
reg   [7:0] PixArrayVal_val_V_0_10_reg_3397;
reg   [7:0] PixArrayVal_val_V_1_10_reg_3404;
reg   [7:0] PixArrayVal_val_V_2_10_reg_3411;
reg   [7:0] PixArrayVal_val_V_3_10_reg_3418;
reg   [7:0] PixArrayVal_val_V_4_10_reg_3425;
reg   [7:0] PixArray_val_V_1_5_reg_3432;
wire   [7:0] PixArray_val_V_0_0_fu_1683_p1;
reg   [47:0] SrcImg_read_reg_3469;
wire   [7:0] PixArray_val_V_5_0_fu_1737_p1;
wire  signed [23:0] sext_ln215_fu_2060_p1;
wire  signed [23:0] sext_ln215_1_fu_2088_p1;
wire  signed [23:0] sext_ln215_2_fu_2116_p1;
wire  signed [23:0] sext_ln215_3_fu_2147_p1;
wire  signed [23:0] sext_ln215_4_fu_2193_p1;
wire  signed [25:0] grp_fu_2751_p3;
reg    ap_enable_reg_pp1_iter7;
wire  signed [23:0] sext_ln215_5_fu_2236_p1;
wire  signed [25:0] grp_fu_2759_p3;
wire  signed [25:0] grp_fu_2767_p3;
wire  signed [25:0] grp_fu_2775_p3;
wire  signed [25:0] grp_fu_2783_p3;
wire  signed [25:0] grp_fu_2791_p3;
wire  signed [26:0] grp_fu_2853_p3;
reg    ap_enable_reg_pp1_iter9;
wire  signed [26:0] grp_fu_2861_p3;
wire  signed [26:0] grp_fu_2869_p3;
wire  signed [26:0] grp_fu_2877_p3;
wire  signed [26:0] grp_fu_2885_p3;
wire  signed [26:0] grp_fu_2893_p3;
wire   [7:0] select_ln301_fu_2329_p3;
reg   [7:0] select_ln301_reg_3894;
wire   [7:0] select_ln301_1_fu_2388_p3;
reg   [7:0] select_ln301_1_reg_3899;
wire   [7:0] select_ln301_2_fu_2447_p3;
reg   [7:0] select_ln301_2_reg_3904;
wire   [7:0] select_ln301_3_fu_2506_p3;
reg   [7:0] select_ln301_3_reg_3909;
wire   [7:0] select_ln301_4_fu_2565_p3;
reg   [7:0] select_ln301_4_reg_3914;
wire   [7:0] select_ln301_5_fu_2624_p3;
reg   [7:0] select_ln301_5_reg_3919;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter10;
reg   [5:0] FiltCoeff_0_address0;
reg    FiltCoeff_0_ce0;
reg    FiltCoeff_0_we0;
wire   [15:0] FiltCoeff_0_q0;
reg   [5:0] FiltCoeff_1_address0;
reg    FiltCoeff_1_ce0;
reg    FiltCoeff_1_we0;
wire   [15:0] FiltCoeff_1_q0;
reg   [5:0] FiltCoeff_2_address0;
reg    FiltCoeff_2_ce0;
reg    FiltCoeff_2_we0;
wire   [15:0] FiltCoeff_2_q0;
reg   [5:0] FiltCoeff_3_address0;
reg    FiltCoeff_3_ce0;
reg    FiltCoeff_3_we0;
wire   [15:0] FiltCoeff_3_q0;
reg   [5:0] FiltCoeff_4_address0;
reg    FiltCoeff_4_ce0;
reg    FiltCoeff_4_we0;
wire   [15:0] FiltCoeff_4_q0;
reg   [5:0] FiltCoeff_5_address0;
reg    FiltCoeff_5_ce0;
reg    FiltCoeff_5_we0;
wire   [15:0] FiltCoeff_5_q0;
wire   [10:0] LineBuf_val_V_0_address0;
reg    LineBuf_val_V_0_ce0;
reg    LineBuf_val_V_0_we0;
wire   [10:0] LineBuf_val_V_0_address1;
reg    LineBuf_val_V_0_ce1;
wire   [47:0] LineBuf_val_V_0_q1;
wire   [10:0] LineBuf_val_V_1_address0;
reg    LineBuf_val_V_1_ce0;
reg    LineBuf_val_V_1_we0;
wire   [47:0] LineBuf_val_V_1_d0;
wire   [10:0] LineBuf_val_V_1_address1;
reg    LineBuf_val_V_1_ce1;
wire   [47:0] LineBuf_val_V_1_q1;
wire   [10:0] LineBuf_val_V_2_address0;
reg    LineBuf_val_V_2_ce0;
reg    LineBuf_val_V_2_we0;
wire   [47:0] LineBuf_val_V_2_d0;
wire   [10:0] LineBuf_val_V_2_address1;
reg    LineBuf_val_V_2_ce1;
wire   [47:0] LineBuf_val_V_2_q1;
wire   [10:0] LineBuf_val_V_3_address0;
reg    LineBuf_val_V_3_ce0;
reg    LineBuf_val_V_3_we0;
wire   [47:0] LineBuf_val_V_3_d0;
wire   [10:0] LineBuf_val_V_3_address1;
reg    LineBuf_val_V_3_ce1;
wire   [47:0] LineBuf_val_V_3_q1;
wire   [10:0] LineBuf_val_V_4_address0;
reg    LineBuf_val_V_4_ce0;
reg    LineBuf_val_V_4_we0;
wire   [47:0] LineBuf_val_V_4_d0;
wire   [10:0] LineBuf_val_V_4_address1;
reg    LineBuf_val_V_4_ce1;
wire   [47:0] LineBuf_val_V_4_q1;
wire   [10:0] LineBuf_val_V_5_address0;
reg    LineBuf_val_V_5_ce0;
reg    LineBuf_val_V_5_we0;
wire   [47:0] LineBuf_val_V_5_d0;
wire   [10:0] LineBuf_val_V_5_address1;
reg    LineBuf_val_V_5_ce1;
wire   [47:0] LineBuf_val_V_5_q1;
reg   [6:0] ap_phi_mux_i_phi_fu_503_p4;
wire    ap_block_pp0_stage0;
reg   [11:0] y_reg_521;
wire    ap_CS_fsm_state20;
reg   [0:0] GetNewLine_reg_532;
reg   [15:0] PixArrayLoc_reg_544;
reg   [31:0] WriteLocNext_3_reg_555;
reg   [7:0] PhaseV_reg_567;
reg   [31:0] offset_reg_579;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_0_reg_602;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_0_reg_602;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArrayVal_val_V_4_reg_612;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArrayVal_val_V_4_reg_612;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArrayVal_val_V_3_reg_622;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArrayVal_val_V_3_reg_622;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArrayVal_val_V_2_reg_632;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArrayVal_val_V_2_reg_632;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArrayVal_val_V_1_reg_642;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArrayVal_val_V_1_reg_642;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArrayVal_val_V_0_reg_652;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArrayVal_val_V_0_reg_652;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_5_0_phi_fu_665_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_5_0_reg_662;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_5_0_reg_662;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_5_0_reg_662;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_4_0_phi_fu_674_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_4_0_reg_671;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_4_0_reg_671;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_4_0_reg_671;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_3_0_phi_fu_683_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_3_0_reg_680;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_3_0_reg_680;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_3_0_reg_680;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_2_0_phi_fu_692_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_2_0_reg_689;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_2_0_reg_689;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_2_0_reg_689;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_1_0_phi_fu_701_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_1_0_reg_698;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_1_0_reg_698;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_1_0_reg_698;
reg   [7:0] ap_phi_mux_PixArray_val_V_0_0_0_phi_fu_710_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_0_0_0_reg_707;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_0_0_0_reg_707;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_0_0_0_reg_707;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_1_reg_716;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_1_reg_716;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_1_reg_716;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_5_1_reg_716;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_4_1_reg_727;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_4_1_reg_727;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_4_1_reg_727;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_4_1_reg_727;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_3_1_reg_738;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_3_1_reg_738;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_3_1_reg_738;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_3_1_reg_738;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_2_1_reg_749;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_2_1_reg_749;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_2_1_reg_749;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_2_1_reg_749;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_1_1_reg_760;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_1_1_reg_760;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_1_1_reg_760;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_1_1_reg_760;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_5_0_1_reg_771;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_5_0_1_reg_771;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_5_0_1_reg_771;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_5_0_1_reg_771;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_5_0_reg_782;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_5_0_reg_782;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_5_0_reg_782;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_5_0_reg_782;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_4_0_reg_792;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_4_0_reg_792;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_4_0_reg_792;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_4_0_reg_792;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_3_0_reg_802;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_3_0_reg_802;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_3_0_reg_802;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_3_0_reg_802;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_2_0_reg_812;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_2_0_reg_812;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_2_0_reg_812;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_2_0_reg_812;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_1_0_reg_822;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_1_0_reg_822;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_1_0_reg_822;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_1_0_reg_822;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_4_0_0_reg_832;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_4_0_0_reg_832;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_4_0_0_reg_832;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_4_0_0_reg_832;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_5_0_reg_842;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_5_0_reg_842;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_5_0_reg_842;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_5_0_reg_842;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_4_0_reg_852;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_4_0_reg_852;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_4_0_reg_852;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_4_0_reg_852;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_3_0_reg_862;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_3_0_reg_862;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_3_0_reg_862;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_3_0_reg_862;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_2_0_reg_872;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_2_0_reg_872;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_2_0_reg_872;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_2_0_reg_872;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_1_0_reg_882;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_1_0_reg_882;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_1_0_reg_882;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_1_0_reg_882;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_3_0_0_reg_892;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_3_0_0_reg_892;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_3_0_0_reg_892;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_3_0_0_reg_892;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_5_0_reg_902;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_5_0_reg_902;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_5_0_reg_902;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_5_0_reg_902;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_4_0_reg_912;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_4_0_reg_912;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_4_0_reg_912;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_4_0_reg_912;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_3_0_reg_922;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_3_0_reg_922;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_3_0_reg_922;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_3_0_reg_922;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_2_0_reg_932;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_2_0_reg_932;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_2_0_reg_932;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_2_0_reg_932;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_1_0_reg_942;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_1_0_reg_942;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_1_0_reg_942;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_1_0_reg_942;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_2_0_0_reg_952;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_2_0_0_reg_952;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_2_0_0_reg_952;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_2_0_0_reg_952;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_5_0_reg_962;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_5_0_reg_962;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_5_0_reg_962;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_5_0_reg_962;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_4_0_reg_971;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_4_0_reg_971;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_4_0_reg_971;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_4_0_reg_971;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_3_0_reg_980;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_3_0_reg_980;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_3_0_reg_980;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_3_0_reg_980;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_2_0_reg_989;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_2_0_reg_989;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_2_0_reg_989;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_2_0_reg_989;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_1_0_reg_998;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_1_0_reg_998;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_1_0_reg_998;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_1_0_reg_998;
wire   [7:0] ap_phi_reg_pp1_iter0_PixArray_val_V_1_0_0_reg_1007;
reg   [7:0] ap_phi_reg_pp1_iter1_PixArray_val_V_1_0_0_reg_1007;
reg   [7:0] ap_phi_reg_pp1_iter2_PixArray_val_V_1_0_0_reg_1007;
reg   [7:0] ap_phi_reg_pp1_iter3_PixArray_val_V_1_0_0_reg_1007;
wire   [63:0] zext_ln171_2_fu_1151_p1;
wire   [63:0] zext_ln166_fu_1156_p1;
wire   [63:0] idxprom5_i_fu_1363_p1;
wire   [63:0] idxprom5_i47_fu_1403_p1;
reg    ap_block_pp1_stage0_01001;
wire   [15:0] HeightOut_cast_fu_1016_p1;
wire   [0:0] icmp_ln141_fu_1032_p2;
wire   [11:0] empty_fu_1020_p1;
wire   [11:0] TotalLines_fu_1038_p3;
wire   [12:0] add_ln143_fu_1052_p2;
wire   [0:0] icmp_ln169_fu_1086_p2;
wire   [6:0] add_ln166_fu_1080_p2;
wire   [7:0] tmp_1_fu_1125_p3;
wire   [8:0] tmp_cast_fu_1118_p3;
wire   [8:0] zext_ln171_fu_1132_p1;
wire   [8:0] sub_ln171_fu_1136_p2;
wire   [8:0] zext_ln171_1_fu_1142_p1;
wire   [8:0] add_ln171_fu_1145_p2;
wire   [15:0] tmp_fu_1192_p4;
wire   [15:0] PixArrayLoc_1_fu_1208_p2;
wire   [15:0] PixArrayLoc_2_fu_1220_p3;
wire   [9:0] tmp_3_fu_1241_p4;
wire   [5:0] trunc_ln_fu_1263_p4;
wire   [31:0] offset_2_fu_1277_p3;
wire   [15:0] tmp_2_fu_1283_p4;
wire   [0:0] icmp_ln204_fu_1293_p2;
wire   [0:0] and_ln204_fu_1299_p2;
wire   [31:0] offset_3_fu_1304_p2;
wire   [31:0] WriteLocNext_fu_1309_p2;
wire   [31:0] select_ln204_fu_1315_p3;
wire   [7:0] zext_ln158_fu_1273_p1;
wire   [31:0] select_ln204_1_fu_1323_p3;
wire   [16:0] PixArrayLoc_2_cast_fu_1373_p1;
wire   [16:0] add79_fu_1376_p2;
wire   [7:0] select_ln265_5_fu_1821_p3;
wire   [7:0] select_ln265_fu_1791_p3;
wire   [7:0] select_ln265_1_fu_1797_p3;
wire   [7:0] select_ln265_2_fu_1803_p3;
wire   [7:0] select_ln265_3_fu_1809_p3;
wire   [7:0] select_ln265_4_fu_1815_p3;
wire   [7:0] select_ln265_11_fu_1874_p3;
wire   [7:0] select_ln265_6_fu_1844_p3;
wire   [7:0] select_ln265_7_fu_1850_p3;
wire   [7:0] select_ln265_8_fu_1856_p3;
wire   [7:0] select_ln265_9_fu_1862_p3;
wire   [7:0] select_ln265_10_fu_1868_p3;
wire   [7:0] select_ln265_17_fu_1927_p3;
wire   [7:0] select_ln265_12_fu_1897_p3;
wire   [7:0] select_ln265_13_fu_1903_p3;
wire   [7:0] select_ln265_14_fu_1909_p3;
wire   [7:0] select_ln265_15_fu_1915_p3;
wire   [7:0] select_ln265_16_fu_1921_p3;
wire   [7:0] select_ln265_23_fu_1980_p3;
wire   [7:0] select_ln265_18_fu_1950_p3;
wire   [7:0] select_ln265_19_fu_1956_p3;
wire   [7:0] select_ln265_20_fu_1962_p3;
wire   [7:0] select_ln265_21_fu_1968_p3;
wire   [7:0] select_ln265_22_fu_1974_p3;
wire   [7:0] select_ln265_29_fu_2033_p3;
wire   [7:0] select_ln265_24_fu_2003_p3;
wire   [7:0] select_ln265_25_fu_2009_p3;
wire   [7:0] select_ln265_26_fu_2015_p3;
wire   [7:0] select_ln265_27_fu_2021_p3;
wire   [7:0] select_ln265_28_fu_2027_p3;
wire  signed [23:0] grp_fu_2643_p3;
wire  signed [23:0] grp_fu_2652_p3;
wire  signed [23:0] grp_fu_2661_p3;
wire  signed [23:0] grp_fu_2670_p3;
wire  signed [23:0] grp_fu_2679_p3;
wire  signed [23:0] grp_fu_2688_p3;
wire  signed [24:0] grp_fu_2697_p3;
wire  signed [24:0] grp_fu_2706_p3;
wire  signed [24:0] grp_fu_2715_p3;
wire  signed [24:0] grp_fu_2724_p3;
wire  signed [24:0] grp_fu_2733_p3;
wire  signed [24:0] grp_fu_2742_p3;
wire  signed [25:0] grp_fu_2799_p3;
wire  signed [25:0] grp_fu_2808_p3;
wire  signed [25:0] grp_fu_2817_p3;
wire  signed [25:0] grp_fu_2826_p3;
wire  signed [25:0] grp_fu_2835_p3;
wire  signed [25:0] grp_fu_2844_p3;
wire  signed [26:0] grp_fu_2901_p3;
wire   [6:0] tmp_5_fu_2285_p4;
wire   [0:0] tmp_4_fu_2278_p3;
wire   [0:0] xor_ln301_fu_2309_p2;
wire   [0:0] icmp_ln318_fu_2294_p2;
wire   [0:0] or_ln301_fu_2323_p2;
wire   [7:0] select_ln301_6_fu_2315_p3;
wire   [7:0] trunc_ln2_fu_2300_p4;
wire  signed [26:0] grp_fu_2912_p3;
wire   [6:0] tmp_7_fu_2344_p4;
wire   [0:0] tmp_6_fu_2337_p3;
wire   [0:0] xor_ln301_1_fu_2368_p2;
wire   [0:0] icmp_ln318_1_fu_2353_p2;
wire   [0:0] or_ln301_1_fu_2382_p2;
wire   [7:0] select_ln301_7_fu_2374_p3;
wire   [7:0] trunc_ln301_1_fu_2359_p4;
wire  signed [26:0] grp_fu_2923_p3;
wire   [6:0] tmp_9_fu_2403_p4;
wire   [0:0] tmp_8_fu_2396_p3;
wire   [0:0] xor_ln301_2_fu_2427_p2;
wire   [0:0] icmp_ln318_2_fu_2412_p2;
wire   [0:0] or_ln301_2_fu_2441_p2;
wire   [7:0] select_ln301_8_fu_2433_p3;
wire   [7:0] trunc_ln301_2_fu_2418_p4;
wire  signed [26:0] grp_fu_2934_p3;
wire   [6:0] tmp_11_fu_2462_p4;
wire   [0:0] tmp_10_fu_2455_p3;
wire   [0:0] xor_ln301_3_fu_2486_p2;
wire   [0:0] icmp_ln318_3_fu_2471_p2;
wire   [0:0] or_ln301_3_fu_2500_p2;
wire   [7:0] select_ln301_9_fu_2492_p3;
wire   [7:0] trunc_ln301_3_fu_2477_p4;
wire  signed [26:0] grp_fu_2945_p3;
wire   [6:0] tmp_13_fu_2521_p4;
wire   [0:0] tmp_12_fu_2514_p3;
wire   [0:0] xor_ln301_4_fu_2545_p2;
wire   [0:0] icmp_ln318_4_fu_2530_p2;
wire   [0:0] or_ln301_4_fu_2559_p2;
wire   [7:0] select_ln301_10_fu_2551_p3;
wire   [7:0] trunc_ln301_4_fu_2536_p4;
wire  signed [26:0] grp_fu_2956_p3;
wire   [6:0] tmp_15_fu_2580_p4;
wire   [0:0] tmp_14_fu_2573_p3;
wire   [0:0] xor_ln301_5_fu_2604_p2;
wire   [0:0] icmp_ln318_5_fu_2589_p2;
wire   [0:0] or_ln301_5_fu_2618_p2;
wire   [7:0] select_ln301_11_fu_2610_p3;
wire   [7:0] trunc_ln301_5_fu_2595_p4;
wire   [7:0] grp_fu_2643_p0;
wire  signed [15:0] grp_fu_2643_p1;
wire   [12:0] grp_fu_2643_p2;
wire   [7:0] grp_fu_2652_p0;
wire  signed [15:0] grp_fu_2652_p1;
wire   [12:0] grp_fu_2652_p2;
wire   [7:0] grp_fu_2661_p0;
wire  signed [15:0] grp_fu_2661_p1;
wire   [12:0] grp_fu_2661_p2;
wire   [7:0] grp_fu_2670_p0;
wire  signed [15:0] grp_fu_2670_p1;
wire   [12:0] grp_fu_2670_p2;
wire   [7:0] grp_fu_2679_p0;
wire  signed [15:0] grp_fu_2679_p1;
wire   [12:0] grp_fu_2679_p2;
wire   [7:0] grp_fu_2688_p0;
wire  signed [15:0] grp_fu_2688_p1;
wire   [12:0] grp_fu_2688_p2;
wire   [7:0] grp_fu_2697_p0;
wire  signed [15:0] grp_fu_2697_p1;
wire   [7:0] grp_fu_2706_p0;
wire  signed [15:0] grp_fu_2706_p1;
wire   [7:0] grp_fu_2715_p0;
wire  signed [15:0] grp_fu_2715_p1;
wire   [7:0] grp_fu_2724_p0;
wire  signed [15:0] grp_fu_2724_p1;
wire   [7:0] grp_fu_2733_p0;
wire  signed [15:0] grp_fu_2733_p1;
wire   [7:0] grp_fu_2742_p0;
wire  signed [15:0] grp_fu_2742_p1;
wire   [7:0] grp_fu_2751_p0;
wire  signed [15:0] grp_fu_2751_p1;
wire   [7:0] grp_fu_2759_p0;
wire  signed [15:0] grp_fu_2759_p1;
wire   [7:0] grp_fu_2767_p0;
wire  signed [15:0] grp_fu_2767_p1;
wire   [7:0] grp_fu_2775_p0;
wire  signed [15:0] grp_fu_2775_p1;
wire   [7:0] grp_fu_2783_p0;
wire  signed [15:0] grp_fu_2783_p1;
wire   [7:0] grp_fu_2791_p0;
wire  signed [15:0] grp_fu_2791_p1;
wire   [7:0] grp_fu_2799_p0;
wire  signed [15:0] grp_fu_2799_p1;
wire   [7:0] grp_fu_2808_p0;
wire  signed [15:0] grp_fu_2808_p1;
wire   [7:0] grp_fu_2817_p0;
wire  signed [15:0] grp_fu_2817_p1;
wire   [7:0] grp_fu_2826_p0;
wire  signed [15:0] grp_fu_2826_p1;
wire   [7:0] grp_fu_2835_p0;
wire  signed [15:0] grp_fu_2835_p1;
wire   [7:0] grp_fu_2844_p0;
wire  signed [15:0] grp_fu_2844_p1;
wire   [7:0] grp_fu_2853_p0;
wire  signed [15:0] grp_fu_2853_p1;
wire   [7:0] grp_fu_2861_p0;
wire  signed [15:0] grp_fu_2861_p1;
wire   [7:0] grp_fu_2869_p0;
wire  signed [15:0] grp_fu_2869_p1;
wire   [7:0] grp_fu_2877_p0;
wire  signed [15:0] grp_fu_2877_p1;
wire   [7:0] grp_fu_2885_p0;
wire  signed [15:0] grp_fu_2885_p1;
wire   [7:0] grp_fu_2893_p0;
wire  signed [15:0] grp_fu_2893_p1;
wire   [7:0] grp_fu_2901_p0;
wire  signed [15:0] grp_fu_2901_p1;
wire   [7:0] grp_fu_2912_p0;
wire  signed [15:0] grp_fu_2912_p1;
wire   [7:0] grp_fu_2923_p0;
wire  signed [15:0] grp_fu_2923_p1;
wire   [7:0] grp_fu_2934_p0;
wire  signed [15:0] grp_fu_2934_p1;
wire   [7:0] grp_fu_2945_p0;
wire  signed [15:0] grp_fu_2945_p1;
wire   [7:0] grp_fu_2956_p0;
wire  signed [15:0] grp_fu_2956_p1;
reg    grp_fu_2643_ce;
reg    grp_fu_2652_ce;
reg    grp_fu_2661_ce;
reg    grp_fu_2670_ce;
reg    grp_fu_2679_ce;
reg    grp_fu_2688_ce;
reg    grp_fu_2697_ce;
reg    grp_fu_2706_ce;
reg    grp_fu_2715_ce;
reg    grp_fu_2724_ce;
reg    grp_fu_2733_ce;
reg    grp_fu_2742_ce;
reg    grp_fu_2751_ce;
reg    grp_fu_2759_ce;
reg    grp_fu_2767_ce;
reg    grp_fu_2775_ce;
reg    grp_fu_2783_ce;
reg    grp_fu_2791_ce;
reg    grp_fu_2799_ce;
reg    grp_fu_2808_ce;
reg    grp_fu_2817_ce;
reg    grp_fu_2826_ce;
reg    grp_fu_2835_ce;
reg    grp_fu_2844_ce;
reg    grp_fu_2853_ce;
reg    grp_fu_2861_ce;
reg    grp_fu_2869_ce;
reg    grp_fu_2877_ce;
reg    grp_fu_2885_ce;
reg    grp_fu_2893_ce;
reg    grp_fu_2901_ce;
reg    grp_fu_2912_ce;
reg    grp_fu_2923_ce;
reg    grp_fu_2934_ce;
reg    grp_fu_2945_ce;
reg    grp_fu_2956_ce;
reg   [6:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_enable_operation_161;
reg    ap_enable_state8_pp1_iter0_stage0;
reg    ap_enable_operation_176;
reg    ap_enable_state9_pp1_iter1_stage0;
reg    ap_predicate_op229_store_state10;
reg    ap_enable_operation_229;
reg    ap_enable_state10_pp1_iter2_stage0;
reg    ap_enable_operation_163;
reg    ap_enable_operation_183;
reg    ap_predicate_op275_store_state10;
reg    ap_enable_operation_275;
reg    ap_enable_operation_165;
reg    ap_enable_operation_190;
reg    ap_predicate_op267_store_state10;
reg    ap_enable_operation_267;
reg    ap_enable_operation_167;
reg    ap_enable_operation_197;
reg    ap_predicate_op259_store_state10;
reg    ap_enable_operation_259;
reg    ap_enable_operation_169;
reg    ap_enable_operation_204;
reg    ap_predicate_op251_store_state10;
reg    ap_enable_operation_251;
reg    ap_enable_operation_171;
reg    ap_enable_operation_211;
reg    ap_predicate_op243_store_state10;
reg    ap_enable_operation_243;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [23:0] grp_fu_2643_p00;
wire   [23:0] grp_fu_2652_p00;
wire   [23:0] grp_fu_2661_p00;
wire   [23:0] grp_fu_2670_p00;
wire   [23:0] grp_fu_2679_p00;
wire   [23:0] grp_fu_2688_p00;
wire   [23:0] grp_fu_2697_p00;
wire   [23:0] grp_fu_2706_p00;
wire   [23:0] grp_fu_2715_p00;
wire   [23:0] grp_fu_2724_p00;
wire   [23:0] grp_fu_2733_p00;
wire   [23:0] grp_fu_2742_p00;
wire   [23:0] grp_fu_2751_p00;
wire   [23:0] grp_fu_2759_p00;
wire   [23:0] grp_fu_2767_p00;
wire   [23:0] grp_fu_2775_p00;
wire   [23:0] grp_fu_2783_p00;
wire   [23:0] grp_fu_2791_p00;
wire   [23:0] grp_fu_2799_p00;
wire   [23:0] grp_fu_2808_p00;
wire   [23:0] grp_fu_2817_p00;
wire   [23:0] grp_fu_2826_p00;
wire   [23:0] grp_fu_2835_p00;
wire   [23:0] grp_fu_2844_p00;
wire   [23:0] grp_fu_2853_p00;
wire   [23:0] grp_fu_2861_p00;
wire   [23:0] grp_fu_2869_p00;
wire   [23:0] grp_fu_2877_p00;
wire   [23:0] grp_fu_2885_p00;
wire   [23:0] grp_fu_2893_p00;
wire   [23:0] grp_fu_2901_p00;
wire   [23:0] grp_fu_2912_p00;
wire   [23:0] grp_fu_2923_p00;
wire   [23:0] grp_fu_2934_p00;
wire   [23:0] grp_fu_2945_p00;
wire   [23:0] grp_fu_2956_p00;
reg    ap_condition_68;
reg    ap_condition_866;
reg    ap_condition_861;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
end

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_0_address0),
    .ce0(FiltCoeff_0_ce0),
    .we0(FiltCoeff_0_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_0_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_1_address0),
    .ce0(FiltCoeff_1_ce0),
    .we0(FiltCoeff_1_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_1_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_2_address0),
    .ce0(FiltCoeff_2_ce0),
    .we0(FiltCoeff_2_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_2_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_3_address0),
    .ce0(FiltCoeff_3_ce0),
    .we0(FiltCoeff_3_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_3_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_4_address0),
    .ce0(FiltCoeff_4_ce0),
    .we0(FiltCoeff_4_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_4_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_FiltCoeff_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_5_address0),
    .ce0(FiltCoeff_5_ce0),
    .we0(FiltCoeff_5_we0),
    .d0(vfltCoeff_0_q0),
    .q0(FiltCoeff_5_q0)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_0_address0),
    .ce0(LineBuf_val_V_0_ce0),
    .we0(LineBuf_val_V_0_we0),
    .d0(SrcImg_read_reg_3469),
    .address1(LineBuf_val_V_0_address1),
    .ce1(LineBuf_val_V_0_ce1),
    .q1(LineBuf_val_V_0_q1)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_1_address0),
    .ce0(LineBuf_val_V_1_ce0),
    .we0(LineBuf_val_V_1_we0),
    .d0(LineBuf_val_V_1_d0),
    .address1(LineBuf_val_V_1_address1),
    .ce1(LineBuf_val_V_1_ce1),
    .q1(LineBuf_val_V_1_q1)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_2_address0),
    .ce0(LineBuf_val_V_2_ce0),
    .we0(LineBuf_val_V_2_we0),
    .d0(LineBuf_val_V_2_d0),
    .address1(LineBuf_val_V_2_address1),
    .ce1(LineBuf_val_V_2_ce1),
    .q1(LineBuf_val_V_2_q1)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_3_address0),
    .ce0(LineBuf_val_V_3_ce0),
    .we0(LineBuf_val_V_3_we0),
    .d0(LineBuf_val_V_3_d0),
    .address1(LineBuf_val_V_3_address1),
    .ce1(LineBuf_val_V_3_ce1),
    .q1(LineBuf_val_V_3_q1)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_4_address0),
    .ce0(LineBuf_val_V_4_ce0),
    .we0(LineBuf_val_V_4_we0),
    .d0(LineBuf_val_V_4_d0),
    .address1(LineBuf_val_V_4_address1),
    .ce1(LineBuf_val_V_4_ce1),
    .q1(LineBuf_val_V_4_q1)
);

bd_v_multi_scaler_0_0_vscale_core_polyphase_LineBuf_val_V_0 #(
    .DataWidth( 48 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
LineBuf_val_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LineBuf_val_V_5_address0),
    .ce0(LineBuf_val_V_5_ce0),
    .we0(LineBuf_val_V_5_we0),
    .d0(LineBuf_val_V_5_d0),
    .address1(LineBuf_val_V_5_address1),
    .ce1(LineBuf_val_V_5_ce1),
    .q1(LineBuf_val_V_5_q1)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2643_p0),
    .din1(grp_fu_2643_p1),
    .din2(grp_fu_2643_p2),
    .ce(grp_fu_2643_ce),
    .dout(grp_fu_2643_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2652_p0),
    .din1(grp_fu_2652_p1),
    .din2(grp_fu_2652_p2),
    .ce(grp_fu_2652_ce),
    .dout(grp_fu_2652_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2661_p0),
    .din1(grp_fu_2661_p1),
    .din2(grp_fu_2661_p2),
    .ce(grp_fu_2661_ce),
    .dout(grp_fu_2661_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2670_p0),
    .din1(grp_fu_2670_p1),
    .din2(grp_fu_2670_p2),
    .ce(grp_fu_2670_ce),
    .dout(grp_fu_2670_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2679_p0),
    .din1(grp_fu_2679_p1),
    .din2(grp_fu_2679_p2),
    .ce(grp_fu_2679_ce),
    .dout(grp_fu_2679_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_13ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 24 ))
mac_muladd_8ns_16s_13ns_24_4_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2688_p0),
    .din1(grp_fu_2688_p1),
    .din2(grp_fu_2688_p2),
    .ce(grp_fu_2688_ce),
    .dout(grp_fu_2688_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2697_p0),
    .din1(grp_fu_2697_p1),
    .din2(grp_fu_2643_p3),
    .ce(grp_fu_2697_ce),
    .dout(grp_fu_2697_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2706_p0),
    .din1(grp_fu_2706_p1),
    .din2(grp_fu_2652_p3),
    .ce(grp_fu_2706_ce),
    .dout(grp_fu_2706_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2715_p0),
    .din1(grp_fu_2715_p1),
    .din2(grp_fu_2661_p3),
    .ce(grp_fu_2715_ce),
    .dout(grp_fu_2715_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2724_p0),
    .din1(grp_fu_2724_p1),
    .din2(grp_fu_2670_p3),
    .ce(grp_fu_2724_ce),
    .dout(grp_fu_2724_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2733_p0),
    .din1(grp_fu_2733_p1),
    .din2(grp_fu_2679_p3),
    .ce(grp_fu_2733_ce),
    .dout(grp_fu_2733_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_24s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_24s_25_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2742_p0),
    .din1(grp_fu_2742_p1),
    .din2(grp_fu_2688_p3),
    .ce(grp_fu_2742_ce),
    .dout(grp_fu_2742_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2751_p0),
    .din1(grp_fu_2751_p1),
    .din2(grp_fu_2697_p3),
    .ce(grp_fu_2751_ce),
    .dout(grp_fu_2751_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2759_p0),
    .din1(grp_fu_2759_p1),
    .din2(grp_fu_2706_p3),
    .ce(grp_fu_2759_ce),
    .dout(grp_fu_2759_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2767_p0),
    .din1(grp_fu_2767_p1),
    .din2(grp_fu_2715_p3),
    .ce(grp_fu_2767_ce),
    .dout(grp_fu_2767_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2775_p0),
    .din1(grp_fu_2775_p1),
    .din2(grp_fu_2724_p3),
    .ce(grp_fu_2775_ce),
    .dout(grp_fu_2775_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2783_p0),
    .din1(grp_fu_2783_p1),
    .din2(grp_fu_2733_p3),
    .ce(grp_fu_2783_ce),
    .dout(grp_fu_2783_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_25s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 25 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_25s_26_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2791_p0),
    .din1(grp_fu_2791_p1),
    .din2(grp_fu_2742_p3),
    .ce(grp_fu_2791_ce),
    .dout(grp_fu_2791_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2799_p0),
    .din1(grp_fu_2799_p1),
    .din2(grp_fu_2751_p3),
    .ce(grp_fu_2799_ce),
    .dout(grp_fu_2799_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2808_p0),
    .din1(grp_fu_2808_p1),
    .din2(grp_fu_2759_p3),
    .ce(grp_fu_2808_ce),
    .dout(grp_fu_2808_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2817_p0),
    .din1(grp_fu_2817_p1),
    .din2(grp_fu_2767_p3),
    .ce(grp_fu_2817_ce),
    .dout(grp_fu_2817_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U108(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2826_p0),
    .din1(grp_fu_2826_p1),
    .din2(grp_fu_2775_p3),
    .ce(grp_fu_2826_ce),
    .dout(grp_fu_2826_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U109(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2835_p0),
    .din1(grp_fu_2835_p1),
    .din2(grp_fu_2783_p3),
    .ce(grp_fu_2835_ce),
    .dout(grp_fu_2835_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_26_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
mac_muladd_8ns_16s_26s_26_4_1_U110(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2844_p0),
    .din1(grp_fu_2844_p1),
    .din2(grp_fu_2791_p3),
    .ce(grp_fu_2844_ce),
    .dout(grp_fu_2844_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U111(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2853_p0),
    .din1(grp_fu_2853_p1),
    .din2(grp_fu_2799_p3),
    .ce(grp_fu_2853_ce),
    .dout(grp_fu_2853_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U112(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2861_p0),
    .din1(grp_fu_2861_p1),
    .din2(grp_fu_2808_p3),
    .ce(grp_fu_2861_ce),
    .dout(grp_fu_2861_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2869_p0),
    .din1(grp_fu_2869_p1),
    .din2(grp_fu_2817_p3),
    .ce(grp_fu_2869_ce),
    .dout(grp_fu_2869_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2877_p0),
    .din1(grp_fu_2877_p1),
    .din2(grp_fu_2826_p3),
    .ce(grp_fu_2877_ce),
    .dout(grp_fu_2877_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2885_p0),
    .din1(grp_fu_2885_p1),
    .din2(grp_fu_2835_p3),
    .ce(grp_fu_2885_ce),
    .dout(grp_fu_2885_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_26s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_26s_27_4_1_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2893_p0),
    .din1(grp_fu_2893_p1),
    .din2(grp_fu_2844_p3),
    .ce(grp_fu_2893_ce),
    .dout(grp_fu_2893_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2901_p0),
    .din1(grp_fu_2901_p1),
    .din2(grp_fu_2853_p3),
    .ce(grp_fu_2901_ce),
    .dout(grp_fu_2901_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2912_p0),
    .din1(grp_fu_2912_p1),
    .din2(grp_fu_2861_p3),
    .ce(grp_fu_2912_ce),
    .dout(grp_fu_2912_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2923_p0),
    .din1(grp_fu_2923_p1),
    .din2(grp_fu_2869_p3),
    .ce(grp_fu_2923_ce),
    .dout(grp_fu_2923_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2934_p0),
    .din1(grp_fu_2934_p1),
    .din2(grp_fu_2877_p3),
    .ce(grp_fu_2934_ce),
    .dout(grp_fu_2934_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2945_p0),
    .din1(grp_fu_2945_p1),
    .din2(grp_fu_2885_p3),
    .ce(grp_fu_2945_ce),
    .dout(grp_fu_2945_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_16s_27s_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 27 ),
    .dout_WIDTH( 27 ))
mac_muladd_8ns_16s_27s_27_4_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2956_p0),
    .din1(grp_fu_2956_p1),
    .din2(grp_fu_2893_p3),
    .ce(grp_fu_2956_ce),
    .dout(grp_fu_2956_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((cmp40233_reg_3034 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end else if (((cmp40233_reg_3034 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        GetNewLine_reg_532 <= GetNewLine_2_reg_3135;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        GetNewLine_reg_532 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        PhaseV_reg_567 <= Phase_reg_3121;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        PhaseV_reg_567 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        PixArrayLoc_reg_544 <= PixArrayLoc_3_reg_3071;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        PixArrayLoc_reg_544 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        WriteLocNext_3_reg_555 <= WriteLocNext_2_reg_3126;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        WriteLocNext_3_reg_555 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 <= PixArrayVal_val_V_0_6_fu_1413_p1;
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 <= PixArray_val_V_5_0_fu_1737_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 <= ap_phi_reg_pp1_iter1_PixArrayVal_val_V_0_reg_652;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 <= {{LineBuf_val_V_0_q1[15:8]}};
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 <= {{SrcImg_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 <= ap_phi_reg_pp1_iter1_PixArrayVal_val_V_1_reg_642;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 <= {{LineBuf_val_V_0_q1[23:16]}};
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 <= {{SrcImg_dout[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 <= ap_phi_reg_pp1_iter1_PixArrayVal_val_V_2_reg_632;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 <= {{LineBuf_val_V_0_q1[31:24]}};
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 <= {{SrcImg_dout[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 <= ap_phi_reg_pp1_iter1_PixArrayVal_val_V_3_reg_622;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 <= {{LineBuf_val_V_0_q1[39:32]}};
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 <= {{SrcImg_dout[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 <= ap_phi_reg_pp1_iter1_PixArrayVal_val_V_4_reg_612;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_0_0_reg_707 <= PixArray_val_V_0_0_fu_1683_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_0_0_reg_707 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_0_0_reg_707;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_1_0_reg_698 <= {{LineBuf_val_V_5_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_1_0_reg_698 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_1_0_reg_698;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_2_0_reg_689 <= {{LineBuf_val_V_5_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_2_0_reg_689 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_2_0_reg_689;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_3_0_reg_680 <= {{LineBuf_val_V_5_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_3_0_reg_680 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_3_0_reg_680;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_4_0_reg_671 <= {{LineBuf_val_V_5_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_4_0_reg_671 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_4_0_reg_671;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_5_0_reg_662 <= {{LineBuf_val_V_5_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_0_5_0_reg_662 <= ap_phi_reg_pp1_iter1_PixArray_val_V_0_5_0_reg_662;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_0_0_reg_1007 <= PixArrayVal_val_V_0_10_fu_1629_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_0_0_reg_1007 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_0_0_reg_1007;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_1_0_reg_998 <= {{LineBuf_val_V_4_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_1_0_reg_998 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_1_0_reg_998;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_2_0_reg_989 <= {{LineBuf_val_V_4_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_2_0_reg_989 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_2_0_reg_989;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_3_0_reg_980 <= {{LineBuf_val_V_4_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_3_0_reg_980 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_3_0_reg_980;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_4_0_reg_971 <= {{LineBuf_val_V_4_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_4_0_reg_971 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_4_0_reg_971;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_5_0_reg_962 <= {{LineBuf_val_V_4_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_1_5_0_reg_962 <= ap_phi_reg_pp1_iter1_PixArray_val_V_1_5_0_reg_962;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_0_0_reg_952 <= PixArrayVal_val_V_0_9_fu_1575_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_0_0_reg_952 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_0_0_reg_952;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_1_0_reg_942 <= {{LineBuf_val_V_3_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_1_0_reg_942 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_1_0_reg_942;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_2_0_reg_932 <= {{LineBuf_val_V_3_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_2_0_reg_932 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_2_0_reg_932;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_3_0_reg_922 <= {{LineBuf_val_V_3_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_3_0_reg_922 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_3_0_reg_922;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_4_0_reg_912 <= {{LineBuf_val_V_3_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_4_0_reg_912 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_4_0_reg_912;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_5_0_reg_902 <= {{LineBuf_val_V_3_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_2_5_0_reg_902 <= ap_phi_reg_pp1_iter1_PixArray_val_V_2_5_0_reg_902;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_0_0_reg_892 <= PixArrayVal_val_V_0_8_fu_1521_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_0_0_reg_892 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_0_0_reg_892;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_1_0_reg_882 <= {{LineBuf_val_V_2_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_1_0_reg_882 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_1_0_reg_882;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_2_0_reg_872 <= {{LineBuf_val_V_2_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_2_0_reg_872 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_2_0_reg_872;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_3_0_reg_862 <= {{LineBuf_val_V_2_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_3_0_reg_862 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_3_0_reg_862;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_4_0_reg_852 <= {{LineBuf_val_V_2_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_4_0_reg_852 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_4_0_reg_852;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_5_0_reg_842 <= {{LineBuf_val_V_2_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_3_5_0_reg_842 <= ap_phi_reg_pp1_iter1_PixArray_val_V_3_5_0_reg_842;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_0_0_reg_832 <= PixArrayVal_val_V_0_7_fu_1467_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_0_0_reg_832 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_0_0_reg_832;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_1_0_reg_822 <= {{LineBuf_val_V_1_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_1_0_reg_822 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_1_0_reg_822;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_2_0_reg_812 <= {{LineBuf_val_V_1_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_2_0_reg_812 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_2_0_reg_812;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_3_0_reg_802 <= {{LineBuf_val_V_1_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_3_0_reg_802 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_3_0_reg_802;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_4_0_reg_792 <= {{LineBuf_val_V_1_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_4_0_reg_792 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_4_0_reg_792;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_5_0_reg_782 <= {{LineBuf_val_V_1_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_4_5_0_reg_782 <= ap_phi_reg_pp1_iter1_PixArray_val_V_4_5_0_reg_782;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_0_1_reg_771 <= PixArrayVal_val_V_0_6_fu_1413_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_0_1_reg_771 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_0_1_reg_771;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_1_1_reg_760 <= {{LineBuf_val_V_0_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_1_1_reg_760 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_1_1_reg_760;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_2_1_reg_749 <= {{LineBuf_val_V_0_q1[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_2_1_reg_749 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_2_1_reg_749;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_3_1_reg_738 <= {{LineBuf_val_V_0_q1[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_3_1_reg_738 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_3_1_reg_738;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_4_1_reg_727 <= {{LineBuf_val_V_0_q1[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_4_1_reg_727 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_4_1_reg_727;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if ((1'b1 == ap_condition_866)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 <= {{LineBuf_val_V_0_q1[47:40]}};
        end else if ((1'b1 == ap_condition_68)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 <= {{SrcImg_dout[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_0_reg_602;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_861)) begin
        if (((brmerge_reg_3144 == 1'd0) & (icmp_ln215_reg_3183 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_1_reg_716 <= {{LineBuf_val_V_0_q1[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_1_reg_716 <= ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_1_reg_716;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_0_0_reg_1007 <= PixArrayVal_val_V_0_9_reg_3355;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_0_0_reg_1007 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_0_0_reg_1007;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_1_0_reg_998 <= PixArrayVal_val_V_1_9_reg_3362;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_1_0_reg_998 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_1_0_reg_998;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_2_0_reg_989 <= PixArrayVal_val_V_2_9_reg_3369;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_2_0_reg_989 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_2_0_reg_989;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_3_0_reg_980 <= PixArrayVal_val_V_3_9_reg_3376;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_3_0_reg_980 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_3_0_reg_980;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_4_0_reg_971 <= PixArrayVal_val_V_4_9_reg_3383;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_4_0_reg_971 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_4_0_reg_971;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_5_0_reg_962 <= PixArray_val_V_2_5_reg_3390;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_1_5_0_reg_962 <= ap_phi_reg_pp1_iter2_PixArray_val_V_1_5_0_reg_962;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_0_0_reg_952 <= PixArrayVal_val_V_0_8_reg_3313;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_0_0_reg_952 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_0_0_reg_952;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_1_0_reg_942 <= PixArrayVal_val_V_1_8_reg_3320;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_1_0_reg_942 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_1_0_reg_942;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_2_0_reg_932 <= PixArrayVal_val_V_2_8_reg_3327;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_2_0_reg_932 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_2_0_reg_932;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_3_0_reg_922 <= PixArrayVal_val_V_3_8_reg_3334;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_3_0_reg_922 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_3_0_reg_922;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_4_0_reg_912 <= PixArrayVal_val_V_4_8_reg_3341;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_4_0_reg_912 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_4_0_reg_912;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_5_0_reg_902 <= PixArray_val_V_3_5_reg_3348;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_2_5_0_reg_902 <= ap_phi_reg_pp1_iter2_PixArray_val_V_2_5_0_reg_902;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_0_0_reg_892 <= PixArrayVal_val_V_0_7_reg_3271;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_0_0_reg_892 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_0_0_reg_892;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_1_0_reg_882 <= PixArrayVal_val_V_1_7_reg_3278;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_1_0_reg_882 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_1_0_reg_882;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_2_0_reg_872 <= PixArrayVal_val_V_2_7_reg_3285;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_2_0_reg_872 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_2_0_reg_872;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_3_0_reg_862 <= PixArrayVal_val_V_3_7_reg_3292;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_3_0_reg_862 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_3_0_reg_862;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_4_0_reg_852 <= PixArrayVal_val_V_4_7_reg_3299;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_4_0_reg_852 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_4_0_reg_852;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_5_0_reg_842 <= PixArray_val_V_4_5_reg_3306;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_3_5_0_reg_842 <= ap_phi_reg_pp1_iter2_PixArray_val_V_3_5_0_reg_842;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_0_0_reg_832 <= PixArrayVal_val_V_0_6_reg_3223;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_0_0_reg_832 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_0_0_reg_832;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_1_0_reg_822 <= PixArrayVal_val_V_1_6_reg_3231;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_1_0_reg_822 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_1_0_reg_822;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_2_0_reg_812 <= PixArrayVal_val_V_2_6_reg_3239;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_2_0_reg_812 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_2_0_reg_812;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_3_0_reg_802 <= PixArrayVal_val_V_3_6_reg_3247;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_3_0_reg_802 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_3_0_reg_802;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_4_0_reg_792 <= PixArrayVal_val_V_4_6_reg_3255;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_4_0_reg_792 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_4_0_reg_792;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_5_0_reg_782 <= PixArray_val_V_5_5_2_reg_3263;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_4_5_0_reg_782 <= ap_phi_reg_pp1_iter2_PixArray_val_V_4_5_0_reg_782;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_0_1_reg_771 <= ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_0_1_reg_771 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_0_1_reg_771;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_1_1_reg_760 <= ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_1_1_reg_760 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_1_1_reg_760;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_2_1_reg_749 <= ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_2_1_reg_749 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_2_1_reg_749;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_3_1_reg_738 <= ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_3_1_reg_738 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_3_1_reg_738;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_4_1_reg_727 <= ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_4_1_reg_727 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_4_1_reg_727;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_5_1_reg_716 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter3_PixArray_val_V_5_5_1_reg_716 <= ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_1_reg_716;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln166_reg_2999 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_499 <= select_ln166_1_reg_3008;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_499 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln166_fu_1074_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_488 <= add_ln166_1_fu_1068_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_488 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln166_fu_1074_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_510 <= add_ln169_fu_1112_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_510 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        offset_reg_579 <= offset_4_reg_3116;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        offset_reg_579 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_fu_1398_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        x_reg_591 <= x_1_fu_1392_p2;
    end else if (((cmp40233_reg_3034 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        x_reg_591 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        y_reg_521 <= y_1_reg_3038;
    end else if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        y_reg_521 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp40233_reg_3034 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        FiltCoeff_0_addr_1_reg_3148 <= idxprom5_i_fu_1363_p1;
        FiltCoeff_1_addr_1_reg_3153 <= idxprom5_i_fu_1363_p1;
        FiltCoeff_2_addr_1_reg_3158 <= idxprom5_i_fu_1363_p1;
        FiltCoeff_3_addr_1_reg_3163 <= idxprom5_i_fu_1363_p1;
        FiltCoeff_4_addr_1_reg_3168 <= idxprom5_i_fu_1363_p1;
        FiltCoeff_5_addr_1_reg_3173 <= idxprom5_i_fu_1363_p1;
        brmerge_reg_3144 <= brmerge_fu_1387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_1_fu_1181_p2 == 1'd0) & (icmp_ln176_reg_3030 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        GetNewLine_1_reg_3055 <= GetNewLine_1_fu_1202_p2;
        PixArrayLoc_3_reg_3071 <= PixArrayLoc_3_fu_1233_p3;
        cmp106_reg_3082 <= cmp106_fu_1257_p2;
        icmp164_reg_3077 <= icmp164_fu_1251_p2;
        icmp_ln185_reg_3046 <= icmp_ln185_fu_1186_p2;
        icmp_ln204_1_reg_3066 <= icmp_ln204_1_fu_1228_p2;
        offset_1_reg_3061 <= offset_1_fu_1214_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        GetNewLine_2_reg_3135 <= GetNewLine_2_fu_1357_p3;
        OutputWriteEn_reg_3131 <= OutputWriteEn_fu_1352_p2;
        Phase_reg_3121 <= Phase_fu_1338_p3;
        WriteLocNext_2_reg_3126 <= WriteLocNext_2_fu_1345_p3;
        cmp81_reg_3140 <= cmp81_fu_1382_p2;
        offset_4_reg_3116 <= offset_4_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_fu_1398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_0_addr_reg_3187 <= idxprom5_i47_fu_1403_p1;
        LineBuf_val_V_1_addr_reg_3193 <= idxprom5_i47_fu_1403_p1;
        LineBuf_val_V_2_addr_reg_3199 <= idxprom5_i47_fu_1403_p1;
        LineBuf_val_V_3_addr_reg_3205 <= idxprom5_i47_fu_1403_p1;
        LineBuf_val_V_4_addr_reg_3211 <= idxprom5_i47_fu_1403_p1;
        LineBuf_val_V_5_addr_reg_3217 <= idxprom5_i47_fu_1403_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_0_addr_reg_3187_pp1_iter1_reg <= LineBuf_val_V_0_addr_reg_3187;
        LineBuf_val_V_1_addr_reg_3193_pp1_iter1_reg <= LineBuf_val_V_1_addr_reg_3193;
        LineBuf_val_V_2_addr_reg_3199_pp1_iter1_reg <= LineBuf_val_V_2_addr_reg_3199;
        LineBuf_val_V_3_addr_reg_3205_pp1_iter1_reg <= LineBuf_val_V_3_addr_reg_3205;
        LineBuf_val_V_4_addr_reg_3211_pp1_iter1_reg <= LineBuf_val_V_4_addr_reg_3211;
        LineBuf_val_V_5_addr_reg_3217_pp1_iter1_reg <= LineBuf_val_V_5_addr_reg_3217;
        icmp_ln215_reg_3183 <= icmp_ln215_fu_1398_p2;
        icmp_ln215_reg_3183_pp1_iter1_reg <= icmp_ln215_reg_3183;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln215_reg_3183 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        PixArrayVal_val_V_0_10_reg_3397 <= PixArrayVal_val_V_0_10_fu_1629_p1;
        PixArrayVal_val_V_0_6_reg_3223 <= PixArrayVal_val_V_0_6_fu_1413_p1;
        PixArrayVal_val_V_0_7_reg_3271 <= PixArrayVal_val_V_0_7_fu_1467_p1;
        PixArrayVal_val_V_0_8_reg_3313 <= PixArrayVal_val_V_0_8_fu_1521_p1;
        PixArrayVal_val_V_0_9_reg_3355 <= PixArrayVal_val_V_0_9_fu_1575_p1;
        PixArrayVal_val_V_1_10_reg_3404 <= {{LineBuf_val_V_4_q1[15:8]}};
        PixArrayVal_val_V_1_6_reg_3231 <= {{LineBuf_val_V_0_q1[15:8]}};
        PixArrayVal_val_V_1_7_reg_3278 <= {{LineBuf_val_V_1_q1[15:8]}};
        PixArrayVal_val_V_1_8_reg_3320 <= {{LineBuf_val_V_2_q1[15:8]}};
        PixArrayVal_val_V_1_9_reg_3362 <= {{LineBuf_val_V_3_q1[15:8]}};
        PixArrayVal_val_V_2_10_reg_3411 <= {{LineBuf_val_V_4_q1[23:16]}};
        PixArrayVal_val_V_2_6_reg_3239 <= {{LineBuf_val_V_0_q1[23:16]}};
        PixArrayVal_val_V_2_7_reg_3285 <= {{LineBuf_val_V_1_q1[23:16]}};
        PixArrayVal_val_V_2_8_reg_3327 <= {{LineBuf_val_V_2_q1[23:16]}};
        PixArrayVal_val_V_2_9_reg_3369 <= {{LineBuf_val_V_3_q1[23:16]}};
        PixArrayVal_val_V_3_10_reg_3418 <= {{LineBuf_val_V_4_q1[31:24]}};
        PixArrayVal_val_V_3_6_reg_3247 <= {{LineBuf_val_V_0_q1[31:24]}};
        PixArrayVal_val_V_3_7_reg_3292 <= {{LineBuf_val_V_1_q1[31:24]}};
        PixArrayVal_val_V_3_8_reg_3334 <= {{LineBuf_val_V_2_q1[31:24]}};
        PixArrayVal_val_V_3_9_reg_3376 <= {{LineBuf_val_V_3_q1[31:24]}};
        PixArrayVal_val_V_4_10_reg_3425 <= {{LineBuf_val_V_4_q1[39:32]}};
        PixArrayVal_val_V_4_6_reg_3255 <= {{LineBuf_val_V_0_q1[39:32]}};
        PixArrayVal_val_V_4_7_reg_3299 <= {{LineBuf_val_V_1_q1[39:32]}};
        PixArrayVal_val_V_4_8_reg_3341 <= {{LineBuf_val_V_2_q1[39:32]}};
        PixArrayVal_val_V_4_9_reg_3383 <= {{LineBuf_val_V_3_q1[39:32]}};
        PixArray_val_V_1_5_reg_3432 <= {{LineBuf_val_V_4_q1[47:40]}};
        PixArray_val_V_2_5_reg_3390 <= {{LineBuf_val_V_3_q1[47:40]}};
        PixArray_val_V_3_5_reg_3348 <= {{LineBuf_val_V_2_q1[47:40]}};
        PixArray_val_V_4_5_reg_3306 <= {{LineBuf_val_V_1_q1[47:40]}};
        PixArray_val_V_5_5_2_reg_3263 <= {{LineBuf_val_V_0_q1[47:40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        PixArray_val_V_2_0_0_reg_952 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_0_0_reg_952;
        PixArray_val_V_2_1_0_reg_942 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_1_0_reg_942;
        PixArray_val_V_2_2_0_reg_932 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_2_0_reg_932;
        PixArray_val_V_2_3_0_reg_922 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_3_0_reg_922;
        PixArray_val_V_2_4_0_reg_912 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_4_0_reg_912;
        PixArray_val_V_2_5_0_reg_902 <= ap_phi_reg_pp1_iter3_PixArray_val_V_2_5_0_reg_902;
        PixArray_val_V_3_0_0_reg_892 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_0_0_reg_892;
        PixArray_val_V_3_1_0_reg_882 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_1_0_reg_882;
        PixArray_val_V_3_2_0_reg_872 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_2_0_reg_872;
        PixArray_val_V_3_3_0_reg_862 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_3_0_reg_862;
        PixArray_val_V_3_4_0_reg_852 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_4_0_reg_852;
        PixArray_val_V_3_5_0_reg_842 <= ap_phi_reg_pp1_iter3_PixArray_val_V_3_5_0_reg_842;
        PixArray_val_V_4_0_0_reg_832 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_0_0_reg_832;
        PixArray_val_V_4_1_0_reg_822 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_1_0_reg_822;
        PixArray_val_V_4_2_0_reg_812 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_2_0_reg_812;
        PixArray_val_V_4_3_0_reg_802 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_3_0_reg_802;
        PixArray_val_V_4_4_0_reg_792 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_4_0_reg_792;
        PixArray_val_V_4_5_0_reg_782 <= ap_phi_reg_pp1_iter3_PixArray_val_V_4_5_0_reg_782;
        PixArray_val_V_5_0_1_reg_771 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_0_1_reg_771;
        PixArray_val_V_5_1_1_reg_760 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_1_1_reg_760;
        PixArray_val_V_5_2_1_reg_749 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_2_1_reg_749;
        PixArray_val_V_5_3_1_reg_738 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_3_1_reg_738;
        PixArray_val_V_5_4_1_reg_727 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_4_1_reg_727;
        PixArray_val_V_5_5_1_reg_716 <= ap_phi_reg_pp1_iter3_PixArray_val_V_5_5_1_reg_716;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        PixArray_val_V_3_0_0_reg_892_pp1_iter4_reg <= PixArray_val_V_3_0_0_reg_892;
        PixArray_val_V_3_1_0_reg_882_pp1_iter4_reg <= PixArray_val_V_3_1_0_reg_882;
        PixArray_val_V_3_2_0_reg_872_pp1_iter4_reg <= PixArray_val_V_3_2_0_reg_872;
        PixArray_val_V_3_3_0_reg_862_pp1_iter4_reg <= PixArray_val_V_3_3_0_reg_862;
        PixArray_val_V_3_4_0_reg_852_pp1_iter4_reg <= PixArray_val_V_3_4_0_reg_852;
        PixArray_val_V_3_5_0_reg_842_pp1_iter4_reg <= PixArray_val_V_3_5_0_reg_842;
        PixArray_val_V_4_0_0_reg_832_pp1_iter4_reg <= PixArray_val_V_4_0_0_reg_832;
        PixArray_val_V_4_0_0_reg_832_pp1_iter5_reg <= PixArray_val_V_4_0_0_reg_832_pp1_iter4_reg;
        PixArray_val_V_4_1_0_reg_822_pp1_iter4_reg <= PixArray_val_V_4_1_0_reg_822;
        PixArray_val_V_4_1_0_reg_822_pp1_iter5_reg <= PixArray_val_V_4_1_0_reg_822_pp1_iter4_reg;
        PixArray_val_V_4_2_0_reg_812_pp1_iter4_reg <= PixArray_val_V_4_2_0_reg_812;
        PixArray_val_V_4_2_0_reg_812_pp1_iter5_reg <= PixArray_val_V_4_2_0_reg_812_pp1_iter4_reg;
        PixArray_val_V_4_3_0_reg_802_pp1_iter4_reg <= PixArray_val_V_4_3_0_reg_802;
        PixArray_val_V_4_3_0_reg_802_pp1_iter5_reg <= PixArray_val_V_4_3_0_reg_802_pp1_iter4_reg;
        PixArray_val_V_4_4_0_reg_792_pp1_iter4_reg <= PixArray_val_V_4_4_0_reg_792;
        PixArray_val_V_4_4_0_reg_792_pp1_iter5_reg <= PixArray_val_V_4_4_0_reg_792_pp1_iter4_reg;
        PixArray_val_V_4_5_0_reg_782_pp1_iter4_reg <= PixArray_val_V_4_5_0_reg_782;
        PixArray_val_V_4_5_0_reg_782_pp1_iter5_reg <= PixArray_val_V_4_5_0_reg_782_pp1_iter4_reg;
        PixArray_val_V_5_0_1_reg_771_pp1_iter4_reg <= PixArray_val_V_5_0_1_reg_771;
        PixArray_val_V_5_0_1_reg_771_pp1_iter5_reg <= PixArray_val_V_5_0_1_reg_771_pp1_iter4_reg;
        PixArray_val_V_5_0_1_reg_771_pp1_iter6_reg <= PixArray_val_V_5_0_1_reg_771_pp1_iter5_reg;
        PixArray_val_V_5_1_1_reg_760_pp1_iter4_reg <= PixArray_val_V_5_1_1_reg_760;
        PixArray_val_V_5_1_1_reg_760_pp1_iter5_reg <= PixArray_val_V_5_1_1_reg_760_pp1_iter4_reg;
        PixArray_val_V_5_1_1_reg_760_pp1_iter6_reg <= PixArray_val_V_5_1_1_reg_760_pp1_iter5_reg;
        PixArray_val_V_5_2_1_reg_749_pp1_iter4_reg <= PixArray_val_V_5_2_1_reg_749;
        PixArray_val_V_5_2_1_reg_749_pp1_iter5_reg <= PixArray_val_V_5_2_1_reg_749_pp1_iter4_reg;
        PixArray_val_V_5_2_1_reg_749_pp1_iter6_reg <= PixArray_val_V_5_2_1_reg_749_pp1_iter5_reg;
        PixArray_val_V_5_3_1_reg_738_pp1_iter4_reg <= PixArray_val_V_5_3_1_reg_738;
        PixArray_val_V_5_3_1_reg_738_pp1_iter5_reg <= PixArray_val_V_5_3_1_reg_738_pp1_iter4_reg;
        PixArray_val_V_5_3_1_reg_738_pp1_iter6_reg <= PixArray_val_V_5_3_1_reg_738_pp1_iter5_reg;
        PixArray_val_V_5_4_1_reg_727_pp1_iter4_reg <= PixArray_val_V_5_4_1_reg_727;
        PixArray_val_V_5_4_1_reg_727_pp1_iter5_reg <= PixArray_val_V_5_4_1_reg_727_pp1_iter4_reg;
        PixArray_val_V_5_4_1_reg_727_pp1_iter6_reg <= PixArray_val_V_5_4_1_reg_727_pp1_iter5_reg;
        PixArray_val_V_5_5_1_reg_716_pp1_iter4_reg <= PixArray_val_V_5_5_1_reg_716;
        PixArray_val_V_5_5_1_reg_716_pp1_iter5_reg <= PixArray_val_V_5_5_1_reg_716_pp1_iter4_reg;
        PixArray_val_V_5_5_1_reg_716_pp1_iter6_reg <= PixArray_val_V_5_5_1_reg_716_pp1_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op220_read_state9 == 1'b1))) begin
        SrcImg_read_reg_3469 <= SrcImg_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        XLoopSize_reg_2988 <= {{add_ln143_fu_1052_p2[12:1]}};
        YLoopSize_reg_2982 <= YLoopSize_fu_1046_p2;
        zext_ln138_reg_2972[11 : 0] <= zext_ln138_fu_1024_p1[11 : 0];
        zext_ln141_reg_2977[15 : 0] <= zext_ln141_fu_1028_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_reg_pp1_iter1_PixArrayVal_val_V_0_reg_652 <= ap_phi_reg_pp1_iter0_PixArrayVal_val_V_0_reg_652;
        ap_phi_reg_pp1_iter1_PixArrayVal_val_V_1_reg_642 <= ap_phi_reg_pp1_iter0_PixArrayVal_val_V_1_reg_642;
        ap_phi_reg_pp1_iter1_PixArrayVal_val_V_2_reg_632 <= ap_phi_reg_pp1_iter0_PixArrayVal_val_V_2_reg_632;
        ap_phi_reg_pp1_iter1_PixArrayVal_val_V_3_reg_622 <= ap_phi_reg_pp1_iter0_PixArrayVal_val_V_3_reg_622;
        ap_phi_reg_pp1_iter1_PixArrayVal_val_V_4_reg_612 <= ap_phi_reg_pp1_iter0_PixArrayVal_val_V_4_reg_612;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_0_0_reg_707 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_0_0_reg_707;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_1_0_reg_698 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_1_0_reg_698;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_2_0_reg_689 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_2_0_reg_689;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_3_0_reg_680 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_3_0_reg_680;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_4_0_reg_671 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_4_0_reg_671;
        ap_phi_reg_pp1_iter1_PixArray_val_V_0_5_0_reg_662 <= ap_phi_reg_pp1_iter0_PixArray_val_V_0_5_0_reg_662;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_0_0_reg_1007 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_0_0_reg_1007;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_1_0_reg_998 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_1_0_reg_998;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_2_0_reg_989 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_2_0_reg_989;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_3_0_reg_980 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_3_0_reg_980;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_4_0_reg_971 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_4_0_reg_971;
        ap_phi_reg_pp1_iter1_PixArray_val_V_1_5_0_reg_962 <= ap_phi_reg_pp1_iter0_PixArray_val_V_1_5_0_reg_962;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_0_0_reg_952 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_0_0_reg_952;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_1_0_reg_942 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_1_0_reg_942;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_2_0_reg_932 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_2_0_reg_932;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_3_0_reg_922 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_3_0_reg_922;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_4_0_reg_912 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_4_0_reg_912;
        ap_phi_reg_pp1_iter1_PixArray_val_V_2_5_0_reg_902 <= ap_phi_reg_pp1_iter0_PixArray_val_V_2_5_0_reg_902;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_0_0_reg_892 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_0_0_reg_892;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_1_0_reg_882 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_1_0_reg_882;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_2_0_reg_872 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_2_0_reg_872;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_3_0_reg_862 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_3_0_reg_862;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_4_0_reg_852 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_4_0_reg_852;
        ap_phi_reg_pp1_iter1_PixArray_val_V_3_5_0_reg_842 <= ap_phi_reg_pp1_iter0_PixArray_val_V_3_5_0_reg_842;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_0_0_reg_832 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_0_0_reg_832;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_1_0_reg_822 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_1_0_reg_822;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_2_0_reg_812 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_2_0_reg_812;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_3_0_reg_802 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_3_0_reg_802;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_4_0_reg_792 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_4_0_reg_792;
        ap_phi_reg_pp1_iter1_PixArray_val_V_4_5_0_reg_782 <= ap_phi_reg_pp1_iter0_PixArray_val_V_4_5_0_reg_782;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_0_1_reg_771 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_0_1_reg_771;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_1_1_reg_760 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_1_1_reg_760;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_2_1_reg_749 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_2_1_reg_749;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_3_1_reg_738 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_3_1_reg_738;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_4_1_reg_727 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_4_1_reg_727;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_0_reg_602 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_0_reg_602;
        ap_phi_reg_pp1_iter1_PixArray_val_V_5_5_1_reg_716 <= ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_1_reg_716;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_fu_1165_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        cmp40233_reg_3034 <= cmp40233_fu_1170_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln166_reg_2999 <= icmp_ln166_fu_1074_p2;
        select_ln166_1_reg_3008_pp0_iter1_reg <= select_ln166_1_reg_3008;
        select_ln166_reg_3003_pp0_iter1_reg <= select_ln166_reg_3003;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln176_reg_3030 <= icmp_ln176_fu_1165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln166_fu_1074_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln166_1_reg_3008 <= select_ln166_1_fu_1100_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln166_fu_1074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln166_reg_3003 <= select_ln166_fu_1092_p3;
        trunc_ln171_reg_3015 <= trunc_ln171_fu_1108_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == OutputWriteEn_reg_3131) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln301_1_reg_3899 <= select_ln301_1_fu_2388_p3;
        select_ln301_2_reg_3904 <= select_ln301_2_fu_2447_p3;
        select_ln301_3_reg_3909 <= select_ln301_3_fu_2506_p3;
        select_ln301_4_reg_3914 <= select_ln301_4_fu_2565_p3;
        select_ln301_5_reg_3919 <= select_ln301_5_fu_2624_p3;
        select_ln301_reg_3894 <= select_ln301_fu_2329_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln176_reg_3030 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        y_1_reg_3038 <= y_1_fu_1175_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        FiltCoeff_0_address0 = FiltCoeff_0_addr_1_reg_3148;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_0_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_0_ce0 = 1'b1;
    end else begin
        FiltCoeff_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln166_reg_3003_pp0_iter1_reg == 3'd0))) begin
        FiltCoeff_0_we0 = 1'b1;
    end else begin
        FiltCoeff_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        FiltCoeff_1_address0 = FiltCoeff_1_addr_1_reg_3153;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_1_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_1_ce0 = 1'b1;
    end else begin
        FiltCoeff_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln166_reg_3003_pp0_iter1_reg == 3'd1))) begin
        FiltCoeff_1_we0 = 1'b1;
    end else begin
        FiltCoeff_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        FiltCoeff_2_address0 = FiltCoeff_2_addr_1_reg_3158;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_2_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_2_ce0 = 1'b1;
    end else begin
        FiltCoeff_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln166_reg_3003_pp0_iter1_reg == 3'd2))) begin
        FiltCoeff_2_we0 = 1'b1;
    end else begin
        FiltCoeff_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        FiltCoeff_3_address0 = FiltCoeff_3_addr_1_reg_3163;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_3_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_3_ce0 = 1'b1;
    end else begin
        FiltCoeff_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln166_reg_3003_pp0_iter1_reg == 3'd3))) begin
        FiltCoeff_3_we0 = 1'b1;
    end else begin
        FiltCoeff_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        FiltCoeff_4_address0 = FiltCoeff_4_addr_1_reg_3168;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_4_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_4_ce0 = 1'b1;
    end else begin
        FiltCoeff_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln166_reg_3003_pp0_iter1_reg == 3'd4))) begin
        FiltCoeff_4_we0 = 1'b1;
    end else begin
        FiltCoeff_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        FiltCoeff_5_address0 = FiltCoeff_5_addr_1_reg_3173;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FiltCoeff_5_address0 = zext_ln166_fu_1156_p1;
    end else begin
        FiltCoeff_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        FiltCoeff_5_ce0 = 1'b1;
    end else begin
        FiltCoeff_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & ((select_ln166_reg_3003_pp0_iter1_reg == 3'd5) | ((select_ln166_reg_3003_pp0_iter1_reg == 3'd6) | (select_ln166_reg_3003_pp0_iter1_reg == 3'd7))))) begin
        FiltCoeff_5_we0 = 1'b1;
    end else begin
        FiltCoeff_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_0_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_0_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (cmp81_reg_3140 == 1'd1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_0_we0 = 1'b1;
    end else begin
        LineBuf_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_1_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_1_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_1_we0 = 1'b1;
    end else begin
        LineBuf_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_2_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_2_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_2_we0 = 1'b1;
    end else begin
        LineBuf_val_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_3_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_3_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_3_we0 = 1'b1;
    end else begin
        LineBuf_val_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_4_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_4_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_4_we0 = 1'b1;
    end else begin
        LineBuf_val_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        LineBuf_val_V_5_ce0 = 1'b1;
    end else begin
        LineBuf_val_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        LineBuf_val_V_5_ce1 = 1'b1;
    end else begin
        LineBuf_val_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (brmerge_reg_3144 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        LineBuf_val_V_5_we0 = 1'b1;
    end else begin
        LineBuf_val_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'd1 == OutputWriteEn_reg_3131) & (1'b0 == ap_block_pp1_stage0))) begin
        OutImg_blk_n = OutImg_full_n;
    end else begin
        OutImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'd1 == OutputWriteEn_reg_3131) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        OutImg_write = 1'b1;
    end else begin
        OutImg_write = 1'b0;
    end
end

always @ (*) begin
    if (((cmp81_reg_3140 == 1'd1) & (brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        SrcImg_blk_n = SrcImg_empty_n;
    end else begin
        SrcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op220_read_state9 == 1'b1))) begin
        SrcImg_read = 1'b1;
    end else begin
        SrcImg_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln166_fu_1074_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln215_fu_1398_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & ((icmp_ln176_1_fu_1181_p2 == 1'd1) | (icmp_ln176_reg_3030 == 1'd1))) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_0_0_phi_fu_710_p4 = PixArrayVal_val_V_0_10_reg_3397;
    end else begin
        ap_phi_mux_PixArray_val_V_0_0_0_phi_fu_710_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_0_0_reg_707;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_1_0_phi_fu_701_p4 = PixArrayVal_val_V_1_10_reg_3404;
    end else begin
        ap_phi_mux_PixArray_val_V_0_1_0_phi_fu_701_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_1_0_reg_698;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_2_0_phi_fu_692_p4 = PixArrayVal_val_V_2_10_reg_3411;
    end else begin
        ap_phi_mux_PixArray_val_V_0_2_0_phi_fu_692_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_2_0_reg_689;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_3_0_phi_fu_683_p4 = PixArrayVal_val_V_3_10_reg_3418;
    end else begin
        ap_phi_mux_PixArray_val_V_0_3_0_phi_fu_683_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_3_0_reg_680;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_4_0_phi_fu_674_p4 = PixArrayVal_val_V_4_10_reg_3425;
    end else begin
        ap_phi_mux_PixArray_val_V_0_4_0_phi_fu_674_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_4_0_reg_671;
    end
end

always @ (*) begin
    if (((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_PixArray_val_V_0_5_0_phi_fu_665_p4 = PixArray_val_V_1_5_reg_3432;
    end else begin
        ap_phi_mux_PixArray_val_V_0_5_0_phi_fu_665_p4 = ap_phi_reg_pp1_iter2_PixArray_val_V_0_5_0_reg_662;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln166_reg_2999 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_503_p4 = select_ln166_1_reg_3008;
    end else begin
        ap_phi_mux_i_phi_fu_503_p4 = i_reg_499;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & ((icmp_ln176_1_fu_1181_p2 == 1'd1) | (icmp_ln176_reg_3030 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2643_ce = 1'b1;
    end else begin
        grp_fu_2643_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2652_ce = 1'b1;
    end else begin
        grp_fu_2652_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2661_ce = 1'b1;
    end else begin
        grp_fu_2661_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2670_ce = 1'b1;
    end else begin
        grp_fu_2670_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2679_ce = 1'b1;
    end else begin
        grp_fu_2679_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2688_ce = 1'b1;
    end else begin
        grp_fu_2688_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2697_ce = 1'b1;
    end else begin
        grp_fu_2697_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2706_ce = 1'b1;
    end else begin
        grp_fu_2706_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2715_ce = 1'b1;
    end else begin
        grp_fu_2715_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2724_ce = 1'b1;
    end else begin
        grp_fu_2724_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2733_ce = 1'b1;
    end else begin
        grp_fu_2733_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2742_ce = 1'b1;
    end else begin
        grp_fu_2742_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2751_ce = 1'b1;
    end else begin
        grp_fu_2751_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2759_ce = 1'b1;
    end else begin
        grp_fu_2759_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2767_ce = 1'b1;
    end else begin
        grp_fu_2767_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2775_ce = 1'b1;
    end else begin
        grp_fu_2775_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2783_ce = 1'b1;
    end else begin
        grp_fu_2783_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2791_ce = 1'b1;
    end else begin
        grp_fu_2791_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2799_ce = 1'b1;
    end else begin
        grp_fu_2799_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2808_ce = 1'b1;
    end else begin
        grp_fu_2808_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2817_ce = 1'b1;
    end else begin
        grp_fu_2817_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2826_ce = 1'b1;
    end else begin
        grp_fu_2826_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2835_ce = 1'b1;
    end else begin
        grp_fu_2835_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2844_ce = 1'b1;
    end else begin
        grp_fu_2844_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2853_ce = 1'b1;
    end else begin
        grp_fu_2853_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2861_ce = 1'b1;
    end else begin
        grp_fu_2861_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2869_ce = 1'b1;
    end else begin
        grp_fu_2869_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2877_ce = 1'b1;
    end else begin
        grp_fu_2877_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2885_ce = 1'b1;
    end else begin
        grp_fu_2885_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2893_ce = 1'b1;
    end else begin
        grp_fu_2893_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2901_ce = 1'b1;
    end else begin
        grp_fu_2901_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2912_ce = 1'b1;
    end else begin
        grp_fu_2912_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2923_ce = 1'b1;
    end else begin
        grp_fu_2923_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2934_ce = 1'b1;
    end else begin
        grp_fu_2934_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2945_ce = 1'b1;
    end else begin
        grp_fu_2945_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_2956_ce = 1'b1;
    end else begin
        grp_fu_2956_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vfltCoeff_0_ce0 = 1'b1;
    end else begin
        vfltCoeff_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln166_fu_1074_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln166_fu_1074_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & ((icmp_ln176_1_fu_1181_p2 == 1'd1) | (icmp_ln176_reg_3030 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((cmp40233_reg_3034 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln215_fu_1398_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter11 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter11 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln215_fu_1398_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign GetNewLine_1_fu_1202_p2 = ((tmp_fu_1192_p4 != 16'd0) ? 1'b1 : 1'b0);

assign GetNewLine_2_fu_1357_p3 = ((icmp_ln185_reg_3046[0:0] == 1'b1) ? GetNewLine_1_reg_3055 : GetNewLine_reg_532);

assign HeightOut_cast_fu_1016_p1 = HeightOut;

assign LineBuf_val_V_0_address0 = LineBuf_val_V_0_addr_reg_3187_pp1_iter1_reg;

assign LineBuf_val_V_0_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_1_address0 = LineBuf_val_V_1_addr_reg_3193_pp1_iter1_reg;

assign LineBuf_val_V_1_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_1_d0 = {{{{{{select_ln265_29_fu_2033_p3}, {select_ln265_24_fu_2003_p3}}, {select_ln265_25_fu_2009_p3}}, {select_ln265_26_fu_2015_p3}}, {select_ln265_27_fu_2021_p3}}, {select_ln265_28_fu_2027_p3}};

assign LineBuf_val_V_2_address0 = LineBuf_val_V_2_addr_reg_3199_pp1_iter1_reg;

assign LineBuf_val_V_2_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_2_d0 = {{{{{{select_ln265_23_fu_1980_p3}, {select_ln265_18_fu_1950_p3}}, {select_ln265_19_fu_1956_p3}}, {select_ln265_20_fu_1962_p3}}, {select_ln265_21_fu_1968_p3}}, {select_ln265_22_fu_1974_p3}};

assign LineBuf_val_V_3_address0 = LineBuf_val_V_3_addr_reg_3205_pp1_iter1_reg;

assign LineBuf_val_V_3_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_3_d0 = {{{{{{select_ln265_17_fu_1927_p3}, {select_ln265_12_fu_1897_p3}}, {select_ln265_13_fu_1903_p3}}, {select_ln265_14_fu_1909_p3}}, {select_ln265_15_fu_1915_p3}}, {select_ln265_16_fu_1921_p3}};

assign LineBuf_val_V_4_address0 = LineBuf_val_V_4_addr_reg_3211_pp1_iter1_reg;

assign LineBuf_val_V_4_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_4_d0 = {{{{{{select_ln265_11_fu_1874_p3}, {select_ln265_6_fu_1844_p3}}, {select_ln265_7_fu_1850_p3}}, {select_ln265_8_fu_1856_p3}}, {select_ln265_9_fu_1862_p3}}, {select_ln265_10_fu_1868_p3}};

assign LineBuf_val_V_5_address0 = LineBuf_val_V_5_addr_reg_3217_pp1_iter1_reg;

assign LineBuf_val_V_5_address1 = idxprom5_i47_fu_1403_p1;

assign LineBuf_val_V_5_d0 = {{{{{{select_ln265_5_fu_1821_p3}, {select_ln265_fu_1791_p3}}, {select_ln265_1_fu_1797_p3}}, {select_ln265_2_fu_1803_p3}}, {select_ln265_3_fu_1809_p3}}, {select_ln265_4_fu_1815_p3}};

assign OutImg_din = {{{{{{select_ln301_5_reg_3919}, {select_ln301_4_reg_3914}}, {select_ln301_3_reg_3909}}, {select_ln301_2_reg_3904}}, {select_ln301_1_reg_3899}}, {select_ln301_reg_3894}};

assign OutputWriteEn_fu_1352_p2 = (icmp_ln185_reg_3046 & and_ln204_fu_1299_p2);

assign Phase_fu_1338_p3 = ((icmp_ln185_reg_3046[0:0] == 1'b1) ? zext_ln158_fu_1273_p1 : PhaseV_reg_567);

assign PixArrayLoc_1_fu_1208_p2 = (PixArrayLoc_reg_544 + 16'd1);

assign PixArrayLoc_2_cast_fu_1373_p1 = PixArrayLoc_3_reg_3071;

assign PixArrayLoc_2_fu_1220_p3 = ((GetNewLine_1_fu_1202_p2[0:0] == 1'b1) ? PixArrayLoc_1_fu_1208_p2 : PixArrayLoc_reg_544);

assign PixArrayLoc_3_fu_1233_p3 = ((icmp_ln185_fu_1186_p2[0:0] == 1'b1) ? PixArrayLoc_2_fu_1220_p3 : PixArrayLoc_reg_544);

assign PixArrayVal_val_V_0_10_fu_1629_p1 = LineBuf_val_V_4_q1[7:0];

assign PixArrayVal_val_V_0_6_fu_1413_p1 = LineBuf_val_V_0_q1[7:0];

assign PixArrayVal_val_V_0_7_fu_1467_p1 = LineBuf_val_V_1_q1[7:0];

assign PixArrayVal_val_V_0_8_fu_1521_p1 = LineBuf_val_V_2_q1[7:0];

assign PixArrayVal_val_V_0_9_fu_1575_p1 = LineBuf_val_V_3_q1[7:0];

assign PixArray_val_V_0_0_fu_1683_p1 = LineBuf_val_V_5_q1[7:0];

assign PixArray_val_V_5_0_fu_1737_p1 = SrcImg_dout[7:0];

assign TotalLines_fu_1038_p3 = ((icmp_ln141_fu_1032_p2[0:0] == 1'b1) ? HeightOut : empty_fu_1020_p1);

assign WriteLocNext_2_fu_1345_p3 = ((icmp_ln185_reg_3046[0:0] == 1'b1) ? select_ln204_1_fu_1323_p3 : WriteLocNext_3_reg_555);

assign WriteLocNext_fu_1309_p2 = (WriteLocNext_3_reg_555 + 32'd1);

assign YLoopSize_fu_1046_p2 = (TotalLines_fu_1038_p3 + 12'd3);

assign add79_fu_1376_p2 = (PixArrayLoc_2_cast_fu_1373_p1 + 17'd3);

assign add_ln143_fu_1052_p2 = (WidthIn + 13'd1);

assign add_ln166_1_fu_1068_p2 = (indvar_flatten_reg_488 + 9'd1);

assign add_ln166_fu_1080_p2 = (ap_phi_mux_i_phi_fu_503_p4 + 7'd1);

assign add_ln169_fu_1112_p2 = (select_ln166_fu_1092_p3 + 3'd1);

assign add_ln171_fu_1145_p2 = (sub_ln171_fu_1136_p2 + zext_ln171_1_fu_1142_p1);

assign and_ln204_fu_1299_p2 = (icmp_ln204_fu_1293_p2 & icmp_ln204_1_reg_3066);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1 = ((ap_ST_fsm_pp1_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp1_stage0_subdone));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'd1 == OutputWriteEn_reg_3131) & (1'b0 == OutImg_full_n)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == SrcImg_empty_n) & (ap_predicate_op220_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'd1 == OutputWriteEn_reg_3131) & (1'b0 == OutImg_full_n)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == SrcImg_empty_n) & (ap_predicate_op220_read_state9 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter11 == 1'b1) & (1'd1 == OutputWriteEn_reg_3131) & (1'b0 == OutImg_full_n)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == SrcImg_empty_n) & (ap_predicate_op220_read_state9 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp1_stage0_iter11 = ((1'd1 == OutputWriteEn_reg_3131) & (1'b0 == OutImg_full_n));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1 = ((1'b0 == SrcImg_empty_n) & (ap_predicate_op220_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_68 = ((cmp81_reg_3140 == 1'd1) & (brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183 == 1'd0));
end

always @ (*) begin
    ap_condition_861 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_866 = ((cmp81_reg_3140 == 1'd0) & (brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_161 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_163 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_165 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_167 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_169 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_171 = (icmp_ln215_fu_1398_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_176 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_183 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_190 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_197 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_204 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_211 = (icmp_ln215_reg_3183 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_229 = (ap_predicate_op229_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_243 = (ap_predicate_op243_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_251 = (ap_predicate_op251_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_259 = (ap_predicate_op259_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_267 = (ap_predicate_op267_store_state10 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_275 = (ap_predicate_op275_store_state10 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp1_iter2_stage0 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state8_pp1_iter0_stage0 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state9_pp1_iter1_stage0 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign ap_phi_reg_pp1_iter0_PixArrayVal_val_V_0_reg_652 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArrayVal_val_V_1_reg_642 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArrayVal_val_V_2_reg_632 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArrayVal_val_V_3_reg_622 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArrayVal_val_V_4_reg_612 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_0_0_reg_707 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_1_0_reg_698 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_2_0_reg_689 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_3_0_reg_680 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_4_0_reg_671 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_0_5_0_reg_662 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_0_0_reg_1007 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_1_0_reg_998 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_2_0_reg_989 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_3_0_reg_980 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_4_0_reg_971 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_1_5_0_reg_962 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_0_0_reg_952 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_1_0_reg_942 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_2_0_reg_932 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_3_0_reg_922 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_4_0_reg_912 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_2_5_0_reg_902 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_0_0_reg_892 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_1_0_reg_882 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_2_0_reg_872 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_3_0_reg_862 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_4_0_reg_852 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_3_5_0_reg_842 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_0_0_reg_832 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_1_0_reg_822 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_2_0_reg_812 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_3_0_reg_802 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_4_0_reg_792 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_4_5_0_reg_782 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_0_1_reg_771 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_1_1_reg_760 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_2_1_reg_749 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_3_1_reg_738 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_4_1_reg_727 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_0_reg_602 = 'bx;

assign ap_phi_reg_pp1_iter0_PixArray_val_V_5_5_1_reg_716 = 'bx;

always @ (*) begin
    ap_predicate_op220_read_state9 = ((cmp81_reg_3140 == 1'd1) & (brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183 == 1'd0));
end

always @ (*) begin
    ap_predicate_op229_store_state10 = ((cmp81_reg_3140 == 1'd1) & (brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op243_store_state10 = ((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op251_store_state10 = ((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op259_store_state10 = ((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op267_store_state10 = ((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op275_store_state10 = ((brmerge_reg_3144 == 1'd1) & (icmp_ln215_reg_3183_pp1_iter1_reg == 1'd0));
end

assign brmerge_fu_1387_p2 = (icmp164_reg_3077 | GetNewLine_2_fu_1357_p3);

assign cmp106_fu_1257_p2 = ((y_reg_521 == 12'd0) ? 1'b1 : 1'b0);

assign cmp40233_fu_1170_p2 = ((XLoopSize_reg_2988 == 12'd0) ? 1'b1 : 1'b0);

assign cmp81_fu_1382_p2 = ((add79_fu_1376_p2 < zext_ln141_reg_2977) ? 1'b1 : 1'b0);

assign empty_fu_1020_p1 = HeightIn[11:0];

assign grp_fu_2643_p0 = grp_fu_2643_p00;

assign grp_fu_2643_p00 = ap_phi_mux_PixArray_val_V_0_0_0_phi_fu_710_p4;

assign grp_fu_2643_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2643_p2 = 24'd2048;

assign grp_fu_2652_p0 = grp_fu_2652_p00;

assign grp_fu_2652_p00 = ap_phi_mux_PixArray_val_V_0_1_0_phi_fu_701_p4;

assign grp_fu_2652_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2652_p2 = 24'd2048;

assign grp_fu_2661_p0 = grp_fu_2661_p00;

assign grp_fu_2661_p00 = ap_phi_mux_PixArray_val_V_0_2_0_phi_fu_692_p4;

assign grp_fu_2661_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2661_p2 = 24'd2048;

assign grp_fu_2670_p0 = grp_fu_2670_p00;

assign grp_fu_2670_p00 = ap_phi_mux_PixArray_val_V_0_3_0_phi_fu_683_p4;

assign grp_fu_2670_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2670_p2 = 24'd2048;

assign grp_fu_2679_p0 = grp_fu_2679_p00;

assign grp_fu_2679_p00 = ap_phi_mux_PixArray_val_V_0_4_0_phi_fu_674_p4;

assign grp_fu_2679_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2679_p2 = 24'd2048;

assign grp_fu_2688_p0 = grp_fu_2688_p00;

assign grp_fu_2688_p00 = ap_phi_mux_PixArray_val_V_0_5_0_phi_fu_665_p4;

assign grp_fu_2688_p1 = sext_ln215_fu_2060_p1;

assign grp_fu_2688_p2 = 24'd2048;

assign grp_fu_2697_p0 = grp_fu_2697_p00;

assign grp_fu_2697_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_0_0_reg_1007;

assign grp_fu_2697_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2706_p0 = grp_fu_2706_p00;

assign grp_fu_2706_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_1_0_reg_998;

assign grp_fu_2706_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2715_p0 = grp_fu_2715_p00;

assign grp_fu_2715_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_2_0_reg_989;

assign grp_fu_2715_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2724_p0 = grp_fu_2724_p00;

assign grp_fu_2724_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_3_0_reg_980;

assign grp_fu_2724_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2733_p0 = grp_fu_2733_p00;

assign grp_fu_2733_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_4_0_reg_971;

assign grp_fu_2733_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2742_p0 = grp_fu_2742_p00;

assign grp_fu_2742_p00 = ap_phi_reg_pp1_iter3_PixArray_val_V_1_5_0_reg_962;

assign grp_fu_2742_p1 = sext_ln215_1_fu_2088_p1;

assign grp_fu_2751_p0 = grp_fu_2751_p00;

assign grp_fu_2751_p00 = PixArray_val_V_2_0_0_reg_952;

assign grp_fu_2751_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2759_p0 = grp_fu_2759_p00;

assign grp_fu_2759_p00 = PixArray_val_V_2_1_0_reg_942;

assign grp_fu_2759_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2767_p0 = grp_fu_2767_p00;

assign grp_fu_2767_p00 = PixArray_val_V_2_2_0_reg_932;

assign grp_fu_2767_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2775_p0 = grp_fu_2775_p00;

assign grp_fu_2775_p00 = PixArray_val_V_2_3_0_reg_922;

assign grp_fu_2775_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2783_p0 = grp_fu_2783_p00;

assign grp_fu_2783_p00 = PixArray_val_V_2_4_0_reg_912;

assign grp_fu_2783_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2791_p0 = grp_fu_2791_p00;

assign grp_fu_2791_p00 = PixArray_val_V_2_5_0_reg_902;

assign grp_fu_2791_p1 = sext_ln215_2_fu_2116_p1;

assign grp_fu_2799_p0 = grp_fu_2799_p00;

assign grp_fu_2799_p00 = PixArray_val_V_3_0_0_reg_892_pp1_iter4_reg;

assign grp_fu_2799_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2808_p0 = grp_fu_2808_p00;

assign grp_fu_2808_p00 = PixArray_val_V_3_1_0_reg_882_pp1_iter4_reg;

assign grp_fu_2808_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2817_p0 = grp_fu_2817_p00;

assign grp_fu_2817_p00 = PixArray_val_V_3_2_0_reg_872_pp1_iter4_reg;

assign grp_fu_2817_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2826_p0 = grp_fu_2826_p00;

assign grp_fu_2826_p00 = PixArray_val_V_3_3_0_reg_862_pp1_iter4_reg;

assign grp_fu_2826_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2835_p0 = grp_fu_2835_p00;

assign grp_fu_2835_p00 = PixArray_val_V_3_4_0_reg_852_pp1_iter4_reg;

assign grp_fu_2835_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2844_p0 = grp_fu_2844_p00;

assign grp_fu_2844_p00 = PixArray_val_V_3_5_0_reg_842_pp1_iter4_reg;

assign grp_fu_2844_p1 = sext_ln215_3_fu_2147_p1;

assign grp_fu_2853_p0 = grp_fu_2853_p00;

assign grp_fu_2853_p00 = PixArray_val_V_4_0_0_reg_832_pp1_iter5_reg;

assign grp_fu_2853_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2861_p0 = grp_fu_2861_p00;

assign grp_fu_2861_p00 = PixArray_val_V_4_1_0_reg_822_pp1_iter5_reg;

assign grp_fu_2861_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2869_p0 = grp_fu_2869_p00;

assign grp_fu_2869_p00 = PixArray_val_V_4_2_0_reg_812_pp1_iter5_reg;

assign grp_fu_2869_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2877_p0 = grp_fu_2877_p00;

assign grp_fu_2877_p00 = PixArray_val_V_4_3_0_reg_802_pp1_iter5_reg;

assign grp_fu_2877_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2885_p0 = grp_fu_2885_p00;

assign grp_fu_2885_p00 = PixArray_val_V_4_4_0_reg_792_pp1_iter5_reg;

assign grp_fu_2885_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2893_p0 = grp_fu_2893_p00;

assign grp_fu_2893_p00 = PixArray_val_V_4_5_0_reg_782_pp1_iter5_reg;

assign grp_fu_2893_p1 = sext_ln215_4_fu_2193_p1;

assign grp_fu_2901_p0 = grp_fu_2901_p00;

assign grp_fu_2901_p00 = PixArray_val_V_5_0_1_reg_771_pp1_iter6_reg;

assign grp_fu_2901_p1 = sext_ln215_5_fu_2236_p1;

assign grp_fu_2912_p0 = grp_fu_2912_p00;

assign grp_fu_2912_p00 = PixArray_val_V_5_1_1_reg_760_pp1_iter6_reg;

assign grp_fu_2912_p1 = sext_ln215_5_fu_2236_p1;

assign grp_fu_2923_p0 = grp_fu_2923_p00;

assign grp_fu_2923_p00 = PixArray_val_V_5_2_1_reg_749_pp1_iter6_reg;

assign grp_fu_2923_p1 = sext_ln215_5_fu_2236_p1;

assign grp_fu_2934_p0 = grp_fu_2934_p00;

assign grp_fu_2934_p00 = PixArray_val_V_5_3_1_reg_738_pp1_iter6_reg;

assign grp_fu_2934_p1 = sext_ln215_5_fu_2236_p1;

assign grp_fu_2945_p0 = grp_fu_2945_p00;

assign grp_fu_2945_p00 = PixArray_val_V_5_4_1_reg_727_pp1_iter6_reg;

assign grp_fu_2945_p1 = sext_ln215_5_fu_2236_p1;

assign grp_fu_2956_p0 = grp_fu_2956_p00;

assign grp_fu_2956_p00 = PixArray_val_V_5_5_1_reg_716_pp1_iter6_reg;

assign grp_fu_2956_p1 = sext_ln215_5_fu_2236_p1;

assign icmp164_fu_1251_p2 = ((tmp_3_fu_1241_p4 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_1032_p2 = ((HeightOut_cast_fu_1016_p1 > HeightIn) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_1074_p2 = ((indvar_flatten_reg_488 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_1086_p2 = ((j_reg_510 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln176_1_fu_1181_p2 = ((y_reg_521 == YLoopSize_reg_2982) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_1165_p2 = ((YLoopSize_reg_2982 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_1186_p2 = ((y_reg_521 > 12'd2) ? 1'b1 : 1'b0);

assign icmp_ln204_1_fu_1228_p2 = ((WriteLocNext_3_reg_555 < zext_ln138_reg_2972) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_1293_p2 = ((tmp_2_fu_1283_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1398_p2 = ((x_reg_591 == XLoopSize_reg_2988) ? 1'b1 : 1'b0);

assign icmp_ln318_1_fu_2353_p2 = (($signed(tmp_7_fu_2344_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln318_2_fu_2412_p2 = (($signed(tmp_9_fu_2403_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln318_3_fu_2471_p2 = (($signed(tmp_11_fu_2462_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln318_4_fu_2530_p2 = (($signed(tmp_13_fu_2521_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln318_5_fu_2589_p2 = (($signed(tmp_15_fu_2580_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_2294_p2 = (($signed(tmp_5_fu_2285_p4) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign idxprom5_i47_fu_1403_p1 = x_reg_591;

assign idxprom5_i_fu_1363_p1 = Phase_fu_1338_p3;

assign offset_1_fu_1214_p2 = ($signed(offset_reg_579) + $signed(32'd4294901760));

assign offset_2_fu_1277_p3 = ((GetNewLine_1_reg_3055[0:0] == 1'b1) ? offset_1_reg_3061 : offset_reg_579);

assign offset_3_fu_1304_p2 = (offset_2_fu_1277_p3 + LineRate);

assign offset_4_fu_1331_p3 = ((icmp_ln185_reg_3046[0:0] == 1'b1) ? select_ln204_fu_1315_p3 : offset_reg_579);

assign or_ln301_1_fu_2382_p2 = (tmp_6_fu_2337_p3 | icmp_ln318_1_fu_2353_p2);

assign or_ln301_2_fu_2441_p2 = (tmp_8_fu_2396_p3 | icmp_ln318_2_fu_2412_p2);

assign or_ln301_3_fu_2500_p2 = (tmp_10_fu_2455_p3 | icmp_ln318_3_fu_2471_p2);

assign or_ln301_4_fu_2559_p2 = (tmp_12_fu_2514_p3 | icmp_ln318_4_fu_2530_p2);

assign or_ln301_5_fu_2618_p2 = (tmp_14_fu_2573_p3 | icmp_ln318_5_fu_2589_p2);

assign or_ln301_fu_2323_p2 = (tmp_4_fu_2278_p3 | icmp_ln318_fu_2294_p2);

assign select_ln166_1_fu_1100_p3 = ((icmp_ln169_fu_1086_p2[0:0] == 1'b1) ? add_ln166_fu_1080_p2 : ap_phi_mux_i_phi_fu_503_p4);

assign select_ln166_fu_1092_p3 = ((icmp_ln169_fu_1086_p2[0:0] == 1'b1) ? 3'd0 : j_reg_510);

assign select_ln204_1_fu_1323_p3 = ((and_ln204_fu_1299_p2[0:0] == 1'b1) ? WriteLocNext_fu_1309_p2 : WriteLocNext_3_reg_555);

assign select_ln204_fu_1315_p3 = ((and_ln204_fu_1299_p2[0:0] == 1'b1) ? offset_3_fu_1304_p2 : offset_2_fu_1277_p3);

assign select_ln265_10_fu_1868_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 : PixArrayVal_val_V_0_9_reg_3355);

assign select_ln265_11_fu_1874_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 : PixArray_val_V_2_5_reg_3390);

assign select_ln265_12_fu_1897_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 : PixArrayVal_val_V_4_8_reg_3341);

assign select_ln265_13_fu_1903_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 : PixArrayVal_val_V_3_8_reg_3334);

assign select_ln265_14_fu_1909_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 : PixArrayVal_val_V_2_8_reg_3327);

assign select_ln265_15_fu_1915_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 : PixArrayVal_val_V_1_8_reg_3320);

assign select_ln265_16_fu_1921_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 : PixArrayVal_val_V_0_8_reg_3313);

assign select_ln265_17_fu_1927_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 : PixArray_val_V_3_5_reg_3348);

assign select_ln265_18_fu_1950_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 : PixArrayVal_val_V_4_7_reg_3299);

assign select_ln265_19_fu_1956_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 : PixArrayVal_val_V_3_7_reg_3292);

assign select_ln265_1_fu_1797_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 : PixArrayVal_val_V_3_10_reg_3418);

assign select_ln265_20_fu_1962_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 : PixArrayVal_val_V_2_7_reg_3285);

assign select_ln265_21_fu_1968_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 : PixArrayVal_val_V_1_7_reg_3278);

assign select_ln265_22_fu_1974_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 : PixArrayVal_val_V_0_7_reg_3271);

assign select_ln265_23_fu_1980_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 : PixArray_val_V_4_5_reg_3306);

assign select_ln265_24_fu_2003_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 : PixArrayVal_val_V_4_6_reg_3255);

assign select_ln265_25_fu_2009_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 : PixArrayVal_val_V_3_6_reg_3247);

assign select_ln265_26_fu_2015_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 : PixArrayVal_val_V_2_6_reg_3239);

assign select_ln265_27_fu_2021_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 : PixArrayVal_val_V_1_6_reg_3231);

assign select_ln265_28_fu_2027_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 : PixArrayVal_val_V_0_6_reg_3223);

assign select_ln265_29_fu_2033_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 : PixArray_val_V_5_5_2_reg_3263);

assign select_ln265_2_fu_1803_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 : PixArrayVal_val_V_2_10_reg_3411);

assign select_ln265_3_fu_1809_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 : PixArrayVal_val_V_1_10_reg_3404);

assign select_ln265_4_fu_1815_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_0_reg_652 : PixArrayVal_val_V_0_10_reg_3397);

assign select_ln265_5_fu_1821_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArray_val_V_5_5_0_reg_602 : PixArray_val_V_1_5_reg_3432);

assign select_ln265_6_fu_1844_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 : PixArrayVal_val_V_4_9_reg_3383);

assign select_ln265_7_fu_1850_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_3_reg_622 : PixArrayVal_val_V_3_9_reg_3376);

assign select_ln265_8_fu_1856_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_2_reg_632 : PixArrayVal_val_V_2_9_reg_3369);

assign select_ln265_9_fu_1862_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_1_reg_642 : PixArrayVal_val_V_1_9_reg_3362);

assign select_ln265_fu_1791_p3 = ((cmp106_reg_3082[0:0] == 1'b1) ? ap_phi_reg_pp1_iter2_PixArrayVal_val_V_4_reg_612 : PixArrayVal_val_V_4_10_reg_3425);

assign select_ln301_10_fu_2551_p3 = ((xor_ln301_4_fu_2545_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_11_fu_2610_p3 = ((xor_ln301_5_fu_2604_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_1_fu_2388_p3 = ((or_ln301_1_fu_2382_p2[0:0] == 1'b1) ? select_ln301_7_fu_2374_p3 : trunc_ln301_1_fu_2359_p4);

assign select_ln301_2_fu_2447_p3 = ((or_ln301_2_fu_2441_p2[0:0] == 1'b1) ? select_ln301_8_fu_2433_p3 : trunc_ln301_2_fu_2418_p4);

assign select_ln301_3_fu_2506_p3 = ((or_ln301_3_fu_2500_p2[0:0] == 1'b1) ? select_ln301_9_fu_2492_p3 : trunc_ln301_3_fu_2477_p4);

assign select_ln301_4_fu_2565_p3 = ((or_ln301_4_fu_2559_p2[0:0] == 1'b1) ? select_ln301_10_fu_2551_p3 : trunc_ln301_4_fu_2536_p4);

assign select_ln301_5_fu_2624_p3 = ((or_ln301_5_fu_2618_p2[0:0] == 1'b1) ? select_ln301_11_fu_2610_p3 : trunc_ln301_5_fu_2595_p4);

assign select_ln301_6_fu_2315_p3 = ((xor_ln301_fu_2309_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_7_fu_2374_p3 = ((xor_ln301_1_fu_2368_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_8_fu_2433_p3 = ((xor_ln301_2_fu_2427_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_9_fu_2492_p3 = ((xor_ln301_3_fu_2486_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln301_fu_2329_p3 = ((or_ln301_fu_2323_p2[0:0] == 1'b1) ? select_ln301_6_fu_2315_p3 : trunc_ln2_fu_2300_p4);

assign sext_ln215_1_fu_2088_p1 = $signed(FiltCoeff_1_q0);

assign sext_ln215_2_fu_2116_p1 = $signed(FiltCoeff_2_q0);

assign sext_ln215_3_fu_2147_p1 = $signed(FiltCoeff_3_q0);

assign sext_ln215_4_fu_2193_p1 = $signed(FiltCoeff_4_q0);

assign sext_ln215_5_fu_2236_p1 = $signed(FiltCoeff_5_q0);

assign sext_ln215_fu_2060_p1 = $signed(FiltCoeff_0_q0);

assign sub_ln171_fu_1136_p2 = (tmp_cast_fu_1118_p3 - zext_ln171_fu_1132_p1);

assign tmp_10_fu_2455_p3 = grp_fu_2934_p3[32'd26];

assign tmp_11_fu_2462_p4 = {{grp_fu_2934_p3[26:20]}};

assign tmp_12_fu_2514_p3 = grp_fu_2945_p3[32'd26];

assign tmp_13_fu_2521_p4 = {{grp_fu_2945_p3[26:20]}};

assign tmp_14_fu_2573_p3 = grp_fu_2956_p3[32'd26];

assign tmp_15_fu_2580_p4 = {{grp_fu_2956_p3[26:20]}};

assign tmp_1_fu_1125_p3 = {{select_ln166_1_reg_3008}, {1'd0}};

assign tmp_2_fu_1283_p4 = {{offset_2_fu_1277_p3[31:16]}};

assign tmp_3_fu_1241_p4 = {{y_reg_521[11:2]}};

assign tmp_4_fu_2278_p3 = grp_fu_2901_p3[32'd26];

assign tmp_5_fu_2285_p4 = {{grp_fu_2901_p3[26:20]}};

assign tmp_6_fu_2337_p3 = grp_fu_2912_p3[32'd26];

assign tmp_7_fu_2344_p4 = {{grp_fu_2912_p3[26:20]}};

assign tmp_8_fu_2396_p3 = grp_fu_2923_p3[32'd26];

assign tmp_9_fu_2403_p4 = {{grp_fu_2923_p3[26:20]}};

assign tmp_cast_fu_1118_p3 = {{trunc_ln171_reg_3015}, {3'd0}};

assign tmp_fu_1192_p4 = {{offset_reg_579[31:16]}};

assign trunc_ln171_fu_1108_p1 = select_ln166_1_fu_1100_p3[5:0];

assign trunc_ln2_fu_2300_p4 = {{grp_fu_2901_p3[19:12]}};

assign trunc_ln301_1_fu_2359_p4 = {{grp_fu_2912_p3[19:12]}};

assign trunc_ln301_2_fu_2418_p4 = {{grp_fu_2923_p3[19:12]}};

assign trunc_ln301_3_fu_2477_p4 = {{grp_fu_2934_p3[19:12]}};

assign trunc_ln301_4_fu_2536_p4 = {{grp_fu_2945_p3[19:12]}};

assign trunc_ln301_5_fu_2595_p4 = {{grp_fu_2956_p3[19:12]}};

assign trunc_ln_fu_1263_p4 = {{offset_reg_579[15:10]}};

assign vfltCoeff_0_address0 = zext_ln171_2_fu_1151_p1;

assign x_1_fu_1392_p2 = (x_reg_591 + 12'd1);

assign xor_ln301_1_fu_2368_p2 = (tmp_6_fu_2337_p3 ^ 1'd1);

assign xor_ln301_2_fu_2427_p2 = (tmp_8_fu_2396_p3 ^ 1'd1);

assign xor_ln301_3_fu_2486_p2 = (tmp_10_fu_2455_p3 ^ 1'd1);

assign xor_ln301_4_fu_2545_p2 = (tmp_12_fu_2514_p3 ^ 1'd1);

assign xor_ln301_5_fu_2604_p2 = (tmp_14_fu_2573_p3 ^ 1'd1);

assign xor_ln301_fu_2309_p2 = (tmp_4_fu_2278_p3 ^ 1'd1);

assign y_1_fu_1175_p2 = (y_reg_521 + 12'd1);

assign zext_ln138_fu_1024_p1 = HeightOut;

assign zext_ln141_fu_1028_p1 = HeightIn;

assign zext_ln158_fu_1273_p1 = trunc_ln_fu_1263_p4;

assign zext_ln166_fu_1156_p1 = select_ln166_1_reg_3008_pp0_iter1_reg;

assign zext_ln171_1_fu_1142_p1 = select_ln166_reg_3003;

assign zext_ln171_2_fu_1151_p1 = add_ln171_fu_1145_p2;

assign zext_ln171_fu_1132_p1 = tmp_1_fu_1125_p3;

always @ (posedge ap_clk) begin
    zext_ln138_reg_2972[31:12] <= 20'b00000000000000000000;
    zext_ln141_reg_2977[16] <= 1'b0;
end

endmodule //bd_v_multi_scaler_0_0_vscale_core_polyphase
