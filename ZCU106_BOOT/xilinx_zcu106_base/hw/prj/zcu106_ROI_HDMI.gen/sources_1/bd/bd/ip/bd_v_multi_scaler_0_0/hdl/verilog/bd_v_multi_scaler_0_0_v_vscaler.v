// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_vscaler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_dout,
        stream_in_empty_n,
        stream_in_read,
        stream_out_din,
        stream_out_full_n,
        stream_out_write,
        HeightIn_dout,
        HeightIn_empty_n,
        HeightIn_read,
        WidthIn_cast1_loc_dout,
        WidthIn_cast1_loc_empty_n,
        WidthIn_cast1_loc_read,
        HeightOut_cast_loc_dout,
        HeightOut_cast_loc_empty_n,
        HeightOut_cast_loc_read,
        LineRate_dout,
        LineRate_empty_n,
        LineRate_read,
        vfltCoeff_0_address0,
        vfltCoeff_0_ce0,
        vfltCoeff_0_q0,
        HeightOut_cast_loc_out_din,
        HeightOut_cast_loc_out_full_n,
        HeightOut_cast_loc_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_in_dout;
input   stream_in_empty_n;
output   stream_in_read;
output  [47:0] stream_out_din;
input   stream_out_full_n;
output   stream_out_write;
input  [15:0] HeightIn_dout;
input   HeightIn_empty_n;
output   HeightIn_read;
input  [12:0] WidthIn_cast1_loc_dout;
input   WidthIn_cast1_loc_empty_n;
output   WidthIn_cast1_loc_read;
input  [11:0] HeightOut_cast_loc_dout;
input   HeightOut_cast_loc_empty_n;
output   HeightOut_cast_loc_read;
input  [31:0] LineRate_dout;
input   LineRate_empty_n;
output   LineRate_read;
output  [8:0] vfltCoeff_0_address0;
output   vfltCoeff_0_ce0;
input  [15:0] vfltCoeff_0_q0;
output  [11:0] HeightOut_cast_loc_out_din;
input   HeightOut_cast_loc_out_full_n;
output   HeightOut_cast_loc_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_read;
reg stream_out_write;
reg HeightIn_read;
reg WidthIn_cast1_loc_read;
reg HeightOut_cast_loc_read;
reg LineRate_read;
reg HeightOut_cast_loc_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    HeightIn_blk_n;
reg    WidthIn_cast1_loc_blk_n;
reg    HeightOut_cast_loc_blk_n;
reg    LineRate_blk_n;
reg    HeightOut_cast_loc_out_blk_n;
reg   [15:0] HeightIn_read_reg_92;
reg   [11:0] HeightOut_cast_loc_read_reg_97;
reg   [31:0] LineRate_read_reg_102;
reg   [12:0] WidthIn_cast1_loc_read_reg_107;
wire    grp_vscale_core_polyphase_fu_78_ap_start;
wire    grp_vscale_core_polyphase_fu_78_ap_done;
wire    grp_vscale_core_polyphase_fu_78_ap_idle;
wire    grp_vscale_core_polyphase_fu_78_ap_ready;
wire    grp_vscale_core_polyphase_fu_78_SrcImg_read;
wire   [47:0] grp_vscale_core_polyphase_fu_78_OutImg_din;
wire    grp_vscale_core_polyphase_fu_78_OutImg_write;
wire   [8:0] grp_vscale_core_polyphase_fu_78_vfltCoeff_0_address0;
wire    grp_vscale_core_polyphase_fu_78_vfltCoeff_0_ce0;
reg    grp_vscale_core_polyphase_fu_78_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    ap_block_state1;
reg   [2:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_vscale_core_polyphase_fu_78_ap_start_reg = 1'b0;
end

bd_v_multi_scaler_0_0_vscale_core_polyphase grp_vscale_core_polyphase_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_vscale_core_polyphase_fu_78_ap_start),
    .ap_done(grp_vscale_core_polyphase_fu_78_ap_done),
    .ap_idle(grp_vscale_core_polyphase_fu_78_ap_idle),
    .ap_ready(grp_vscale_core_polyphase_fu_78_ap_ready),
    .SrcImg_dout(stream_in_dout),
    .SrcImg_empty_n(stream_in_empty_n),
    .SrcImg_read(grp_vscale_core_polyphase_fu_78_SrcImg_read),
    .OutImg_din(grp_vscale_core_polyphase_fu_78_OutImg_din),
    .OutImg_full_n(stream_out_full_n),
    .OutImg_write(grp_vscale_core_polyphase_fu_78_OutImg_write),
    .HeightIn(HeightIn_read_reg_92),
    .WidthIn(WidthIn_cast1_loc_read_reg_107),
    .HeightOut(HeightOut_cast_loc_read_reg_97),
    .LineRate(LineRate_read_reg_102),
    .vfltCoeff_0_address0(grp_vscale_core_polyphase_fu_78_vfltCoeff_0_address0),
    .vfltCoeff_0_ce0(grp_vscale_core_polyphase_fu_78_vfltCoeff_0_ce0),
    .vfltCoeff_0_q0(vfltCoeff_0_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_vscale_core_polyphase_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_vscale_core_polyphase_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_vscale_core_polyphase_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_vscale_core_polyphase_fu_78_ap_ready == 1'b1)) begin
            grp_vscale_core_polyphase_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HeightIn_read_reg_92 <= HeightIn_dout;
        HeightOut_cast_loc_read_reg_97 <= HeightOut_cast_loc_dout;
        LineRate_read_reg_102 <= LineRate_dout;
        WidthIn_cast1_loc_read_reg_107 <= WidthIn_cast1_loc_dout;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_blk_n = HeightIn_empty_n;
    end else begin
        HeightIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_read = 1'b1;
    end else begin
        HeightIn_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_blk_n = HeightOut_cast_loc_empty_n;
    end else begin
        HeightOut_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_out_blk_n = HeightOut_cast_loc_out_full_n;
    end else begin
        HeightOut_cast_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_out_write = 1'b1;
    end else begin
        HeightOut_cast_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_read = 1'b1;
    end else begin
        HeightOut_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        LineRate_blk_n = LineRate_empty_n;
    end else begin
        LineRate_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        LineRate_read = 1'b1;
    end else begin
        LineRate_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_cast1_loc_blk_n = WidthIn_cast1_loc_empty_n;
    end else begin
        WidthIn_cast1_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_cast1_loc_read = 1'b1;
    end else begin
        WidthIn_cast1_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((grp_vscale_core_polyphase_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_vscale_core_polyphase_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_in_read = grp_vscale_core_polyphase_fu_78_SrcImg_read;
    end else begin
        stream_in_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_out_write = grp_vscale_core_polyphase_fu_78_OutImg_write;
    end else begin
        stream_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_vscale_core_polyphase_fu_78_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HeightOut_cast_loc_out_din = HeightOut_cast_loc_dout;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == HeightOut_cast_loc_out_full_n) | (1'b0 == LineRate_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (1'b0 == WidthIn_cast1_loc_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1));
end

assign grp_vscale_core_polyphase_fu_78_ap_start = grp_vscale_core_polyphase_fu_78_ap_start_reg;

assign stream_out_din = grp_vscale_core_polyphase_fu_78_OutImg_din;

assign vfltCoeff_0_address0 = grp_vscale_core_polyphase_fu_78_vfltCoeff_0_address0;

assign vfltCoeff_0_ce0 = grp_vscale_core_polyphase_fu_78_vfltCoeff_0_ce0;

endmodule //bd_v_multi_scaler_0_0_v_vscaler
