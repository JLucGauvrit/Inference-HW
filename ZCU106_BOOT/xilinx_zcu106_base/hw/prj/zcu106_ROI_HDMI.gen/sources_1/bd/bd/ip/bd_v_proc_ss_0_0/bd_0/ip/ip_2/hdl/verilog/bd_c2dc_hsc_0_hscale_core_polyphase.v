// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_c2dc_hsc_0_hscale_core_polyphase (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_upsampled_dout,
        stream_upsampled_empty_n,
        stream_upsampled_read,
        Height,
        WidthIn,
        WidthOut,
        hfltCoeff_address0,
        hfltCoeff_ce0,
        hfltCoeff_q0,
        phasesH_address0,
        phasesH_ce0,
        phasesH_q0,
        stream_scaled_din,
        stream_scaled_full_n,
        stream_scaled_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state5 = 6'd4;
parameter    ap_ST_fsm_state6 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state24 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] stream_upsampled_dout;
input   stream_upsampled_empty_n;
output   stream_upsampled_read;
input  [15:0] Height;
input  [15:0] WidthIn;
input  [15:0] WidthOut;
output  [8:0] hfltCoeff_address0;
output   hfltCoeff_ce0;
input  [15:0] hfltCoeff_q0;
output  [10:0] phasesH_address0;
output   phasesH_ce0;
input  [31:0] phasesH_q0;
output  [47:0] stream_scaled_din;
input   stream_scaled_full_n;
output   stream_scaled_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_upsampled_read;
reg hfltCoeff_ce0;
reg phasesH_ce0;
reg stream_scaled_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [3:0] BitSetCnt_address0;
reg    BitSetCnt_ce0;
wire   [2:0] BitSetCnt_q0;
wire   [5:0] OneBitIdx_address0;
reg    OneBitIdx_ce0;
wire   [1:0] OneBitIdx_q0;
wire   [5:0] OneBitIdx_address1;
reg    OneBitIdx_ce1;
wire   [1:0] OneBitIdx_q1;
wire   [5:0] OneBitIdx_address2;
reg    OneBitIdx_ce2;
wire   [1:0] OneBitIdx_q2;
wire   [5:0] OneBitIdx_address3;
reg    OneBitIdx_ce3;
wire   [1:0] OneBitIdx_q3;
wire   [5:0] OneBitIdx_address4;
reg    OneBitIdx_ce4;
wire   [1:0] OneBitIdx_q4;
reg    stream_upsampled_blk_n;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln636_reg_2741;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter4_reg;
reg   [0:0] icmp_ln647_reg_2828;
reg   [0:0] icmp_ln659_reg_2854;
reg    stream_scaled_blk_n;
reg    ap_enable_reg_pp1_iter16;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter15_reg;
reg   [0:0] icmp_ln696_reg_2745;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter15_reg;
reg   [0:0] and_ln794_reg_2858;
reg   [0:0] and_ln794_reg_2858_pp1_iter15_reg;
reg   [8:0] indvar_flatten_reg_683;
reg   [6:0] i_reg_694;
reg   [2:0] j_reg_705;
reg   [12:0] x_reg_727;
reg   [12:0] x_reg_727_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
wire    ap_block_state11_pp1_stage0_iter4;
reg    ap_predicate_op334_read_state12;
reg    ap_block_state12_pp1_stage0_iter5;
wire    ap_block_state13_pp1_stage0_iter6;
wire    ap_block_state14_pp1_stage0_iter7;
wire    ap_block_state15_pp1_stage0_iter8;
wire    ap_block_state16_pp1_stage0_iter9;
wire    ap_block_state17_pp1_stage0_iter10;
wire    ap_block_state18_pp1_stage0_iter11;
wire    ap_block_state19_pp1_stage0_iter12;
wire    ap_block_state20_pp1_stage0_iter13;
wire    ap_block_state21_pp1_stage0_iter14;
wire    ap_block_state22_pp1_stage0_iter15;
reg    ap_predicate_op438_write_state23;
reg    ap_block_state23_pp1_stage0_iter16;
reg    ap_block_pp1_stage0_11001;
reg   [12:0] x_reg_727_pp1_iter2_reg;
reg   [12:0] x_reg_727_pp1_iter3_reg;
reg   [7:0] nrWrsPrev_reg_739;
reg   [15:0] xReadPos_reg_751;
reg   [15:0] xWritePos_reg_762;
reg   [31:0] ReadEn_reg_773;
reg   [31:0] ReadEn_1_reg_794;
reg   [15:0] xWritePos_2_reg_822;
reg   [15:0] xReadPos_2_reg_838;
wire   [11:0] empty_fu_902_p1;
wire   [16:0] zext_ln224_fu_906_p1;
wire   [11:0] TotalPixels_fu_924_p3;
wire   [8:0] add_ln608_1_fu_932_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln608_fu_938_p2;
reg   [0:0] icmp_ln608_reg_2448;
wire   [2:0] select_ln608_fu_956_p3;
reg   [2:0] select_ln608_reg_2452;
reg   [2:0] select_ln608_reg_2452_pp0_iter1_reg;
wire   [6:0] select_ln608_1_fu_964_p3;
reg   [6:0] select_ln608_1_reg_2457;
reg   [6:0] select_ln608_1_reg_2457_pp0_iter1_reg;
wire   [5:0] empty_74_fu_972_p1;
reg   [5:0] empty_74_reg_2464;
wire   [2:0] add_ln611_fu_976_p2;
wire   [12:0] zext_ln620_fu_1058_p1;
wire    ap_CS_fsm_state5;
wire   [11:0] y_4_fu_1062_p2;
reg   [11:0] y_4_reg_2732;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln620_fu_1068_p2;
wire   [0:0] icmp_ln636_fu_1073_p2;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter1_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter2_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter3_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter5_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter6_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter7_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter8_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter9_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter10_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter11_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter12_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter13_reg;
reg   [0:0] icmp_ln636_reg_2741_pp1_iter14_reg;
wire   [0:0] icmp_ln696_fu_1078_p2;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter1_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter2_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter3_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter4_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter5_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter6_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter7_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter8_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter9_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter10_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter11_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter12_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter13_reg;
reg   [0:0] icmp_ln696_reg_2745_pp1_iter14_reg;
wire   [12:0] x_4_fu_1109_p2;
reg   [12:0] x_4_reg_2754;
reg    ap_enable_reg_pp1_iter0;
wire   [5:0] PhaseH_0_fu_1125_p1;
reg   [5:0] PhaseH_0_reg_2759;
reg   [5:0] PhaseH_0_reg_2759_pp1_iter3_reg;
reg   [5:0] PhaseH_0_reg_2759_pp1_iter4_reg;
reg   [5:0] PhaseH_0_reg_2759_pp1_iter5_reg;
reg   [1:0] ArrayLoc_0_reg_2764;
reg   [1:0] ArrayLoc_0_reg_2764_pp1_iter3_reg;
reg   [1:0] ArrayLoc_0_reg_2764_pp1_iter4_reg;
reg   [1:0] ArrayLoc_0_reg_2764_pp1_iter5_reg;
wire   [0:0] p_Result_7_fu_1139_p3;
reg   [0:0] p_Result_7_reg_2769;
reg   [0:0] p_Result_7_reg_2769_pp1_iter3_reg;
reg   [5:0] PhaseH_1_reg_2778;
reg   [5:0] PhaseH_1_reg_2778_pp1_iter3_reg;
reg   [5:0] PhaseH_1_reg_2778_pp1_iter4_reg;
reg   [5:0] PhaseH_1_reg_2778_pp1_iter5_reg;
reg   [1:0] ArrayLoc_1_reg_2783;
reg   [1:0] ArrayLoc_1_reg_2783_pp1_iter3_reg;
reg   [1:0] ArrayLoc_1_reg_2783_pp1_iter4_reg;
reg   [1:0] ArrayLoc_1_reg_2783_pp1_iter5_reg;
wire   [0:0] p_Result_7_1_fu_1167_p3;
reg   [0:0] p_Result_7_1_reg_2788;
reg   [0:0] p_Result_7_1_reg_2788_pp1_iter3_reg;
reg   [0:0] tmp_19_reg_2797;
reg   [0:0] tmp_19_reg_2797_pp1_iter3_reg;
reg   [0:0] tmp_20_reg_2802;
reg   [0:0] tmp_20_reg_2802_pp1_iter3_reg;
wire   [0:0] trunc_ln793_1_fu_1208_p1;
reg   [0:0] trunc_ln793_1_reg_2812;
reg   [6:0] tmp_21_reg_2817;
wire   [0:0] icmp141_fu_1238_p2;
reg   [0:0] icmp141_reg_2822;
reg   [0:0] icmp141_reg_2822_pp1_iter4_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter5_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter6_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter7_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter8_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter9_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter10_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter11_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter12_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter13_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter14_reg;
reg   [0:0] icmp141_reg_2822_pp1_iter15_reg;
wire   [0:0] icmp_ln647_fu_1244_p2;
wire   [0:0] icmp_fu_1260_p2;
reg   [0:0] icmp_reg_2832;
wire   [0:0] icmp_ln659_fu_1276_p2;
wire   [0:0] and_ln794_fu_1320_p2;
reg   [0:0] and_ln794_reg_2858_pp1_iter5_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter6_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter7_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter8_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter9_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter10_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter11_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter12_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter13_reg;
reg   [0:0] and_ln794_reg_2858_pp1_iter14_reg;
wire   [0:0] cmp138_0_fu_1330_p2;
reg   [0:0] cmp138_0_reg_2862;
reg   [0:0] cmp138_0_reg_2862_pp1_iter5_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter6_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter7_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter8_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter9_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter10_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter11_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter12_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter13_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter14_reg;
reg   [0:0] cmp138_0_reg_2862_pp1_iter15_reg;
wire   [0:0] icmp138_fu_1367_p2;
reg   [0:0] icmp138_reg_2874;
reg   [0:0] icmp138_reg_2874_pp1_iter5_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter6_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter7_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter8_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter9_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter10_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter11_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter12_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter13_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter14_reg;
reg   [0:0] icmp138_reg_2874_pp1_iter15_reg;
wire   [0:0] cmp189_0_fu_1405_p2;
reg   [0:0] cmp189_0_reg_2886;
reg   [0:0] cmp189_0_reg_2886_pp1_iter5_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter6_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter7_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter8_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter9_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter10_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter11_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter12_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter13_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter14_reg;
reg   [0:0] cmp189_0_reg_2886_pp1_iter15_reg;
wire   [0:0] brmerge_0_demorgan_fu_1459_p2;
reg   [0:0] brmerge_0_demorgan_reg_2901;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter5_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter6_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter7_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter8_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter9_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter10_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter11_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter12_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter13_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter14_reg;
reg   [0:0] brmerge_0_demorgan_reg_2901_pp1_iter15_reg;
wire   [0:0] icmp_ln800_fu_1919_p2;
reg   [0:0] icmp_ln800_reg_2914;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter6_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter7_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter8_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter9_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter10_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter11_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter12_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter13_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter14_reg;
reg   [0:0] icmp_ln800_reg_2914_pp1_iter15_reg;
wire   [0:0] icmp_ln800_1_fu_1941_p2;
reg   [0:0] icmp_ln800_1_reg_2921;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter6_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter7_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter8_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter9_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter10_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter11_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter12_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter13_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter14_reg;
reg   [0:0] icmp_ln800_1_reg_2921_pp1_iter15_reg;
wire   [0:0] icmp_ln815_fu_1979_p2;
reg   [0:0] icmp_ln815_reg_2928;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter6_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter7_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter8_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter9_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter10_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter11_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter12_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter13_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter14_reg;
reg   [0:0] icmp_ln815_reg_2928_pp1_iter15_reg;
wire   [0:0] icmp_ln815_1_fu_1985_p2;
reg   [0:0] icmp_ln815_1_reg_2935;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter6_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter7_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter8_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter9_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter10_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter11_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter12_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter13_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter14_reg;
reg   [0:0] icmp_ln815_1_reg_2935_pp1_iter15_reg;
wire   [0:0] icmp_ln815_2_fu_2007_p2;
reg   [0:0] icmp_ln815_2_reg_2942;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter6_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter7_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter8_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter9_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter10_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter11_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter12_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter13_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter14_reg;
reg   [0:0] icmp_ln815_2_reg_2942_pp1_iter15_reg;
reg   [7:0] OutPix_reg_2949;
reg   [7:0] OutPix_1_reg_2958;
reg   [7:0] OutPix_2_reg_2967;
reg   [7:0] OutPix_3_reg_2976;
reg   [7:0] OutPix_4_reg_2985;
reg   [7:0] OutPix_5_reg_2994;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter6;
reg    ap_condition_pp1_exit_iter5_state12;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter8;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg   [5:0] FiltCoeff_0_0_address0;
reg    FiltCoeff_0_0_ce0;
reg    FiltCoeff_0_0_we0;
wire   [15:0] FiltCoeff_0_0_q0;
reg   [5:0] FiltCoeff_0_1_address0;
reg    FiltCoeff_0_1_ce0;
reg    FiltCoeff_0_1_we0;
wire   [15:0] FiltCoeff_0_1_q0;
reg   [5:0] FiltCoeff_1_0_address0;
reg    FiltCoeff_1_0_ce0;
reg    FiltCoeff_1_0_we0;
wire   [15:0] FiltCoeff_1_0_q0;
reg   [5:0] FiltCoeff_1_1_address0;
reg    FiltCoeff_1_1_ce0;
reg    FiltCoeff_1_1_we0;
wire   [15:0] FiltCoeff_1_1_q0;
reg   [5:0] FiltCoeff_2_0_address0;
reg    FiltCoeff_2_0_ce0;
reg    FiltCoeff_2_0_we0;
wire   [15:0] FiltCoeff_2_0_q0;
reg   [5:0] FiltCoeff_2_1_address0;
reg    FiltCoeff_2_1_ce0;
reg    FiltCoeff_2_1_we0;
wire   [15:0] FiltCoeff_2_1_q0;
reg   [5:0] FiltCoeff_3_0_address0;
reg    FiltCoeff_3_0_ce0;
reg    FiltCoeff_3_0_we0;
wire   [15:0] FiltCoeff_3_0_q0;
reg   [5:0] FiltCoeff_3_1_address0;
reg    FiltCoeff_3_1_ce0;
reg    FiltCoeff_3_1_we0;
wire   [15:0] FiltCoeff_3_1_q0;
reg   [5:0] FiltCoeff_4_0_address0;
reg    FiltCoeff_4_0_ce0;
reg    FiltCoeff_4_0_we0;
wire   [15:0] FiltCoeff_4_0_q0;
reg   [5:0] FiltCoeff_4_1_address0;
reg    FiltCoeff_4_1_ce0;
reg    FiltCoeff_4_1_we0;
wire   [15:0] FiltCoeff_4_1_q0;
reg   [5:0] FiltCoeff_5_0_address0;
reg    FiltCoeff_5_0_ce0;
reg    FiltCoeff_5_0_we0;
wire   [15:0] FiltCoeff_5_0_q0;
reg   [5:0] FiltCoeff_5_1_address0;
reg    FiltCoeff_5_1_ce0;
reg    FiltCoeff_5_1_we0;
wire   [15:0] FiltCoeff_5_1_q0;
wire    grp_hscale_polyphase_fu_852_ap_start;
wire    grp_hscale_polyphase_fu_852_ap_done;
wire    grp_hscale_polyphase_fu_852_ap_idle;
wire    grp_hscale_polyphase_fu_852_ap_ready;
reg    grp_hscale_polyphase_fu_852_ap_ce;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff1_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff1_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff12_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff12_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff13_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff13_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff2_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff2_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff24_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff24_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff3_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff3_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff35_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff35_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff4_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff4_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff46_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff46_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff5_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff5_ce0;
wire   [5:0] grp_hscale_polyphase_fu_852_FiltCoeff57_address0;
wire    grp_hscale_polyphase_fu_852_FiltCoeff57_ce0;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_0;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_1;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_2;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_3;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_4;
wire   [7:0] grp_hscale_polyphase_fu_852_ap_return_5;
reg    ap_predicate_op403_call_state13;
reg    ap_predicate_op404_call_state14;
reg    ap_predicate_op405_call_state15;
reg    ap_predicate_op406_call_state16;
reg    ap_predicate_op407_call_state17;
reg    ap_predicate_op408_call_state18;
reg    ap_predicate_op409_call_state19;
wire    ap_block_state7_pp1_stage0_iter0_ignore_call48;
wire    ap_block_state8_pp1_stage0_iter1_ignore_call48;
wire    ap_block_state9_pp1_stage0_iter2_ignore_call48;
wire    ap_block_state10_pp1_stage0_iter3_ignore_call48;
wire    ap_block_state11_pp1_stage0_iter4_ignore_call48;
reg    ap_block_state12_pp1_stage0_iter5_ignore_call48;
wire    ap_block_state13_pp1_stage0_iter6_ignore_call48;
wire    ap_block_state14_pp1_stage0_iter7_ignore_call48;
wire    ap_block_state15_pp1_stage0_iter8_ignore_call48;
wire    ap_block_state16_pp1_stage0_iter9_ignore_call48;
wire    ap_block_state17_pp1_stage0_iter10_ignore_call48;
wire    ap_block_state18_pp1_stage0_iter11_ignore_call48;
wire    ap_block_state19_pp1_stage0_iter12_ignore_call48;
wire    ap_block_state20_pp1_stage0_iter13_ignore_call48;
wire    ap_block_state21_pp1_stage0_iter14_ignore_call48;
wire    ap_block_state22_pp1_stage0_iter15_ignore_call48;
reg    ap_block_state23_pp1_stage0_iter16_ignore_call48;
reg    ap_block_pp1_stage0_11001_ignoreCallOp403;
wire   [17:0] grp_reg_ap_uint_18_s_fu_1119_d;
wire   [17:0] grp_reg_ap_uint_18_s_fu_1119_ap_return;
reg    grp_reg_ap_uint_18_s_fu_1119_ap_ce;
reg    ap_predicate_op176_call_state8;
wire    ap_block_state7_pp1_stage0_iter0_ignore_call37;
wire    ap_block_state8_pp1_stage0_iter1_ignore_call37;
wire    ap_block_state9_pp1_stage0_iter2_ignore_call37;
wire    ap_block_state10_pp1_stage0_iter3_ignore_call37;
wire    ap_block_state11_pp1_stage0_iter4_ignore_call37;
reg    ap_block_state12_pp1_stage0_iter5_ignore_call37;
wire    ap_block_state13_pp1_stage0_iter6_ignore_call37;
wire    ap_block_state14_pp1_stage0_iter7_ignore_call37;
wire    ap_block_state15_pp1_stage0_iter8_ignore_call37;
wire    ap_block_state16_pp1_stage0_iter9_ignore_call37;
wire    ap_block_state17_pp1_stage0_iter10_ignore_call37;
wire    ap_block_state18_pp1_stage0_iter11_ignore_call37;
wire    ap_block_state19_pp1_stage0_iter12_ignore_call37;
wire    ap_block_state20_pp1_stage0_iter13_ignore_call37;
wire    ap_block_state21_pp1_stage0_iter14_ignore_call37;
wire    ap_block_state22_pp1_stage0_iter15_ignore_call37;
reg    ap_block_state23_pp1_stage0_iter16_ignore_call37;
reg    ap_block_pp1_stage0_11001_ignoreCallOp176;
reg   [6:0] ap_phi_mux_i_phi_fu_698_p4;
wire    ap_block_pp0_stage0;
reg   [11:0] y_reg_716;
wire    ap_CS_fsm_state24;
reg   [12:0] ap_phi_mux_x_phi_fu_731_p4;
reg   [7:0] ap_phi_mux_nrWrsPrev_phi_fu_743_p4;
reg   [7:0] ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6;
reg   [15:0] ap_phi_mux_xReadPos_phi_fu_755_p4;
reg   [15:0] ap_phi_mux_xWritePos_phi_fu_766_p4;
reg   [31:0] ap_phi_mux_ReadEn_phi_fu_777_p4;
reg   [15:0] ap_phi_mux_xWritePos_1_phi_fu_787_p4;
wire   [15:0] xWritePos_3_fu_1394_p2;
wire   [15:0] ap_phi_reg_pp1_iter4_xWritePos_1_reg_784;
wire   [31:0] ap_phi_reg_pp1_iter4_ReadEn_1_reg_794;
wire   [31:0] zext_ln716_fu_1281_p1;
wire   [7:0] ap_phi_reg_pp1_iter4_nrWrsPrev_1_reg_808;
wire   [7:0] zext_ln631_fu_1453_p1;
wire   [15:0] ap_phi_reg_pp1_iter4_xWritePos_2_reg_822;
wire   [15:0] ap_phi_reg_pp1_iter4_xReadPos_2_reg_838;
wire   [15:0] xReadPos_3_fu_1292_p3;
reg    grp_hscale_polyphase_fu_852_ap_start_reg;
reg    ap_predicate_op403_call_state13_state12;
wire   [63:0] p_cast_fu_1015_p1;
wire   [63:0] zext_ln608_fu_1020_p1;
wire   [63:0] zext_ln703_fu_1104_p1;
wire   [63:0] zext_ln534_fu_1199_p1;
wire   [63:0] tmp_10_cast_fu_1352_p1;
wire   [63:0] tmp_12_cast_fu_1389_p1;
wire   [63:0] tmp_14_cast_fu_1427_p1;
wire   [63:0] tmp_15_cast_fu_1448_p1;
wire   [63:0] tmp_18_cast_fu_1481_p1;
reg   [7:0] OutPixPrv_val_V_5_01136_fu_252;
wire   [7:0] select_ln815_8_fu_2413_p3;
reg   [7:0] OutPixPrv_4_val_V_1_fu_256;
wire   [7:0] OutPixPrv_4_val_V_fu_2381_p3;
reg   [7:0] OutPixPrv_0_val_V_1_fu_260;
wire   [7:0] OutPixPrv_0_val_V_fu_2306_p3;
reg   [7:0] OutPixPrv_1_val_V_1_fu_264;
wire   [7:0] OutPixPrv_1_val_V_fu_2331_p3;
reg   [7:0] OutPixPrv_2_val_V_1_fu_268;
wire   [7:0] OutPixPrv_2_val_V_fu_2356_p3;
reg   [7:0] OutPixPrv_3_val_V_1_fu_272;
wire   [7:0] OutPixPrv_3_val_V_fu_2369_p3;
reg   [7:0] PixArray_val_V_6_0_2_fu_276;
wire   [7:0] PixArray_val_V_6_0_fu_1565_p3;
reg   [7:0] PixArray_val_V_6_1_2_fu_280;
wire   [7:0] PixArray_val_V_6_1_fu_1558_p3;
reg   [7:0] PixArray_val_V_0_2_fu_284;
wire   [7:0] PixArray_val_V_6_2_9_fu_1572_p3;
reg   [7:0] PixArray_val_V_6_0_7_fu_288;
wire   [7:0] PixArray_val_V_6_0_9_fu_1586_p3;
reg   [7:0] PixArray_val_V_6_1_7_fu_292;
wire   [7:0] PixArray_val_V_6_1_9_fu_1579_p3;
reg   [7:0] PixArray_val_V_1_2_fu_296;
wire   [7:0] PixArray_val_V_6_2_10_fu_1593_p3;
reg   [7:0] PixArray_val_V_0_0_fu_300;
wire   [7:0] PixArray_val_V_6_0_10_fu_1607_p3;
reg   [7:0] PixArray_val_V_0_1_fu_304;
wire   [7:0] PixArray_val_V_6_1_10_fu_1600_p3;
reg   [7:0] PixArray_val_V_2_2_fu_308;
wire   [7:0] PixArray_val_V_6_2_11_fu_1614_p3;
reg   [7:0] PixArray_val_V_1_0_fu_312;
wire   [7:0] PixArray_val_V_6_0_11_fu_1628_p3;
reg   [7:0] PixArray_val_V_1_1_fu_316;
wire   [7:0] PixArray_val_V_6_1_11_fu_1621_p3;
reg   [7:0] PixArray_val_V_3_2_fu_320;
wire   [7:0] PixArray_val_V_6_2_12_fu_1635_p3;
reg   [7:0] PixArray_val_V_2_0_fu_324;
wire   [7:0] PixArray_val_V_6_0_12_fu_1649_p3;
reg   [7:0] PixArray_val_V_2_1_fu_328;
wire   [7:0] PixArray_val_V_6_1_12_fu_1642_p3;
reg   [7:0] PixArray_val_V_4_2_fu_332;
wire   [7:0] PixArray_val_V_6_2_13_fu_1656_p3;
reg   [7:0] PixArray_val_V_3_0_fu_336;
wire   [7:0] PixArray_val_V_6_0_13_fu_1670_p3;
reg   [7:0] PixArray_val_V_3_1_fu_340;
wire   [7:0] PixArray_val_V_6_1_13_fu_1663_p3;
reg   [7:0] PixArray_val_V_5_2_fu_344;
wire   [7:0] PixArray_val_V_6_2_14_fu_1677_p3;
reg   [7:0] PixArray_val_V_4_0_fu_348;
reg   [7:0] PixArray_val_V_4_1_fu_352;
reg   [7:0] PixArray_val_V_6_2_fu_356;
reg   [7:0] PixArray_val_V_5_0_fu_360;
reg   [7:0] PixArray_val_V_5_1_fu_364;
reg   [7:0] PixArray_val_V_7_2_fu_368;
reg   [7:0] PixArray_val_V_6_0_8_fu_372;
wire   [7:0] PixArray_val_V_8_0_fu_1819_p1;
reg   [7:0] PixArray_val_V_6_1_8_fu_376;
reg   [7:0] PixArray_val_V_6_2_1_fu_380;
reg   [7:0] PixArray_val_V_7_0_fu_384;
reg   [7:0] PixArray_val_V_7_1_fu_388;
reg   [7:0] PixArray_val_V_7_2_1_fu_392;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln224_fu_910_p2;
wire   [11:0] trunc_ln584_fu_916_p1;
wire   [11:0] trunc_ln584_1_fu_920_p1;
wire   [0:0] icmp_ln611_fu_950_p2;
wire   [6:0] add_ln608_fu_944_p2;
wire   [7:0] tmp_9_fu_989_p3;
wire   [8:0] tmp_8_cast_fu_982_p3;
wire   [8:0] tmp_9_cast_fu_996_p1;
wire   [8:0] empty_75_fu_1000_p2;
wire   [8:0] select_ln608_cast_fu_1006_p1;
wire   [8:0] empty_76_fu_1009_p2;
wire   [11:0] add_ln589_fu_1035_p2;
wire   [10:0] tmp_7_fu_1040_p4;
wire   [11:0] LoopSize_fu_1050_p3;
wire   [11:0] trunc_ln636_fu_1084_p1;
wire   [11:0] xbySamples_fu_1088_p2;
wire   [10:0] xbySamples_1_fu_1094_p4;
wire   [1:0] p_Result_9_1_fu_1175_p3;
wire   [7:0] nrWrsClck_cast_fu_1204_p1;
wire   [7:0] nrWrsAccu_fu_1212_p2;
wire   [6:0] tmp_23_fu_1228_p4;
wire   [10:0] tmp_fu_1250_p4;
wire   [16:0] zext_ln659_fu_1266_p1;
wire   [16:0] add_ln659_fu_1270_p2;
wire   [15:0] xReadPos_1_fu_1286_p2;
wire   [0:0] trunc_ln793_fu_1301_p1;
wire   [0:0] icmp_ln794_fu_1310_p2;
wire   [0:0] icmp_ln794_1_fu_1315_p2;
wire   [1:0] empty_77_fu_1326_p1;
wire   [1:0] empty_78_fu_1336_p2;
wire   [5:0] tmp_s_fu_1342_p5;
wire   [6:0] tmp_22_fu_1357_p4;
wire   [1:0] empty_79_fu_1373_p2;
wire   [5:0] tmp_1_fu_1379_p5;
wire   [1:0] empty_80_fu_1401_p1;
wire   [1:0] empty_81_fu_1411_p2;
wire   [5:0] tmp_2_fu_1417_p5;
wire   [1:0] empty_82_fu_1432_p2;
wire   [5:0] tmp_3_fu_1438_p5;
wire   [0:0] nrWrsPrev_2_fu_1305_p2;
wire   [1:0] empty_83_fu_1465_p2;
wire   [5:0] tmp_4_fu_1471_p5;
wire   [0:0] trunc_ln800_fu_1907_p1;
wire   [2:0] shl_ln_fu_1911_p3;
wire   [2:0] zext_ln800_fu_1903_p1;
wire   [0:0] trunc_ln800_1_fu_1929_p1;
wire   [2:0] shl_ln800_1_fu_1933_p3;
wire   [2:0] zext_ln800_1_fu_1925_p1;
wire   [0:0] trunc_ln815_fu_1951_p1;
wire   [0:0] trunc_ln815_1_fu_1967_p1;
wire   [2:0] shl_ln815_1_fu_1971_p3;
wire   [2:0] zext_ln815_1_fu_1963_p1;
wire   [2:0] shl_ln1_fu_1955_p3;
wire   [2:0] zext_ln815_fu_1947_p1;
wire   [0:0] trunc_ln815_2_fu_1995_p1;
wire   [2:0] shl_ln815_2_fu_1999_p3;
wire   [2:0] zext_ln815_2_fu_1991_p1;
wire   [7:0] select_ln800_fu_2175_p3;
wire   [7:0] select_ln800_1_fu_2187_p3;
wire   [7:0] select_ln800_2_fu_2199_p3;
wire   [7:0] select_ln800_3_fu_2211_p3;
wire   [7:0] select_ln800_4_fu_2223_p3;
wire   [7:0] select_ln800_5_fu_2235_p3;
wire   [7:0] cond_lvalue243_1_2_fu_2240_p3;
wire   [7:0] OutMultiPix_val_V_load_4_fu_2228_p3;
wire   [7:0] OutMultiPix_val_V_load_3_fu_2216_p3;
wire   [7:0] OutMultiPix_val_V_load_2_fu_2204_p3;
wire   [7:0] OutMultiPix_val_V_load_1_fu_2192_p3;
wire   [7:0] OutMultiPix_val_V_load_fu_2180_p3;
wire   [7:0] select_ln815_fu_2279_p3;
wire   [7:0] select_ln815_1_fu_2284_p3;
wire   [0:0] sel_tmp1_fu_2296_p2;
wire   [0:0] sel_tmp2_fu_2301_p2;
wire   [7:0] sel_tmp_fu_2289_p3;
wire   [7:0] select_ln815_2_fu_2314_p3;
wire   [7:0] select_ln815_3_fu_2319_p3;
wire   [7:0] sel_tmp4_fu_2324_p3;
wire   [7:0] select_ln815_4_fu_2339_p3;
wire   [7:0] select_ln815_5_fu_2344_p3;
wire   [7:0] sel_tmp8_fu_2349_p3;
wire   [7:0] select_ln815_6_fu_2364_p3;
wire   [7:0] select_ln815_7_fu_2376_p3;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_1167;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 grp_hscale_polyphase_fu_852_ap_start_reg = 1'b0;
end

bd_c2dc_hsc_0_hscale_core_polyphase_BitSetCnt #(
    .DataWidth( 3 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
BitSetCnt_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(BitSetCnt_address0),
    .ce0(BitSetCnt_ce0),
    .q0(BitSetCnt_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_OneBitIdx #(
    .DataWidth( 2 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
OneBitIdx_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(OneBitIdx_address0),
    .ce0(OneBitIdx_ce0),
    .q0(OneBitIdx_q0),
    .address1(OneBitIdx_address1),
    .ce1(OneBitIdx_ce1),
    .q1(OneBitIdx_q1),
    .address2(OneBitIdx_address2),
    .ce2(OneBitIdx_ce2),
    .q2(OneBitIdx_q2),
    .address3(OneBitIdx_address3),
    .ce3(OneBitIdx_ce3),
    .q3(OneBitIdx_q3),
    .address4(OneBitIdx_address4),
    .ce4(OneBitIdx_ce4),
    .q4(OneBitIdx_q4)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_0_0_address0),
    .ce0(FiltCoeff_0_0_ce0),
    .we0(FiltCoeff_0_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_0_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_0_1_address0),
    .ce0(FiltCoeff_0_1_ce0),
    .we0(FiltCoeff_0_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_0_1_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_1_0_address0),
    .ce0(FiltCoeff_1_0_ce0),
    .we0(FiltCoeff_1_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_1_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_1_1_address0),
    .ce0(FiltCoeff_1_1_ce0),
    .we0(FiltCoeff_1_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_1_1_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_2_0_address0),
    .ce0(FiltCoeff_2_0_ce0),
    .we0(FiltCoeff_2_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_2_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_2_1_address0),
    .ce0(FiltCoeff_2_1_ce0),
    .we0(FiltCoeff_2_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_2_1_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_3_0_address0),
    .ce0(FiltCoeff_3_0_ce0),
    .we0(FiltCoeff_3_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_3_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_3_1_address0),
    .ce0(FiltCoeff_3_1_ce0),
    .we0(FiltCoeff_3_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_3_1_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_4_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_4_0_address0),
    .ce0(FiltCoeff_4_0_ce0),
    .we0(FiltCoeff_4_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_4_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_4_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_4_1_address0),
    .ce0(FiltCoeff_4_1_ce0),
    .we0(FiltCoeff_4_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_4_1_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_5_0_address0),
    .ce0(FiltCoeff_5_0_ce0),
    .we0(FiltCoeff_5_0_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_5_0_q0)
);

bd_c2dc_hsc_0_hscale_core_polyphase_FiltCoeff_0_0 #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
FiltCoeff_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FiltCoeff_5_1_address0),
    .ce0(FiltCoeff_5_1_ce0),
    .we0(FiltCoeff_5_1_we0),
    .d0(hfltCoeff_q0),
    .q0(FiltCoeff_5_1_q0)
);

bd_c2dc_hsc_0_hscale_polyphase grp_hscale_polyphase_fu_852(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hscale_polyphase_fu_852_ap_start),
    .ap_done(grp_hscale_polyphase_fu_852_ap_done),
    .ap_idle(grp_hscale_polyphase_fu_852_ap_idle),
    .ap_ready(grp_hscale_polyphase_fu_852_ap_ready),
    .ap_ce(grp_hscale_polyphase_fu_852_ap_ce),
    .FiltCoeff_address0(grp_hscale_polyphase_fu_852_FiltCoeff_address0),
    .FiltCoeff_ce0(grp_hscale_polyphase_fu_852_FiltCoeff_ce0),
    .FiltCoeff_q0(FiltCoeff_0_0_q0),
    .FiltCoeff1_address0(grp_hscale_polyphase_fu_852_FiltCoeff1_address0),
    .FiltCoeff1_ce0(grp_hscale_polyphase_fu_852_FiltCoeff1_ce0),
    .FiltCoeff1_q0(FiltCoeff_0_1_q0),
    .FiltCoeff12_address0(grp_hscale_polyphase_fu_852_FiltCoeff12_address0),
    .FiltCoeff12_ce0(grp_hscale_polyphase_fu_852_FiltCoeff12_ce0),
    .FiltCoeff12_q0(FiltCoeff_1_0_q0),
    .FiltCoeff13_address0(grp_hscale_polyphase_fu_852_FiltCoeff13_address0),
    .FiltCoeff13_ce0(grp_hscale_polyphase_fu_852_FiltCoeff13_ce0),
    .FiltCoeff13_q0(FiltCoeff_1_1_q0),
    .FiltCoeff2_address0(grp_hscale_polyphase_fu_852_FiltCoeff2_address0),
    .FiltCoeff2_ce0(grp_hscale_polyphase_fu_852_FiltCoeff2_ce0),
    .FiltCoeff2_q0(FiltCoeff_2_0_q0),
    .FiltCoeff24_address0(grp_hscale_polyphase_fu_852_FiltCoeff24_address0),
    .FiltCoeff24_ce0(grp_hscale_polyphase_fu_852_FiltCoeff24_ce0),
    .FiltCoeff24_q0(FiltCoeff_2_1_q0),
    .FiltCoeff3_address0(grp_hscale_polyphase_fu_852_FiltCoeff3_address0),
    .FiltCoeff3_ce0(grp_hscale_polyphase_fu_852_FiltCoeff3_ce0),
    .FiltCoeff3_q0(FiltCoeff_3_0_q0),
    .FiltCoeff35_address0(grp_hscale_polyphase_fu_852_FiltCoeff35_address0),
    .FiltCoeff35_ce0(grp_hscale_polyphase_fu_852_FiltCoeff35_ce0),
    .FiltCoeff35_q0(FiltCoeff_3_1_q0),
    .FiltCoeff4_address0(grp_hscale_polyphase_fu_852_FiltCoeff4_address0),
    .FiltCoeff4_ce0(grp_hscale_polyphase_fu_852_FiltCoeff4_ce0),
    .FiltCoeff4_q0(FiltCoeff_4_0_q0),
    .FiltCoeff46_address0(grp_hscale_polyphase_fu_852_FiltCoeff46_address0),
    .FiltCoeff46_ce0(grp_hscale_polyphase_fu_852_FiltCoeff46_ce0),
    .FiltCoeff46_q0(FiltCoeff_4_1_q0),
    .FiltCoeff5_address0(grp_hscale_polyphase_fu_852_FiltCoeff5_address0),
    .FiltCoeff5_ce0(grp_hscale_polyphase_fu_852_FiltCoeff5_ce0),
    .FiltCoeff5_q0(FiltCoeff_5_0_q0),
    .FiltCoeff57_address0(grp_hscale_polyphase_fu_852_FiltCoeff57_address0),
    .FiltCoeff57_ce0(grp_hscale_polyphase_fu_852_FiltCoeff57_ce0),
    .FiltCoeff57_q0(FiltCoeff_5_1_q0),
    .p_read(PixArray_val_V_6_0_2_fu_276),
    .p_read1(PixArray_val_V_6_1_2_fu_280),
    .p_read2(PixArray_val_V_0_2_fu_284),
    .p_read3(PixArray_val_V_6_0_7_fu_288),
    .p_read4(PixArray_val_V_6_1_7_fu_292),
    .p_read5(PixArray_val_V_1_2_fu_296),
    .p_read6(PixArray_val_V_0_0_fu_300),
    .p_read7(PixArray_val_V_0_1_fu_304),
    .p_read8(PixArray_val_V_2_2_fu_308),
    .p_read9(PixArray_val_V_1_0_fu_312),
    .p_read10(PixArray_val_V_1_1_fu_316),
    .p_read11(PixArray_val_V_3_2_fu_320),
    .p_read12(PixArray_val_V_2_0_fu_324),
    .p_read13(PixArray_val_V_2_1_fu_328),
    .p_read14(PixArray_val_V_4_2_fu_332),
    .p_read15(PixArray_val_V_3_0_fu_336),
    .p_read16(PixArray_val_V_3_1_fu_340),
    .p_read17(PixArray_val_V_5_2_fu_344),
    .p_read18(PixArray_val_V_4_0_fu_348),
    .p_read19(PixArray_val_V_4_1_fu_352),
    .p_read20(PixArray_val_V_6_2_fu_356),
    .p_read21(PixArray_val_V_5_0_fu_360),
    .p_read22(PixArray_val_V_5_1_fu_364),
    .p_read23(PixArray_val_V_7_2_fu_368),
    .p_read24(PixArray_val_V_6_0_8_fu_372),
    .p_read25(PixArray_val_V_6_1_8_fu_376),
    .p_read26(PixArray_val_V_6_2_1_fu_380),
    .p_read27(PixArray_val_V_7_0_fu_384),
    .p_read28(PixArray_val_V_7_1_fu_388),
    .p_read29(PixArray_val_V_7_2_1_fu_392),
    .PhasesH_0_read(PhaseH_0_reg_2759_pp1_iter5_reg),
    .PhasesH_1_read(PhaseH_1_reg_2778_pp1_iter5_reg),
    .p_read230(ArrayLoc_0_reg_2764_pp1_iter5_reg),
    .p_read331(ArrayLoc_1_reg_2783_pp1_iter5_reg),
    .ap_return_0(grp_hscale_polyphase_fu_852_ap_return_0),
    .ap_return_1(grp_hscale_polyphase_fu_852_ap_return_1),
    .ap_return_2(grp_hscale_polyphase_fu_852_ap_return_2),
    .ap_return_3(grp_hscale_polyphase_fu_852_ap_return_3),
    .ap_return_4(grp_hscale_polyphase_fu_852_ap_return_4),
    .ap_return_5(grp_hscale_polyphase_fu_852_ap_return_5)
);

bd_c2dc_hsc_0_reg_ap_uint_18_s grp_reg_ap_uint_18_s_fu_1119(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(grp_reg_ap_uint_18_s_fu_1119_d),
    .ap_return(grp_reg_ap_uint_18_s_fu_1119_ap_return),
    .ap_ce(grp_reg_ap_uint_18_s_fu_1119_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln620_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter16 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter5_state12)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter4;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hscale_polyphase_fu_852_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_predicate_op403_call_state13_state12 == 1'b1))) begin
            grp_hscale_polyphase_fu_852_ap_start_reg <= 1'b1;
        end else if ((grp_hscale_polyphase_fu_852_ap_ready == 1'b1)) begin
            grp_hscale_polyphase_fu_852_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1167)) begin
        if ((icmp_ln659_reg_2854 == 1'd1)) begin
            PixArray_val_V_6_0_8_fu_372 <= PixArray_val_V_8_0_fu_1819_p1;
        end else if ((icmp_ln659_reg_2854 == 1'd0)) begin
            PixArray_val_V_6_0_8_fu_372 <= PixArray_val_V_7_0_fu_384;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1167)) begin
        if ((icmp_ln659_reg_2854 == 1'd1)) begin
            PixArray_val_V_6_1_8_fu_376 <= {{stream_upsampled_dout[15:8]}};
        end else if ((icmp_ln659_reg_2854 == 1'd0)) begin
            PixArray_val_V_6_1_8_fu_376 <= PixArray_val_V_7_1_fu_388;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1167)) begin
        if ((icmp_ln659_reg_2854 == 1'd1)) begin
            PixArray_val_V_6_2_1_fu_380 <= {{stream_upsampled_dout[23:16]}};
        end else if ((icmp_ln659_reg_2854 == 1'd0)) begin
            PixArray_val_V_6_2_1_fu_380 <= PixArray_val_V_7_2_1_fu_392;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd0) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)))) begin
        ReadEn_1_reg_794 <= zext_ln716_fu_1281_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd0) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        ReadEn_1_reg_794 <= ap_phi_mux_ReadEn_phi_fu_777_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ReadEn_1_reg_794 <= ap_phi_reg_pp1_iter4_ReadEn_1_reg_794;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        ReadEn_reg_773 <= ReadEn_1_reg_794;
    end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        ReadEn_reg_773 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln608_reg_2448 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_694 <= select_ln608_1_reg_2457;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_694 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln608_fu_938_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_683 <= add_ln608_1_fu_932_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_683 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln608_fu_938_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_705 <= add_ln611_fu_976_p2;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_705 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        nrWrsPrev_reg_739 <= ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6;
    end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        nrWrsPrev_reg_739 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd0) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)))) begin
        xReadPos_2_reg_838 <= xReadPos_3_fu_1292_p3;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd0) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        xReadPos_2_reg_838 <= ap_phi_mux_xReadPos_phi_fu_755_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        xReadPos_2_reg_838 <= ap_phi_reg_pp1_iter4_xReadPos_2_reg_838;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        xReadPos_reg_751 <= xReadPos_2_reg_838;
    end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        xReadPos_reg_751 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp141_reg_2822 == 1'd0) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)))) begin
        xWritePos_2_reg_822 <= ap_phi_mux_xWritePos_1_phi_fu_787_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd0) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        xWritePos_2_reg_822 <= ap_phi_mux_xWritePos_phi_fu_766_p4;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        xWritePos_2_reg_822 <= ap_phi_reg_pp1_iter4_xWritePos_2_reg_822;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        xWritePos_reg_762 <= xWritePos_2_reg_822;
    end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        xWritePos_reg_762 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln636_reg_2741 == 1'd0))) begin
        x_reg_727 <= x_4_reg_2754;
    end else if (((icmp_ln620_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        x_reg_727 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        y_reg_716 <= y_4_reg_2732;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_reg_716 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter1_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter1_reg == 1'd0))) begin
        ArrayLoc_0_reg_2764 <= {{grp_reg_ap_uint_18_s_fu_1119_ap_return[7:6]}};
        ArrayLoc_1_reg_2783 <= {{grp_reg_ap_uint_18_s_fu_1119_ap_return[16:15]}};
        PhaseH_0_reg_2759 <= PhaseH_0_fu_1125_p1;
        PhaseH_1_reg_2778 <= {{grp_reg_ap_uint_18_s_fu_1119_ap_return[14:9]}};
        p_Result_7_1_reg_2788 <= grp_reg_ap_uint_18_s_fu_1119_ap_return[18'd17];
        p_Result_7_reg_2769 <= grp_reg_ap_uint_18_s_fu_1119_ap_return[18'd8];
        tmp_19_reg_2797 <= grp_reg_ap_uint_18_s_fu_1119_ap_return[32'd16];
        tmp_20_reg_2802 <= grp_reg_ap_uint_18_s_fu_1119_ap_return[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ArrayLoc_0_reg_2764_pp1_iter3_reg <= ArrayLoc_0_reg_2764;
        ArrayLoc_0_reg_2764_pp1_iter4_reg <= ArrayLoc_0_reg_2764_pp1_iter3_reg;
        ArrayLoc_0_reg_2764_pp1_iter5_reg <= ArrayLoc_0_reg_2764_pp1_iter4_reg;
        ArrayLoc_1_reg_2783_pp1_iter3_reg <= ArrayLoc_1_reg_2783;
        ArrayLoc_1_reg_2783_pp1_iter4_reg <= ArrayLoc_1_reg_2783_pp1_iter3_reg;
        ArrayLoc_1_reg_2783_pp1_iter5_reg <= ArrayLoc_1_reg_2783_pp1_iter4_reg;
        PhaseH_0_reg_2759_pp1_iter3_reg <= PhaseH_0_reg_2759;
        PhaseH_0_reg_2759_pp1_iter4_reg <= PhaseH_0_reg_2759_pp1_iter3_reg;
        PhaseH_0_reg_2759_pp1_iter5_reg <= PhaseH_0_reg_2759_pp1_iter4_reg;
        PhaseH_1_reg_2778_pp1_iter3_reg <= PhaseH_1_reg_2778;
        PhaseH_1_reg_2778_pp1_iter4_reg <= PhaseH_1_reg_2778_pp1_iter3_reg;
        PhaseH_1_reg_2778_pp1_iter5_reg <= PhaseH_1_reg_2778_pp1_iter4_reg;
        and_ln794_reg_2858_pp1_iter10_reg <= and_ln794_reg_2858_pp1_iter9_reg;
        and_ln794_reg_2858_pp1_iter11_reg <= and_ln794_reg_2858_pp1_iter10_reg;
        and_ln794_reg_2858_pp1_iter12_reg <= and_ln794_reg_2858_pp1_iter11_reg;
        and_ln794_reg_2858_pp1_iter13_reg <= and_ln794_reg_2858_pp1_iter12_reg;
        and_ln794_reg_2858_pp1_iter14_reg <= and_ln794_reg_2858_pp1_iter13_reg;
        and_ln794_reg_2858_pp1_iter15_reg <= and_ln794_reg_2858_pp1_iter14_reg;
        and_ln794_reg_2858_pp1_iter5_reg <= and_ln794_reg_2858;
        and_ln794_reg_2858_pp1_iter6_reg <= and_ln794_reg_2858_pp1_iter5_reg;
        and_ln794_reg_2858_pp1_iter7_reg <= and_ln794_reg_2858_pp1_iter6_reg;
        and_ln794_reg_2858_pp1_iter8_reg <= and_ln794_reg_2858_pp1_iter7_reg;
        and_ln794_reg_2858_pp1_iter9_reg <= and_ln794_reg_2858_pp1_iter8_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter10_reg <= brmerge_0_demorgan_reg_2901_pp1_iter9_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter11_reg <= brmerge_0_demorgan_reg_2901_pp1_iter10_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter12_reg <= brmerge_0_demorgan_reg_2901_pp1_iter11_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter13_reg <= brmerge_0_demorgan_reg_2901_pp1_iter12_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter14_reg <= brmerge_0_demorgan_reg_2901_pp1_iter13_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter15_reg <= brmerge_0_demorgan_reg_2901_pp1_iter14_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter5_reg <= brmerge_0_demorgan_reg_2901;
        brmerge_0_demorgan_reg_2901_pp1_iter6_reg <= brmerge_0_demorgan_reg_2901_pp1_iter5_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter7_reg <= brmerge_0_demorgan_reg_2901_pp1_iter6_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter8_reg <= brmerge_0_demorgan_reg_2901_pp1_iter7_reg;
        brmerge_0_demorgan_reg_2901_pp1_iter9_reg <= brmerge_0_demorgan_reg_2901_pp1_iter8_reg;
        cmp138_0_reg_2862_pp1_iter10_reg <= cmp138_0_reg_2862_pp1_iter9_reg;
        cmp138_0_reg_2862_pp1_iter11_reg <= cmp138_0_reg_2862_pp1_iter10_reg;
        cmp138_0_reg_2862_pp1_iter12_reg <= cmp138_0_reg_2862_pp1_iter11_reg;
        cmp138_0_reg_2862_pp1_iter13_reg <= cmp138_0_reg_2862_pp1_iter12_reg;
        cmp138_0_reg_2862_pp1_iter14_reg <= cmp138_0_reg_2862_pp1_iter13_reg;
        cmp138_0_reg_2862_pp1_iter15_reg <= cmp138_0_reg_2862_pp1_iter14_reg;
        cmp138_0_reg_2862_pp1_iter5_reg <= cmp138_0_reg_2862;
        cmp138_0_reg_2862_pp1_iter6_reg <= cmp138_0_reg_2862_pp1_iter5_reg;
        cmp138_0_reg_2862_pp1_iter7_reg <= cmp138_0_reg_2862_pp1_iter6_reg;
        cmp138_0_reg_2862_pp1_iter8_reg <= cmp138_0_reg_2862_pp1_iter7_reg;
        cmp138_0_reg_2862_pp1_iter9_reg <= cmp138_0_reg_2862_pp1_iter8_reg;
        cmp189_0_reg_2886_pp1_iter10_reg <= cmp189_0_reg_2886_pp1_iter9_reg;
        cmp189_0_reg_2886_pp1_iter11_reg <= cmp189_0_reg_2886_pp1_iter10_reg;
        cmp189_0_reg_2886_pp1_iter12_reg <= cmp189_0_reg_2886_pp1_iter11_reg;
        cmp189_0_reg_2886_pp1_iter13_reg <= cmp189_0_reg_2886_pp1_iter12_reg;
        cmp189_0_reg_2886_pp1_iter14_reg <= cmp189_0_reg_2886_pp1_iter13_reg;
        cmp189_0_reg_2886_pp1_iter15_reg <= cmp189_0_reg_2886_pp1_iter14_reg;
        cmp189_0_reg_2886_pp1_iter5_reg <= cmp189_0_reg_2886;
        cmp189_0_reg_2886_pp1_iter6_reg <= cmp189_0_reg_2886_pp1_iter5_reg;
        cmp189_0_reg_2886_pp1_iter7_reg <= cmp189_0_reg_2886_pp1_iter6_reg;
        cmp189_0_reg_2886_pp1_iter8_reg <= cmp189_0_reg_2886_pp1_iter7_reg;
        cmp189_0_reg_2886_pp1_iter9_reg <= cmp189_0_reg_2886_pp1_iter8_reg;
        icmp138_reg_2874_pp1_iter10_reg <= icmp138_reg_2874_pp1_iter9_reg;
        icmp138_reg_2874_pp1_iter11_reg <= icmp138_reg_2874_pp1_iter10_reg;
        icmp138_reg_2874_pp1_iter12_reg <= icmp138_reg_2874_pp1_iter11_reg;
        icmp138_reg_2874_pp1_iter13_reg <= icmp138_reg_2874_pp1_iter12_reg;
        icmp138_reg_2874_pp1_iter14_reg <= icmp138_reg_2874_pp1_iter13_reg;
        icmp138_reg_2874_pp1_iter15_reg <= icmp138_reg_2874_pp1_iter14_reg;
        icmp138_reg_2874_pp1_iter5_reg <= icmp138_reg_2874;
        icmp138_reg_2874_pp1_iter6_reg <= icmp138_reg_2874_pp1_iter5_reg;
        icmp138_reg_2874_pp1_iter7_reg <= icmp138_reg_2874_pp1_iter6_reg;
        icmp138_reg_2874_pp1_iter8_reg <= icmp138_reg_2874_pp1_iter7_reg;
        icmp138_reg_2874_pp1_iter9_reg <= icmp138_reg_2874_pp1_iter8_reg;
        icmp141_reg_2822_pp1_iter10_reg <= icmp141_reg_2822_pp1_iter9_reg;
        icmp141_reg_2822_pp1_iter11_reg <= icmp141_reg_2822_pp1_iter10_reg;
        icmp141_reg_2822_pp1_iter12_reg <= icmp141_reg_2822_pp1_iter11_reg;
        icmp141_reg_2822_pp1_iter13_reg <= icmp141_reg_2822_pp1_iter12_reg;
        icmp141_reg_2822_pp1_iter14_reg <= icmp141_reg_2822_pp1_iter13_reg;
        icmp141_reg_2822_pp1_iter15_reg <= icmp141_reg_2822_pp1_iter14_reg;
        icmp141_reg_2822_pp1_iter4_reg <= icmp141_reg_2822;
        icmp141_reg_2822_pp1_iter5_reg <= icmp141_reg_2822_pp1_iter4_reg;
        icmp141_reg_2822_pp1_iter6_reg <= icmp141_reg_2822_pp1_iter5_reg;
        icmp141_reg_2822_pp1_iter7_reg <= icmp141_reg_2822_pp1_iter6_reg;
        icmp141_reg_2822_pp1_iter8_reg <= icmp141_reg_2822_pp1_iter7_reg;
        icmp141_reg_2822_pp1_iter9_reg <= icmp141_reg_2822_pp1_iter8_reg;
        icmp_ln636_reg_2741_pp1_iter10_reg <= icmp_ln636_reg_2741_pp1_iter9_reg;
        icmp_ln636_reg_2741_pp1_iter11_reg <= icmp_ln636_reg_2741_pp1_iter10_reg;
        icmp_ln636_reg_2741_pp1_iter12_reg <= icmp_ln636_reg_2741_pp1_iter11_reg;
        icmp_ln636_reg_2741_pp1_iter13_reg <= icmp_ln636_reg_2741_pp1_iter12_reg;
        icmp_ln636_reg_2741_pp1_iter14_reg <= icmp_ln636_reg_2741_pp1_iter13_reg;
        icmp_ln636_reg_2741_pp1_iter15_reg <= icmp_ln636_reg_2741_pp1_iter14_reg;
        icmp_ln636_reg_2741_pp1_iter2_reg <= icmp_ln636_reg_2741_pp1_iter1_reg;
        icmp_ln636_reg_2741_pp1_iter3_reg <= icmp_ln636_reg_2741_pp1_iter2_reg;
        icmp_ln636_reg_2741_pp1_iter4_reg <= icmp_ln636_reg_2741_pp1_iter3_reg;
        icmp_ln636_reg_2741_pp1_iter5_reg <= icmp_ln636_reg_2741_pp1_iter4_reg;
        icmp_ln636_reg_2741_pp1_iter6_reg <= icmp_ln636_reg_2741_pp1_iter5_reg;
        icmp_ln636_reg_2741_pp1_iter7_reg <= icmp_ln636_reg_2741_pp1_iter6_reg;
        icmp_ln636_reg_2741_pp1_iter8_reg <= icmp_ln636_reg_2741_pp1_iter7_reg;
        icmp_ln636_reg_2741_pp1_iter9_reg <= icmp_ln636_reg_2741_pp1_iter8_reg;
        icmp_ln696_reg_2745_pp1_iter10_reg <= icmp_ln696_reg_2745_pp1_iter9_reg;
        icmp_ln696_reg_2745_pp1_iter11_reg <= icmp_ln696_reg_2745_pp1_iter10_reg;
        icmp_ln696_reg_2745_pp1_iter12_reg <= icmp_ln696_reg_2745_pp1_iter11_reg;
        icmp_ln696_reg_2745_pp1_iter13_reg <= icmp_ln696_reg_2745_pp1_iter12_reg;
        icmp_ln696_reg_2745_pp1_iter14_reg <= icmp_ln696_reg_2745_pp1_iter13_reg;
        icmp_ln696_reg_2745_pp1_iter15_reg <= icmp_ln696_reg_2745_pp1_iter14_reg;
        icmp_ln696_reg_2745_pp1_iter2_reg <= icmp_ln696_reg_2745_pp1_iter1_reg;
        icmp_ln696_reg_2745_pp1_iter3_reg <= icmp_ln696_reg_2745_pp1_iter2_reg;
        icmp_ln696_reg_2745_pp1_iter4_reg <= icmp_ln696_reg_2745_pp1_iter3_reg;
        icmp_ln696_reg_2745_pp1_iter5_reg <= icmp_ln696_reg_2745_pp1_iter4_reg;
        icmp_ln696_reg_2745_pp1_iter6_reg <= icmp_ln696_reg_2745_pp1_iter5_reg;
        icmp_ln696_reg_2745_pp1_iter7_reg <= icmp_ln696_reg_2745_pp1_iter6_reg;
        icmp_ln696_reg_2745_pp1_iter8_reg <= icmp_ln696_reg_2745_pp1_iter7_reg;
        icmp_ln696_reg_2745_pp1_iter9_reg <= icmp_ln696_reg_2745_pp1_iter8_reg;
        icmp_ln800_1_reg_2921_pp1_iter10_reg <= icmp_ln800_1_reg_2921_pp1_iter9_reg;
        icmp_ln800_1_reg_2921_pp1_iter11_reg <= icmp_ln800_1_reg_2921_pp1_iter10_reg;
        icmp_ln800_1_reg_2921_pp1_iter12_reg <= icmp_ln800_1_reg_2921_pp1_iter11_reg;
        icmp_ln800_1_reg_2921_pp1_iter13_reg <= icmp_ln800_1_reg_2921_pp1_iter12_reg;
        icmp_ln800_1_reg_2921_pp1_iter14_reg <= icmp_ln800_1_reg_2921_pp1_iter13_reg;
        icmp_ln800_1_reg_2921_pp1_iter15_reg <= icmp_ln800_1_reg_2921_pp1_iter14_reg;
        icmp_ln800_1_reg_2921_pp1_iter6_reg <= icmp_ln800_1_reg_2921;
        icmp_ln800_1_reg_2921_pp1_iter7_reg <= icmp_ln800_1_reg_2921_pp1_iter6_reg;
        icmp_ln800_1_reg_2921_pp1_iter8_reg <= icmp_ln800_1_reg_2921_pp1_iter7_reg;
        icmp_ln800_1_reg_2921_pp1_iter9_reg <= icmp_ln800_1_reg_2921_pp1_iter8_reg;
        icmp_ln800_reg_2914_pp1_iter10_reg <= icmp_ln800_reg_2914_pp1_iter9_reg;
        icmp_ln800_reg_2914_pp1_iter11_reg <= icmp_ln800_reg_2914_pp1_iter10_reg;
        icmp_ln800_reg_2914_pp1_iter12_reg <= icmp_ln800_reg_2914_pp1_iter11_reg;
        icmp_ln800_reg_2914_pp1_iter13_reg <= icmp_ln800_reg_2914_pp1_iter12_reg;
        icmp_ln800_reg_2914_pp1_iter14_reg <= icmp_ln800_reg_2914_pp1_iter13_reg;
        icmp_ln800_reg_2914_pp1_iter15_reg <= icmp_ln800_reg_2914_pp1_iter14_reg;
        icmp_ln800_reg_2914_pp1_iter6_reg <= icmp_ln800_reg_2914;
        icmp_ln800_reg_2914_pp1_iter7_reg <= icmp_ln800_reg_2914_pp1_iter6_reg;
        icmp_ln800_reg_2914_pp1_iter8_reg <= icmp_ln800_reg_2914_pp1_iter7_reg;
        icmp_ln800_reg_2914_pp1_iter9_reg <= icmp_ln800_reg_2914_pp1_iter8_reg;
        icmp_ln815_1_reg_2935_pp1_iter10_reg <= icmp_ln815_1_reg_2935_pp1_iter9_reg;
        icmp_ln815_1_reg_2935_pp1_iter11_reg <= icmp_ln815_1_reg_2935_pp1_iter10_reg;
        icmp_ln815_1_reg_2935_pp1_iter12_reg <= icmp_ln815_1_reg_2935_pp1_iter11_reg;
        icmp_ln815_1_reg_2935_pp1_iter13_reg <= icmp_ln815_1_reg_2935_pp1_iter12_reg;
        icmp_ln815_1_reg_2935_pp1_iter14_reg <= icmp_ln815_1_reg_2935_pp1_iter13_reg;
        icmp_ln815_1_reg_2935_pp1_iter15_reg <= icmp_ln815_1_reg_2935_pp1_iter14_reg;
        icmp_ln815_1_reg_2935_pp1_iter6_reg <= icmp_ln815_1_reg_2935;
        icmp_ln815_1_reg_2935_pp1_iter7_reg <= icmp_ln815_1_reg_2935_pp1_iter6_reg;
        icmp_ln815_1_reg_2935_pp1_iter8_reg <= icmp_ln815_1_reg_2935_pp1_iter7_reg;
        icmp_ln815_1_reg_2935_pp1_iter9_reg <= icmp_ln815_1_reg_2935_pp1_iter8_reg;
        icmp_ln815_2_reg_2942_pp1_iter10_reg <= icmp_ln815_2_reg_2942_pp1_iter9_reg;
        icmp_ln815_2_reg_2942_pp1_iter11_reg <= icmp_ln815_2_reg_2942_pp1_iter10_reg;
        icmp_ln815_2_reg_2942_pp1_iter12_reg <= icmp_ln815_2_reg_2942_pp1_iter11_reg;
        icmp_ln815_2_reg_2942_pp1_iter13_reg <= icmp_ln815_2_reg_2942_pp1_iter12_reg;
        icmp_ln815_2_reg_2942_pp1_iter14_reg <= icmp_ln815_2_reg_2942_pp1_iter13_reg;
        icmp_ln815_2_reg_2942_pp1_iter15_reg <= icmp_ln815_2_reg_2942_pp1_iter14_reg;
        icmp_ln815_2_reg_2942_pp1_iter6_reg <= icmp_ln815_2_reg_2942;
        icmp_ln815_2_reg_2942_pp1_iter7_reg <= icmp_ln815_2_reg_2942_pp1_iter6_reg;
        icmp_ln815_2_reg_2942_pp1_iter8_reg <= icmp_ln815_2_reg_2942_pp1_iter7_reg;
        icmp_ln815_2_reg_2942_pp1_iter9_reg <= icmp_ln815_2_reg_2942_pp1_iter8_reg;
        icmp_ln815_reg_2928_pp1_iter10_reg <= icmp_ln815_reg_2928_pp1_iter9_reg;
        icmp_ln815_reg_2928_pp1_iter11_reg <= icmp_ln815_reg_2928_pp1_iter10_reg;
        icmp_ln815_reg_2928_pp1_iter12_reg <= icmp_ln815_reg_2928_pp1_iter11_reg;
        icmp_ln815_reg_2928_pp1_iter13_reg <= icmp_ln815_reg_2928_pp1_iter12_reg;
        icmp_ln815_reg_2928_pp1_iter14_reg <= icmp_ln815_reg_2928_pp1_iter13_reg;
        icmp_ln815_reg_2928_pp1_iter15_reg <= icmp_ln815_reg_2928_pp1_iter14_reg;
        icmp_ln815_reg_2928_pp1_iter6_reg <= icmp_ln815_reg_2928;
        icmp_ln815_reg_2928_pp1_iter7_reg <= icmp_ln815_reg_2928_pp1_iter6_reg;
        icmp_ln815_reg_2928_pp1_iter8_reg <= icmp_ln815_reg_2928_pp1_iter7_reg;
        icmp_ln815_reg_2928_pp1_iter9_reg <= icmp_ln815_reg_2928_pp1_iter8_reg;
        p_Result_7_1_reg_2788_pp1_iter3_reg <= p_Result_7_1_reg_2788;
        p_Result_7_reg_2769_pp1_iter3_reg <= p_Result_7_reg_2769;
        tmp_19_reg_2797_pp1_iter3_reg <= tmp_19_reg_2797;
        tmp_20_reg_2802_pp1_iter3_reg <= tmp_20_reg_2802;
        x_reg_727_pp1_iter2_reg <= x_reg_727_pp1_iter1_reg;
        x_reg_727_pp1_iter3_reg <= x_reg_727_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter15_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter15_reg == 1'd0) & (ap_enable_reg_pp1_iter16 == 1'b1))) begin
        OutPixPrv_0_val_V_1_fu_260 <= OutPixPrv_0_val_V_fu_2306_p3;
        OutPixPrv_1_val_V_1_fu_264 <= OutPixPrv_1_val_V_fu_2331_p3;
        OutPixPrv_2_val_V_1_fu_268 <= OutPixPrv_2_val_V_fu_2356_p3;
        OutPixPrv_3_val_V_1_fu_272 <= OutPixPrv_3_val_V_fu_2369_p3;
        OutPixPrv_4_val_V_1_fu_256 <= OutPixPrv_4_val_V_fu_2381_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp141_reg_2822_pp1_iter15_reg == 1'd0) & (icmp_ln696_reg_2745_pp1_iter15_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter15_reg == 1'd0) & (ap_enable_reg_pp1_iter16 == 1'b1))) begin
        OutPixPrv_val_V_5_01136_fu_252 <= select_ln815_8_fu_2413_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter14_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter14_reg == 1'd0))) begin
        OutPix_1_reg_2958 <= grp_hscale_polyphase_fu_852_ap_return_1;
        OutPix_2_reg_2967 <= grp_hscale_polyphase_fu_852_ap_return_2;
        OutPix_3_reg_2976 <= grp_hscale_polyphase_fu_852_ap_return_3;
        OutPix_4_reg_2985 <= grp_hscale_polyphase_fu_852_ap_return_4;
        OutPix_5_reg_2994 <= grp_hscale_polyphase_fu_852_ap_return_5;
        OutPix_reg_2949 <= grp_hscale_polyphase_fu_852_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln647_reg_2828 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        PixArray_val_V_0_0_fu_300 <= PixArray_val_V_6_0_10_fu_1607_p3;
        PixArray_val_V_0_1_fu_304 <= PixArray_val_V_6_1_10_fu_1600_p3;
        PixArray_val_V_0_2_fu_284 <= PixArray_val_V_6_2_9_fu_1572_p3;
        PixArray_val_V_1_0_fu_312 <= PixArray_val_V_6_0_11_fu_1628_p3;
        PixArray_val_V_1_1_fu_316 <= PixArray_val_V_6_1_11_fu_1621_p3;
        PixArray_val_V_1_2_fu_296 <= PixArray_val_V_6_2_10_fu_1593_p3;
        PixArray_val_V_2_0_fu_324 <= PixArray_val_V_6_0_12_fu_1649_p3;
        PixArray_val_V_2_1_fu_328 <= PixArray_val_V_6_1_12_fu_1642_p3;
        PixArray_val_V_2_2_fu_308 <= PixArray_val_V_6_2_11_fu_1614_p3;
        PixArray_val_V_3_0_fu_336 <= PixArray_val_V_6_0_13_fu_1670_p3;
        PixArray_val_V_3_1_fu_340 <= PixArray_val_V_6_1_13_fu_1663_p3;
        PixArray_val_V_3_2_fu_320 <= PixArray_val_V_6_2_12_fu_1635_p3;
        PixArray_val_V_4_0_fu_348 <= PixArray_val_V_6_0_8_fu_372;
        PixArray_val_V_4_1_fu_352 <= PixArray_val_V_6_1_8_fu_376;
        PixArray_val_V_4_2_fu_332 <= PixArray_val_V_6_2_13_fu_1656_p3;
        PixArray_val_V_5_0_fu_360 <= PixArray_val_V_7_0_fu_384;
        PixArray_val_V_5_1_fu_364 <= PixArray_val_V_7_1_fu_388;
        PixArray_val_V_5_2_fu_344 <= PixArray_val_V_6_2_14_fu_1677_p3;
        PixArray_val_V_6_0_2_fu_276 <= PixArray_val_V_6_0_fu_1565_p3;
        PixArray_val_V_6_0_7_fu_288 <= PixArray_val_V_6_0_9_fu_1586_p3;
        PixArray_val_V_6_1_2_fu_280 <= PixArray_val_V_6_1_fu_1558_p3;
        PixArray_val_V_6_1_7_fu_292 <= PixArray_val_V_6_1_9_fu_1579_p3;
        PixArray_val_V_6_2_fu_356 <= PixArray_val_V_6_2_1_fu_380;
        PixArray_val_V_7_2_fu_368 <= PixArray_val_V_7_2_1_fu_392;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln659_reg_2854 == 1'd1) & (icmp_ln647_reg_2828 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        PixArray_val_V_7_0_fu_384 <= {{stream_upsampled_dout[31:24]}};
        PixArray_val_V_7_1_fu_388 <= {{stream_upsampled_dout[39:32]}};
        PixArray_val_V_7_2_1_fu_392 <= {{stream_upsampled_dout[47:40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        and_ln794_reg_2858 <= and_ln794_fu_1320_p2;
        brmerge_0_demorgan_reg_2901 <= brmerge_0_demorgan_fu_1459_p2;
        cmp189_0_reg_2886 <= cmp189_0_fu_1405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0) & (1'd1 == and_ln794_fu_1320_p2))) begin
        cmp138_0_reg_2862 <= cmp138_0_fu_1330_p2;
        icmp138_reg_2874 <= icmp138_fu_1367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln608_fu_938_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_74_reg_2464 <= empty_74_fu_972_p1;
        select_ln608_reg_2452 <= select_ln608_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter2_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter2_reg == 1'd0))) begin
        icmp141_reg_2822 <= icmp141_fu_1238_p2;
        tmp_21_reg_2817 <= {{nrWrsAccu_fu_1212_p2[7:1]}};
        trunc_ln793_1_reg_2812 <= trunc_ln793_1_fu_1208_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln608_reg_2448 <= icmp_ln608_fu_938_p2;
        select_ln608_1_reg_2457_pp0_iter1_reg <= select_ln608_1_reg_2457;
        select_ln608_reg_2452_pp0_iter1_reg <= select_ln608_reg_2452;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln636_reg_2741 <= icmp_ln636_fu_1073_p2;
        icmp_ln636_reg_2741_pp1_iter1_reg <= icmp_ln636_reg_2741;
        icmp_ln696_reg_2745_pp1_iter1_reg <= icmp_ln696_reg_2745;
        x_reg_727_pp1_iter1_reg <= x_reg_727;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        icmp_ln647_reg_2828 <= icmp_ln647_fu_1244_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln647_fu_1244_p2 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        icmp_ln659_reg_2854 <= icmp_ln659_fu_1276_p2;
        icmp_reg_2832 <= icmp_fu_1260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln636_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln696_reg_2745 <= icmp_ln696_fu_1078_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter4_reg == 1'd1) & (1'd1 == and_ln794_reg_2858) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        icmp_ln800_1_reg_2921 <= icmp_ln800_1_fu_1941_p2;
        icmp_ln800_reg_2914 <= icmp_ln800_fu_1919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln696_reg_2745_pp1_iter4_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        icmp_ln815_1_reg_2935 <= icmp_ln815_1_fu_1985_p2;
        icmp_ln815_2_reg_2942 <= icmp_ln815_2_fu_2007_p2;
        icmp_ln815_reg_2928 <= icmp_ln815_fu_1979_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln608_fu_938_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln608_1_reg_2457 <= select_ln608_1_fu_964_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln636_fu_1073_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        x_4_reg_2754 <= x_4_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        y_4_reg_2732 <= y_4_fu_1062_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        BitSetCnt_ce0 = 1'b1;
    end else begin
        BitSetCnt_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_0_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op403_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_0_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff_address0;
    end else begin
        FiltCoeff_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_0_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op403_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_0_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff_ce0;
    end else begin
        FiltCoeff_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd0))) begin
        FiltCoeff_0_0_we0 = 1'b1;
    end else begin
        FiltCoeff_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_0_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op403_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_0_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff1_address0;
    end else begin
        FiltCoeff_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_0_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op403_call_state13 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b1)))) begin
        FiltCoeff_0_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff1_ce0;
    end else begin
        FiltCoeff_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd0))) begin
        FiltCoeff_0_1_we0 = 1'b1;
    end else begin
        FiltCoeff_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_1_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_1_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff12_address0;
    end else begin
        FiltCoeff_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_1_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_1_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff12_ce0;
    end else begin
        FiltCoeff_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd1))) begin
        FiltCoeff_1_0_we0 = 1'b1;
    end else begin
        FiltCoeff_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_1_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_1_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff13_address0;
    end else begin
        FiltCoeff_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_1_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op404_call_state14 == 1'b1) & (ap_enable_reg_pp1_iter7 == 1'b1)))) begin
        FiltCoeff_1_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff13_ce0;
    end else begin
        FiltCoeff_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd1))) begin
        FiltCoeff_1_1_we0 = 1'b1;
    end else begin
        FiltCoeff_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_2_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_2_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff2_address0;
    end else begin
        FiltCoeff_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_2_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_2_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff2_ce0;
    end else begin
        FiltCoeff_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd2))) begin
        FiltCoeff_2_0_we0 = 1'b1;
    end else begin
        FiltCoeff_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_2_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_2_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff24_address0;
    end else begin
        FiltCoeff_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_2_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op405_call_state15 == 1'b1) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        FiltCoeff_2_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff24_ce0;
    end else begin
        FiltCoeff_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd2))) begin
        FiltCoeff_2_1_we0 = 1'b1;
    end else begin
        FiltCoeff_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_3_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_3_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff3_address0;
    end else begin
        FiltCoeff_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_3_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_3_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff3_ce0;
    end else begin
        FiltCoeff_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd3))) begin
        FiltCoeff_3_0_we0 = 1'b1;
    end else begin
        FiltCoeff_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_3_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_3_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff35_address0;
    end else begin
        FiltCoeff_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_3_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op406_call_state16 == 1'b1) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
        FiltCoeff_3_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff35_ce0;
    end else begin
        FiltCoeff_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd3))) begin
        FiltCoeff_3_1_we0 = 1'b1;
    end else begin
        FiltCoeff_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_4_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        FiltCoeff_4_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff4_address0;
    end else begin
        FiltCoeff_4_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_4_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        FiltCoeff_4_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff4_ce0;
    end else begin
        FiltCoeff_4_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd4))) begin
        FiltCoeff_4_0_we0 = 1'b1;
    end else begin
        FiltCoeff_4_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_4_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        FiltCoeff_4_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff46_address0;
    end else begin
        FiltCoeff_4_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_4_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op407_call_state17 == 1'b1) & (ap_enable_reg_pp1_iter10 == 1'b1)))) begin
        FiltCoeff_4_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff46_ce0;
    end else begin
        FiltCoeff_4_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln608_reg_2452_pp0_iter1_reg == 3'd4))) begin
        FiltCoeff_4_1_we0 = 1'b1;
    end else begin
        FiltCoeff_4_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_5_0_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op409_call_state19 == 1'b1) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
        FiltCoeff_5_0_address0 = grp_hscale_polyphase_fu_852_FiltCoeff5_address0;
    end else begin
        FiltCoeff_5_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_5_0_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op409_call_state19 == 1'b1) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
        FiltCoeff_5_0_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff5_ce0;
    end else begin
        FiltCoeff_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((select_ln608_reg_2452_pp0_iter1_reg == 3'd5) | ((select_ln608_reg_2452_pp0_iter1_reg == 3'd6) | (select_ln608_reg_2452_pp0_iter1_reg == 3'd7))))) begin
        FiltCoeff_5_0_we0 = 1'b1;
    end else begin
        FiltCoeff_5_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_5_1_address0 = zext_ln608_fu_1020_p1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op409_call_state19 == 1'b1) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
        FiltCoeff_5_1_address0 = grp_hscale_polyphase_fu_852_FiltCoeff57_address0;
    end else begin
        FiltCoeff_5_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        FiltCoeff_5_1_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op409_call_state19 == 1'b1) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_predicate_op408_call_state18 == 1'b1) & (ap_enable_reg_pp1_iter11 == 1'b1)))) begin
        FiltCoeff_5_1_ce0 = grp_hscale_polyphase_fu_852_FiltCoeff57_ce0;
    end else begin
        FiltCoeff_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((select_ln608_reg_2452_pp0_iter1_reg == 3'd5) | ((select_ln608_reg_2452_pp0_iter1_reg == 3'd6) | (select_ln608_reg_2452_pp0_iter1_reg == 3'd7))))) begin
        FiltCoeff_5_1_we0 = 1'b1;
    end else begin
        FiltCoeff_5_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        OneBitIdx_ce0 = 1'b1;
    end else begin
        OneBitIdx_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        OneBitIdx_ce1 = 1'b1;
    end else begin
        OneBitIdx_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        OneBitIdx_ce2 = 1'b1;
    end else begin
        OneBitIdx_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        OneBitIdx_ce3 = 1'b1;
    end else begin
        OneBitIdx_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        OneBitIdx_ce4 = 1'b1;
    end else begin
        OneBitIdx_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln608_fu_938_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter4 == 1'b0))) begin
        ap_condition_pp1_exit_iter5_state12 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter5_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln636_fu_1073_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln620_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_ReadEn_phi_fu_777_p4 = ReadEn_1_reg_794;
    end else begin
        ap_phi_mux_ReadEn_phi_fu_777_p4 = ReadEn_reg_773;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln608_reg_2448 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_698_p4 = select_ln608_1_reg_2457;
    end else begin
        ap_phi_mux_i_phi_fu_698_p4 = i_reg_694;
    end
end

always @ (*) begin
    if ((((icmp141_reg_2822 == 1'd1) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)) | ((icmp141_reg_2822 == 1'd0) & (icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0)))) begin
        ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6 = zext_ln631_fu_1453_p1;
    end else if (((icmp_ln696_reg_2745_pp1_iter3_reg == 1'd0) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6 = nrWrsPrev_reg_739;
    end else begin
        ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6 = ap_phi_reg_pp1_iter4_nrWrsPrev_1_reg_808;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_nrWrsPrev_phi_fu_743_p4 = ap_phi_mux_nrWrsPrev_1_phi_fu_812_p6;
    end else begin
        ap_phi_mux_nrWrsPrev_phi_fu_743_p4 = nrWrsPrev_reg_739;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_xReadPos_phi_fu_755_p4 = xReadPos_2_reg_838;
    end else begin
        ap_phi_mux_xReadPos_phi_fu_755_p4 = xReadPos_reg_751;
    end
end

always @ (*) begin
    if (((icmp_ln696_reg_2745_pp1_iter3_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter3_reg == 1'd0))) begin
        if ((1'd0 == and_ln794_fu_1320_p2)) begin
            ap_phi_mux_xWritePos_1_phi_fu_787_p4 = ap_phi_mux_xWritePos_phi_fu_766_p4;
        end else if ((1'd1 == and_ln794_fu_1320_p2)) begin
            ap_phi_mux_xWritePos_1_phi_fu_787_p4 = xWritePos_3_fu_1394_p2;
        end else begin
            ap_phi_mux_xWritePos_1_phi_fu_787_p4 = ap_phi_reg_pp1_iter4_xWritePos_1_reg_784;
        end
    end else begin
        ap_phi_mux_xWritePos_1_phi_fu_787_p4 = ap_phi_reg_pp1_iter4_xWritePos_1_reg_784;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        ap_phi_mux_xWritePos_phi_fu_766_p4 = xWritePos_2_reg_822;
    end else begin
        ap_phi_mux_xWritePos_phi_fu_766_p4 = xWritePos_reg_762;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln636_reg_2741 == 1'd0))) begin
        ap_phi_mux_x_phi_fu_731_p4 = x_4_reg_2754;
    end else begin
        ap_phi_mux_x_phi_fu_731_p4 = x_reg_727;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp403) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_hscale_polyphase_fu_852_ap_ce = 1'b1;
    end else begin
        grp_hscale_polyphase_fu_852_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp176) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_reg_ap_uint_18_s_fu_1119_ap_ce = 1'b1;
    end else begin
        grp_reg_ap_uint_18_s_fu_1119_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hfltCoeff_ce0 = 1'b1;
    end else begin
        hfltCoeff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln620_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phasesH_ce0 = 1'b1;
    end else begin
        phasesH_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln696_reg_2745_pp1_iter15_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter15_reg == 1'd0) & (ap_enable_reg_pp1_iter16 == 1'b1) & (1'd1 == and_ln794_reg_2858_pp1_iter15_reg))) begin
        stream_scaled_blk_n = stream_scaled_full_n;
    end else begin
        stream_scaled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1))) begin
        stream_scaled_write = 1'b1;
    end else begin
        stream_scaled_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln659_reg_2854 == 1'd1) & (icmp_ln647_reg_2828 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0))) begin
        stream_upsampled_blk_n = stream_upsampled_empty_n;
    end else begin
        stream_upsampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_predicate_op334_read_state12 == 1'b1))) begin
        stream_upsampled_read = 1'b1;
    end else begin
        stream_upsampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln608_fu_938_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln608_fu_938_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln620_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b1) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign BitSetCnt_address0 = zext_ln534_fu_1199_p1;

assign LoopSize_fu_1050_p3 = {{tmp_7_fu_1040_p4}, {1'd0}};

assign OneBitIdx_address0 = tmp_18_cast_fu_1481_p1;

assign OneBitIdx_address1 = tmp_14_cast_fu_1427_p1;

assign OneBitIdx_address2 = tmp_15_cast_fu_1448_p1;

assign OneBitIdx_address3 = tmp_12_cast_fu_1389_p1;

assign OneBitIdx_address4 = tmp_10_cast_fu_1352_p1;

assign OutMultiPix_val_V_load_1_fu_2192_p3 = ((cmp138_0_reg_2862_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_1_val_V_1_fu_264 : select_ln800_1_fu_2187_p3);

assign OutMultiPix_val_V_load_2_fu_2204_p3 = ((cmp138_0_reg_2862_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_2_val_V_1_fu_268 : select_ln800_2_fu_2199_p3);

assign OutMultiPix_val_V_load_3_fu_2216_p3 = ((icmp138_reg_2874_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_3_val_V_1_fu_272 : select_ln800_3_fu_2211_p3);

assign OutMultiPix_val_V_load_4_fu_2228_p3 = ((icmp138_reg_2874_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_4_val_V_1_fu_256 : select_ln800_4_fu_2223_p3);

assign OutMultiPix_val_V_load_fu_2180_p3 = ((cmp138_0_reg_2862_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_0_val_V_1_fu_260 : select_ln800_fu_2175_p3);

assign OutPixPrv_0_val_V_fu_2306_p3 = ((sel_tmp2_fu_2301_p2[0:0] == 1'b1) ? OutPixPrv_0_val_V_1_fu_260 : sel_tmp_fu_2289_p3);

assign OutPixPrv_1_val_V_fu_2331_p3 = ((sel_tmp2_fu_2301_p2[0:0] == 1'b1) ? OutPixPrv_1_val_V_1_fu_264 : sel_tmp4_fu_2324_p3);

assign OutPixPrv_2_val_V_fu_2356_p3 = ((sel_tmp2_fu_2301_p2[0:0] == 1'b1) ? OutPixPrv_2_val_V_1_fu_268 : sel_tmp8_fu_2349_p3);

assign OutPixPrv_3_val_V_fu_2369_p3 = ((icmp141_reg_2822_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_3_val_V_1_fu_272 : select_ln815_6_fu_2364_p3);

assign OutPixPrv_4_val_V_fu_2381_p3 = ((icmp141_reg_2822_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_4_val_V_1_fu_256 : select_ln815_7_fu_2376_p3);

assign PhaseH_0_fu_1125_p1 = grp_reg_ap_uint_18_s_fu_1119_ap_return[5:0];

assign PixArray_val_V_6_0_10_fu_1607_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_2_0_fu_324);

assign PixArray_val_V_6_0_11_fu_1628_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_3_0_fu_336);

assign PixArray_val_V_6_0_12_fu_1649_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_4_0_fu_348);

assign PixArray_val_V_6_0_13_fu_1670_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_5_0_fu_360);

assign PixArray_val_V_6_0_9_fu_1586_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_1_0_fu_312);

assign PixArray_val_V_6_0_fu_1565_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_0_8_fu_372 : PixArray_val_V_0_0_fu_300);

assign PixArray_val_V_6_1_10_fu_1600_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_2_1_fu_328);

assign PixArray_val_V_6_1_11_fu_1621_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_3_1_fu_340);

assign PixArray_val_V_6_1_12_fu_1642_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_4_1_fu_352);

assign PixArray_val_V_6_1_13_fu_1663_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_5_1_fu_364);

assign PixArray_val_V_6_1_9_fu_1579_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_1_1_fu_316);

assign PixArray_val_V_6_1_fu_1558_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_1_8_fu_376 : PixArray_val_V_0_1_fu_304);

assign PixArray_val_V_6_2_10_fu_1593_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_3_2_fu_320);

assign PixArray_val_V_6_2_11_fu_1614_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_4_2_fu_332);

assign PixArray_val_V_6_2_12_fu_1635_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_5_2_fu_344);

assign PixArray_val_V_6_2_13_fu_1656_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_6_2_fu_356);

assign PixArray_val_V_6_2_14_fu_1677_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_7_2_fu_368);

assign PixArray_val_V_6_2_9_fu_1572_p3 = ((icmp_reg_2832[0:0] == 1'b1) ? PixArray_val_V_6_2_1_fu_380 : PixArray_val_V_2_2_fu_308);

assign PixArray_val_V_8_0_fu_1819_p1 = stream_upsampled_dout[7:0];

assign TotalPixels_fu_924_p3 = ((icmp_ln224_fu_910_p2[0:0] == 1'b1) ? trunc_ln584_fu_916_p1 : trunc_ln584_1_fu_920_p1);

assign add_ln589_fu_1035_p2 = (TotalPixels_fu_924_p3 + 12'd6);

assign add_ln608_1_fu_932_p2 = (indvar_flatten_reg_683 + 9'd1);

assign add_ln608_fu_944_p2 = (ap_phi_mux_i_phi_fu_698_p4 + 7'd1);

assign add_ln611_fu_976_p2 = (select_ln608_fu_956_p3 + 3'd1);

assign add_ln659_fu_1270_p2 = (zext_ln659_fu_1266_p1 + 17'd6);

assign and_ln794_fu_1320_p2 = (icmp_ln794_fu_1310_p2 & icmp_ln794_1_fu_1315_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1)) | ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1)) | ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp176 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1)) | ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp403 = (((ap_enable_reg_pp1_iter5 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1)) | ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter5 == 1'b1) & (stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1)) | ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1) & (ap_enable_reg_pp1_iter16 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter3_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter3_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp1_stage0_iter5 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp1_stage0_iter5_ignore_call37 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp1_stage0_iter5_ignore_call48 = ((stream_upsampled_empty_n == 1'b0) & (ap_predicate_op334_read_state12 == 1'b1));
end

assign ap_block_state13_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter6_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter6_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter7_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter7_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter8_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter8_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter9_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter9_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter10_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter10_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter11_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter11_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter12_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter12_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter13_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter13_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter14_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter14_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter15_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter15_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp1_stage0_iter16 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1));
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter16_ignore_call37 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1));
end

always @ (*) begin
    ap_block_state23_pp1_stage0_iter16_ignore_call48 = ((stream_scaled_full_n == 1'b0) & (ap_predicate_op438_write_state23 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2_ignore_call37 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1167 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln647_reg_2828 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter4_ReadEn_1_reg_794 = 'bx;

assign ap_phi_reg_pp1_iter4_nrWrsPrev_1_reg_808 = 'bx;

assign ap_phi_reg_pp1_iter4_xReadPos_2_reg_838 = 'bx;

assign ap_phi_reg_pp1_iter4_xWritePos_1_reg_784 = 'bx;

assign ap_phi_reg_pp1_iter4_xWritePos_2_reg_822 = 'bx;

always @ (*) begin
    ap_predicate_op176_call_state8 = ((icmp_ln696_reg_2745 == 1'd1) & (icmp_ln636_reg_2741 == 1'd0));
end

always @ (*) begin
    ap_predicate_op334_read_state12 = ((icmp_ln659_reg_2854 == 1'd1) & (icmp_ln647_reg_2828 == 1'd0) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op403_call_state13 = ((icmp_ln696_reg_2745_pp1_iter5_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op403_call_state13_state12 = ((icmp_ln696_reg_2745_pp1_iter4_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op404_call_state14 = ((icmp_ln696_reg_2745_pp1_iter6_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter6_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op405_call_state15 = ((icmp_ln696_reg_2745_pp1_iter7_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter7_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op406_call_state16 = ((icmp_ln696_reg_2745_pp1_iter8_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op407_call_state17 = ((icmp_ln696_reg_2745_pp1_iter9_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter9_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op408_call_state18 = ((icmp_ln696_reg_2745_pp1_iter10_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter10_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op409_call_state19 = ((icmp_ln696_reg_2745_pp1_iter11_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter11_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op438_write_state23 = ((icmp_ln696_reg_2745_pp1_iter15_reg == 1'd1) & (icmp_ln636_reg_2741_pp1_iter15_reg == 1'd0) & (1'd1 == and_ln794_reg_2858_pp1_iter15_reg));
end

assign ap_ready = internal_ap_ready;

assign brmerge_0_demorgan_fu_1459_p2 = (nrWrsPrev_2_fu_1305_p2 & icmp_ln794_fu_1310_p2);

assign cmp138_0_fu_1330_p2 = ((nrWrsPrev_reg_739 != 8'd0) ? 1'b1 : 1'b0);

assign cmp189_0_fu_1405_p2 = ((nrWrsPrev_reg_739 != 8'd0) ? 1'b1 : 1'b0);

assign cond_lvalue243_1_2_fu_2240_p3 = ((icmp138_reg_2874_pp1_iter15_reg[0:0] == 1'b1) ? OutPixPrv_val_V_5_01136_fu_252 : select_ln800_5_fu_2235_p3);

assign empty_74_fu_972_p1 = select_ln608_1_fu_964_p3[5:0];

assign empty_75_fu_1000_p2 = (tmp_8_cast_fu_982_p3 - tmp_9_cast_fu_996_p1);

assign empty_76_fu_1009_p2 = (empty_75_fu_1000_p2 + select_ln608_cast_fu_1006_p1);

assign empty_77_fu_1326_p1 = nrWrsPrev_reg_739[1:0];

assign empty_78_fu_1336_p2 = (2'd0 - empty_77_fu_1326_p1);

assign empty_79_fu_1373_p2 = (2'd1 - empty_77_fu_1326_p1);

assign empty_80_fu_1401_p1 = nrWrsPrev_reg_739[1:0];

assign empty_81_fu_1411_p2 = ($signed(2'd2) - $signed(empty_80_fu_1401_p1));

assign empty_82_fu_1432_p2 = (2'd0 - empty_80_fu_1401_p1);

assign empty_83_fu_1465_p2 = (2'd1 - empty_80_fu_1401_p1);

assign empty_fu_902_p1 = Height[11:0];

assign grp_hscale_polyphase_fu_852_ap_start = grp_hscale_polyphase_fu_852_ap_start_reg;

assign grp_reg_ap_uint_18_s_fu_1119_d = phasesH_q0[17:0];

assign hfltCoeff_address0 = p_cast_fu_1015_p1;

assign icmp138_fu_1367_p2 = ((tmp_22_fu_1357_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp141_fu_1238_p2 = ((tmp_23_fu_1228_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_1260_p2 = ((tmp_fu_1250_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_910_p2 = ((WidthOut < WidthIn) ? 1'b1 : 1'b0);

assign icmp_ln608_fu_938_p2 = ((indvar_flatten_reg_683 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln611_fu_950_p2 = ((j_reg_705 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_1068_p2 = ((y_reg_716 == empty_fu_902_p1) ? 1'b1 : 1'b0);

assign icmp_ln636_fu_1073_p2 = ((ap_phi_mux_x_phi_fu_731_p4 > zext_ln620_fu_1058_p1) ? 1'b1 : 1'b0);

assign icmp_ln647_fu_1244_p2 = ((ap_phi_mux_ReadEn_phi_fu_777_p4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln659_fu_1276_p2 = ((add_ln659_fu_1270_p2 < zext_ln224_fu_906_p1) ? 1'b1 : 1'b0);

assign icmp_ln696_fu_1078_p2 = ((ap_phi_mux_x_phi_fu_731_p4 > 13'd4) ? 1'b1 : 1'b0);

assign icmp_ln794_1_fu_1315_p2 = ((ap_phi_mux_xWritePos_phi_fu_766_p4 < WidthOut) ? 1'b1 : 1'b0);

assign icmp_ln794_fu_1310_p2 = ((tmp_21_reg_2817 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln800_1_fu_1941_p2 = ((shl_ln800_1_fu_1933_p3 == zext_ln800_1_fu_1925_p1) ? 1'b1 : 1'b0);

assign icmp_ln800_fu_1919_p2 = ((shl_ln_fu_1911_p3 == zext_ln800_fu_1903_p1) ? 1'b1 : 1'b0);

assign icmp_ln815_1_fu_1985_p2 = ((shl_ln1_fu_1955_p3 == zext_ln815_fu_1947_p1) ? 1'b1 : 1'b0);

assign icmp_ln815_2_fu_2007_p2 = ((shl_ln815_2_fu_1999_p3 == zext_ln815_2_fu_1991_p1) ? 1'b1 : 1'b0);

assign icmp_ln815_fu_1979_p2 = ((shl_ln815_1_fu_1971_p3 == zext_ln815_1_fu_1963_p1) ? 1'b1 : 1'b0);

assign nrWrsAccu_fu_1212_p2 = (ap_phi_mux_nrWrsPrev_phi_fu_743_p4 + nrWrsClck_cast_fu_1204_p1);

assign nrWrsClck_cast_fu_1204_p1 = BitSetCnt_q0;

assign nrWrsPrev_2_fu_1305_p2 = (trunc_ln793_fu_1301_p1 ^ trunc_ln793_1_reg_2812);

assign p_Result_7_1_fu_1167_p3 = grp_reg_ap_uint_18_s_fu_1119_ap_return[18'd17];

assign p_Result_7_fu_1139_p3 = grp_reg_ap_uint_18_s_fu_1119_ap_return[18'd8];

assign p_Result_9_1_fu_1175_p3 = {{p_Result_7_1_fu_1167_p3}, {p_Result_7_fu_1139_p3}};

assign p_cast_fu_1015_p1 = empty_76_fu_1009_p2;

assign phasesH_address0 = zext_ln703_fu_1104_p1;

assign sel_tmp1_fu_2296_p2 = (brmerge_0_demorgan_reg_2901_pp1_iter15_reg ^ 1'd1);

assign sel_tmp2_fu_2301_p2 = (sel_tmp1_fu_2296_p2 & cmp189_0_reg_2886_pp1_iter15_reg);

assign sel_tmp4_fu_2324_p3 = ((brmerge_0_demorgan_reg_2901_pp1_iter15_reg[0:0] == 1'b1) ? select_ln815_2_fu_2314_p3 : select_ln815_3_fu_2319_p3);

assign sel_tmp8_fu_2349_p3 = ((brmerge_0_demorgan_reg_2901_pp1_iter15_reg[0:0] == 1'b1) ? select_ln815_4_fu_2339_p3 : select_ln815_5_fu_2344_p3);

assign sel_tmp_fu_2289_p3 = ((brmerge_0_demorgan_reg_2901_pp1_iter15_reg[0:0] == 1'b1) ? select_ln815_fu_2279_p3 : select_ln815_1_fu_2284_p3);

assign select_ln608_1_fu_964_p3 = ((icmp_ln611_fu_950_p2[0:0] == 1'b1) ? add_ln608_fu_944_p2 : ap_phi_mux_i_phi_fu_698_p4);

assign select_ln608_cast_fu_1006_p1 = select_ln608_reg_2452;

assign select_ln608_fu_956_p3 = ((icmp_ln611_fu_950_p2[0:0] == 1'b1) ? 3'd0 : j_reg_705);

assign select_ln800_1_fu_2187_p3 = ((icmp_ln800_reg_2914_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_1_reg_2958 : OutPix_4_reg_2985);

assign select_ln800_2_fu_2199_p3 = ((icmp_ln800_reg_2914_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_2_reg_2967 : OutPix_5_reg_2994);

assign select_ln800_3_fu_2211_p3 = ((icmp_ln800_1_reg_2921_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_reg_2949 : OutPix_3_reg_2976);

assign select_ln800_4_fu_2223_p3 = ((icmp_ln800_1_reg_2921_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_1_reg_2958 : OutPix_4_reg_2985);

assign select_ln800_5_fu_2235_p3 = ((icmp_ln800_1_reg_2921_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_2_reg_2967 : OutPix_5_reg_2994);

assign select_ln800_fu_2175_p3 = ((icmp_ln800_reg_2914_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_reg_2949 : OutPix_3_reg_2976);

assign select_ln815_1_fu_2284_p3 = ((icmp_ln815_1_reg_2935_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_reg_2949 : OutPix_3_reg_2976);

assign select_ln815_2_fu_2314_p3 = ((icmp_ln815_reg_2928_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_1_reg_2958 : OutPix_4_reg_2985);

assign select_ln815_3_fu_2319_p3 = ((icmp_ln815_1_reg_2935_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_1_reg_2958 : OutPix_4_reg_2985);

assign select_ln815_4_fu_2339_p3 = ((icmp_ln815_reg_2928_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_2_reg_2967 : OutPix_5_reg_2994);

assign select_ln815_5_fu_2344_p3 = ((icmp_ln815_1_reg_2935_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_2_reg_2967 : OutPix_5_reg_2994);

assign select_ln815_6_fu_2364_p3 = ((icmp_ln815_2_reg_2942_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_reg_2949 : OutPix_3_reg_2976);

assign select_ln815_7_fu_2376_p3 = ((icmp_ln815_2_reg_2942_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_1_reg_2958 : OutPix_4_reg_2985);

assign select_ln815_8_fu_2413_p3 = ((icmp_ln815_2_reg_2942_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_2_reg_2967 : OutPix_5_reg_2994);

assign select_ln815_fu_2279_p3 = ((icmp_ln815_reg_2928_pp1_iter15_reg[0:0] == 1'b1) ? OutPix_reg_2949 : OutPix_3_reg_2976);

assign shl_ln1_fu_1955_p3 = {{trunc_ln815_fu_1951_p1}, {2'd0}};

assign shl_ln800_1_fu_1933_p3 = {{trunc_ln800_1_fu_1929_p1}, {2'd0}};

assign shl_ln815_1_fu_1971_p3 = {{trunc_ln815_1_fu_1967_p1}, {2'd0}};

assign shl_ln815_2_fu_1999_p3 = {{trunc_ln815_2_fu_1995_p1}, {2'd0}};

assign shl_ln_fu_1911_p3 = {{trunc_ln800_fu_1907_p1}, {2'd0}};

assign start_out = real_start;

assign stream_scaled_din = {{{{{{cond_lvalue243_1_2_fu_2240_p3}, {OutMultiPix_val_V_load_4_fu_2228_p3}}, {OutMultiPix_val_V_load_3_fu_2216_p3}}, {OutMultiPix_val_V_load_2_fu_2204_p3}}, {OutMultiPix_val_V_load_1_fu_2192_p3}}, {OutMultiPix_val_V_load_fu_2180_p3}};

assign tmp_10_cast_fu_1352_p1 = tmp_s_fu_1342_p5;

assign tmp_12_cast_fu_1389_p1 = tmp_1_fu_1379_p5;

assign tmp_14_cast_fu_1427_p1 = tmp_2_fu_1417_p5;

assign tmp_15_cast_fu_1448_p1 = tmp_3_fu_1438_p5;

assign tmp_18_cast_fu_1481_p1 = tmp_4_fu_1471_p5;

assign tmp_1_fu_1379_p5 = {{{{empty_79_fu_1373_p2}, {2'd0}}, {p_Result_7_1_reg_2788_pp1_iter3_reg}}, {p_Result_7_reg_2769_pp1_iter3_reg}};

assign tmp_22_fu_1357_p4 = {{nrWrsPrev_reg_739[7:1]}};

assign tmp_23_fu_1228_p4 = {{ap_phi_mux_nrWrsPrev_phi_fu_743_p4[7:1]}};

assign tmp_2_fu_1417_p5 = {{{{empty_81_fu_1411_p2}, {2'd0}}, {p_Result_7_1_reg_2788_pp1_iter3_reg}}, {p_Result_7_reg_2769_pp1_iter3_reg}};

assign tmp_3_fu_1438_p5 = {{{{empty_82_fu_1432_p2}, {2'd0}}, {p_Result_7_1_reg_2788_pp1_iter3_reg}}, {p_Result_7_reg_2769_pp1_iter3_reg}};

assign tmp_4_fu_1471_p5 = {{{{empty_83_fu_1465_p2}, {2'd0}}, {p_Result_7_1_reg_2788_pp1_iter3_reg}}, {p_Result_7_reg_2769_pp1_iter3_reg}};

assign tmp_7_fu_1040_p4 = {{add_ln589_fu_1035_p2[11:1]}};

assign tmp_8_cast_fu_982_p3 = {{empty_74_reg_2464}, {3'd0}};

assign tmp_9_cast_fu_996_p1 = tmp_9_fu_989_p3;

assign tmp_9_fu_989_p3 = {{select_ln608_1_reg_2457}, {1'd0}};

assign tmp_fu_1250_p4 = {{x_reg_727_pp1_iter3_reg[12:2]}};

assign tmp_s_fu_1342_p5 = {{{{empty_78_fu_1336_p2}, {2'd0}}, {p_Result_7_1_reg_2788_pp1_iter3_reg}}, {p_Result_7_reg_2769_pp1_iter3_reg}};

assign trunc_ln584_1_fu_920_p1 = WidthOut[11:0];

assign trunc_ln584_fu_916_p1 = WidthIn[11:0];

assign trunc_ln636_fu_1084_p1 = ap_phi_mux_x_phi_fu_731_p4[11:0];

assign trunc_ln793_1_fu_1208_p1 = BitSetCnt_q0[0:0];

assign trunc_ln793_fu_1301_p1 = nrWrsPrev_reg_739[0:0];

assign trunc_ln800_1_fu_1929_p1 = OneBitIdx_q3[0:0];

assign trunc_ln800_fu_1907_p1 = OneBitIdx_q4[0:0];

assign trunc_ln815_1_fu_1967_p1 = OneBitIdx_q1[0:0];

assign trunc_ln815_2_fu_1995_p1 = OneBitIdx_q0[0:0];

assign trunc_ln815_fu_1951_p1 = OneBitIdx_q2[0:0];

assign xReadPos_1_fu_1286_p2 = (ap_phi_mux_xReadPos_phi_fu_755_p4 + 16'd2);

assign xReadPos_3_fu_1292_p3 = ((tmp_19_reg_2797_pp1_iter3_reg[0:0] == 1'b1) ? xReadPos_1_fu_1286_p2 : ap_phi_mux_xReadPos_phi_fu_755_p4);

assign xWritePos_3_fu_1394_p2 = (ap_phi_mux_xWritePos_phi_fu_766_p4 + 16'd2);

assign x_4_fu_1109_p2 = (ap_phi_mux_x_phi_fu_731_p4 + 13'd2);

assign xbySamples_1_fu_1094_p4 = {{xbySamples_fu_1088_p2[11:1]}};

assign xbySamples_fu_1088_p2 = ($signed(trunc_ln636_fu_1084_p1) + $signed(12'd4091));

assign y_4_fu_1062_p2 = (y_reg_716 + 12'd1);

assign zext_ln224_fu_906_p1 = WidthIn;

assign zext_ln534_fu_1199_p1 = p_Result_9_1_fu_1175_p3;

assign zext_ln608_fu_1020_p1 = select_ln608_1_reg_2457_pp0_iter1_reg;

assign zext_ln620_fu_1058_p1 = LoopSize_fu_1050_p3;

assign zext_ln631_fu_1453_p1 = nrWrsPrev_2_fu_1305_p2;

assign zext_ln659_fu_1266_p1 = ap_phi_mux_xReadPos_phi_fu_755_p4;

assign zext_ln703_fu_1104_p1 = xbySamples_1_fu_1094_p4;

assign zext_ln716_fu_1281_p1 = tmp_20_reg_2802_pp1_iter3_reg;

assign zext_ln800_1_fu_1925_p1 = OneBitIdx_q3;

assign zext_ln800_fu_1903_p1 = OneBitIdx_q4;

assign zext_ln815_1_fu_1963_p1 = OneBitIdx_q1;

assign zext_ln815_2_fu_1991_p1 = OneBitIdx_q0;

assign zext_ln815_fu_1947_p1 = OneBitIdx_q2;

endmodule //bd_c2dc_hsc_0_hscale_core_polyphase
