// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_scaler_top_Block_split10_proc52 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        WidthOut,
        HeightOut,
        WidthIn,
        InPixelFmt,
        OutPixelFmt,
        srcImgBuf0,
        srcImgBuf1,
        HeightIn,
        StrideIn,
        StrideOut,
        LineRate,
        dstImgBuf0,
        dstImgBuf1,
        WidthOut_out_din,
        WidthOut_out_full_n,
        WidthOut_out_write,
        WidthOut_out1_din,
        WidthOut_out1_full_n,
        WidthOut_out1_write,
        HeightOut_out_din,
        HeightOut_out_full_n,
        HeightOut_out_write,
        WidthIn_out_din,
        WidthIn_out_full_n,
        WidthIn_out_write,
        InPixelFmt_out_din,
        InPixelFmt_out_full_n,
        InPixelFmt_out_write,
        OutPixelFmt_out_din,
        OutPixelFmt_out_full_n,
        OutPixelFmt_out_write,
        WidthOut_cast2_out_out_din,
        WidthOut_cast2_out_out_full_n,
        WidthOut_cast2_out_out_write,
        WidthOut_cast_out_out_din,
        WidthOut_cast_out_out_full_n,
        WidthOut_cast_out_out_write,
        HeightOut_cast_out_out_din,
        HeightOut_cast_out_out_full_n,
        HeightOut_cast_out_out_write,
        WidthIn_cast1_out_out_din,
        WidthIn_cast1_out_out_full_n,
        WidthIn_cast1_out_out_write,
        WidthIn_cast_out_out_din,
        WidthIn_cast_out_out_full_n,
        WidthIn_cast_out_out_write,
        ColorModeIn_out_out_din,
        ColorModeIn_out_out_full_n,
        ColorModeIn_out_out_write,
        bPassThruVcrUp_out_out_din,
        bPassThruVcrUp_out_out_full_n,
        bPassThruVcrUp_out_out_write,
        bPassThruHcrUp_out_out_din,
        bPassThruHcrUp_out_out_full_n,
        bPassThruHcrUp_out_out_write,
        bPassThruHcrDown_out_out_din,
        bPassThruHcrDown_out_out_full_n,
        bPassThruHcrDown_out_out_write,
        bPassThruVcrDown_out_out_din,
        bPassThruVcrDown_out_out_full_n,
        bPassThruVcrDown_out_out_write,
        bPassThruCsc_out_out_din,
        bPassThruCsc_out_out_full_n,
        bPassThruCsc_out_out_write,
        mul_ln902_out_out_din,
        mul_ln902_out_out_full_n,
        mul_ln902_out_out_write,
        srcImgBuf0_out_din,
        srcImgBuf0_out_full_n,
        srcImgBuf0_out_write,
        srcImgBuf1_out_din,
        srcImgBuf1_out_full_n,
        srcImgBuf1_out_write,
        HeightIn_out_din,
        HeightIn_out_full_n,
        HeightIn_out_write,
        StrideIn_out_din,
        StrideIn_out_full_n,
        StrideIn_out_write,
        StrideOut_out_din,
        StrideOut_out_full_n,
        StrideOut_out_write,
        LineRate_out_din,
        LineRate_out_full_n,
        LineRate_out_write,
        dstImgBuf0_out_din,
        dstImgBuf0_out_full_n,
        dstImgBuf0_out_write,
        dstImgBuf1_out_din,
        dstImgBuf1_out_full_n,
        dstImgBuf1_out_write,
        ap_return
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] WidthOut;
input  [15:0] HeightOut;
input  [15:0] WidthIn;
input  [7:0] InPixelFmt;
input  [7:0] OutPixelFmt;
input  [63:0] srcImgBuf0;
input  [63:0] srcImgBuf1;
input  [15:0] HeightIn;
input  [15:0] StrideIn;
input  [15:0] StrideOut;
input  [31:0] LineRate;
input  [63:0] dstImgBuf0;
input  [63:0] dstImgBuf1;
output  [15:0] WidthOut_out_din;
input   WidthOut_out_full_n;
output   WidthOut_out_write;
output  [15:0] WidthOut_out1_din;
input   WidthOut_out1_full_n;
output   WidthOut_out1_write;
output  [15:0] HeightOut_out_din;
input   HeightOut_out_full_n;
output   HeightOut_out_write;
output  [15:0] WidthIn_out_din;
input   WidthIn_out_full_n;
output   WidthIn_out_write;
output  [7:0] InPixelFmt_out_din;
input   InPixelFmt_out_full_n;
output   InPixelFmt_out_write;
output  [7:0] OutPixelFmt_out_din;
input   OutPixelFmt_out_full_n;
output   OutPixelFmt_out_write;
output  [3:0] WidthOut_cast2_out_out_din;
input   WidthOut_cast2_out_out_full_n;
output   WidthOut_cast2_out_out_write;
output  [11:0] WidthOut_cast_out_out_din;
input   WidthOut_cast_out_out_full_n;
output   WidthOut_cast_out_out_write;
output  [11:0] HeightOut_cast_out_out_din;
input   HeightOut_cast_out_out_full_n;
output   HeightOut_cast_out_out_write;
output  [12:0] WidthIn_cast1_out_out_din;
input   WidthIn_cast1_out_out_full_n;
output   WidthIn_cast1_out_out_write;
output  [3:0] WidthIn_cast_out_out_din;
input   WidthIn_cast_out_out_full_n;
output   WidthIn_cast_out_out_write;
output  [2:0] ColorModeIn_out_out_din;
input   ColorModeIn_out_out_full_n;
output   ColorModeIn_out_out_write;
output  [0:0] bPassThruVcrUp_out_out_din;
input   bPassThruVcrUp_out_out_full_n;
output   bPassThruVcrUp_out_out_write;
output  [0:0] bPassThruHcrUp_out_out_din;
input   bPassThruHcrUp_out_out_full_n;
output   bPassThruHcrUp_out_out_write;
output  [0:0] bPassThruHcrDown_out_out_din;
input   bPassThruHcrDown_out_out_full_n;
output   bPassThruHcrDown_out_out_write;
output  [0:0] bPassThruVcrDown_out_out_din;
input   bPassThruVcrDown_out_out_full_n;
output   bPassThruVcrDown_out_out_write;
output  [0:0] bPassThruCsc_out_out_din;
input   bPassThruCsc_out_out_full_n;
output   bPassThruCsc_out_out_write;
output  [15:0] mul_ln902_out_out_din;
input   mul_ln902_out_out_full_n;
output   mul_ln902_out_out_write;
output  [63:0] srcImgBuf0_out_din;
input   srcImgBuf0_out_full_n;
output   srcImgBuf0_out_write;
output  [63:0] srcImgBuf1_out_din;
input   srcImgBuf1_out_full_n;
output   srcImgBuf1_out_write;
output  [15:0] HeightIn_out_din;
input   HeightIn_out_full_n;
output   HeightIn_out_write;
output  [15:0] StrideIn_out_din;
input   StrideIn_out_full_n;
output   StrideIn_out_write;
output  [15:0] StrideOut_out_din;
input   StrideOut_out_full_n;
output   StrideOut_out_write;
output  [31:0] LineRate_out_din;
input   LineRate_out_full_n;
output   LineRate_out_write;
output  [63:0] dstImgBuf0_out_din;
input   dstImgBuf0_out_full_n;
output   dstImgBuf0_out_write;
output  [63:0] dstImgBuf1_out_din;
input   dstImgBuf1_out_full_n;
output   dstImgBuf1_out_write;
output  [2:0] ap_return;

reg ap_done;
reg ap_idle;
reg start_write;
reg WidthOut_out_write;
reg WidthOut_out1_write;
reg HeightOut_out_write;
reg WidthIn_out_write;
reg InPixelFmt_out_write;
reg OutPixelFmt_out_write;
reg WidthOut_cast2_out_out_write;
reg WidthOut_cast_out_out_write;
reg HeightOut_cast_out_out_write;
reg WidthIn_cast1_out_out_write;
reg WidthIn_cast_out_out_write;
reg ColorModeIn_out_out_write;
reg bPassThruVcrUp_out_out_write;
reg bPassThruHcrUp_out_out_write;
reg bPassThruHcrDown_out_out_write;
reg bPassThruVcrDown_out_out_write;
reg bPassThruCsc_out_out_write;
reg mul_ln902_out_out_write;
reg srcImgBuf0_out_write;
reg srcImgBuf1_out_write;
reg HeightIn_out_write;
reg StrideIn_out_write;
reg StrideOut_out_write;
reg LineRate_out_write;
reg dstImgBuf0_out_write;
reg dstImgBuf1_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [4:0] MEMORY2LIVE_address0;
reg    MEMORY2LIVE_ce0;
wire   [2:0] MEMORY2LIVE_q0;
reg   [4:0] BYTES_PER_PIXEL_address0;
reg    BYTES_PER_PIXEL_ce0;
wire   [2:0] BYTES_PER_PIXEL_q0;
reg    WidthOut_out_blk_n;
wire    ap_CS_fsm_state4;
reg    WidthOut_out1_blk_n;
reg    HeightOut_out_blk_n;
reg    WidthIn_out_blk_n;
reg    InPixelFmt_out_blk_n;
reg    OutPixelFmt_out_blk_n;
reg    WidthOut_cast2_out_out_blk_n;
reg    WidthOut_cast_out_out_blk_n;
reg    HeightOut_cast_out_out_blk_n;
reg    WidthIn_cast1_out_out_blk_n;
reg    WidthIn_cast_out_out_blk_n;
reg    ColorModeIn_out_out_blk_n;
reg    bPassThruVcrUp_out_out_blk_n;
reg    bPassThruHcrUp_out_out_blk_n;
reg    bPassThruHcrDown_out_out_blk_n;
reg    bPassThruVcrDown_out_out_blk_n;
reg    bPassThruCsc_out_out_blk_n;
reg    mul_ln902_out_out_blk_n;
reg    srcImgBuf0_out_blk_n;
reg    srcImgBuf1_out_blk_n;
reg    HeightIn_out_blk_n;
reg    StrideIn_out_blk_n;
reg    StrideOut_out_blk_n;
reg    LineRate_out_blk_n;
reg    dstImgBuf0_out_blk_n;
reg    dstImgBuf1_out_blk_n;
wire   [3:0] empty_fu_428_p1;
reg   [3:0] empty_reg_670;
wire   [11:0] empty_116_fu_432_p1;
reg   [11:0] empty_116_reg_675;
wire   [11:0] empty_117_fu_436_p1;
reg   [11:0] empty_117_reg_680;
wire   [12:0] empty_118_fu_440_p1;
reg   [12:0] empty_118_reg_685;
wire   [3:0] empty_119_fu_444_p1;
reg   [3:0] empty_119_reg_690;
reg   [2:0] ColorModeIn_reg_705;
wire    ap_CS_fsm_state2;
reg   [2:0] BYTES_PER_PIXEL_load_reg_710;
wire   [0:0] bPassThruVcrUp_fu_471_p2;
reg   [0:0] bPassThruVcrUp_reg_715;
wire    ap_CS_fsm_state3;
wire   [0:0] bPassThruHcrUp_fu_487_p2;
reg   [0:0] bPassThruHcrUp_reg_720;
wire   [0:0] bPassThruHcrDown_fu_516_p2;
reg   [0:0] bPassThruHcrDown_reg_725;
wire   [0:0] bPassThruVcrDown_fu_522_p2;
reg   [0:0] bPassThruVcrDown_reg_730;
wire   [0:0] bPassThruCsc_fu_586_p2;
reg   [0:0] bPassThruCsc_reg_735;
wire   [15:0] mul_ln902_fu_595_p2;
reg   [15:0] mul_ln902_reg_745;
wire   [63:0] zext_ln835_fu_448_p1;
wire   [63:0] zext_ln835_1_fu_454_p1;
reg    ap_block_state1;
reg    ap_block_state4;
wire  signed [15:0] empty_118_fu_440_p0;
wire  signed [15:0] empty_119_fu_444_p0;
wire   [31:0] zext_ln831_fu_458_p1;
wire   [31:0] lshr_ln831_fu_461_p2;
wire   [0:0] trunc_ln831_fu_467_p1;
wire   [31:0] lshr_ln832_fu_477_p2;
wire   [0:0] trunc_ln832_fu_483_p1;
wire   [31:0] zext_ln833_fu_493_p1;
wire   [31:0] lshr_ln833_fu_496_p2;
wire   [31:0] lshr_ln833_1_fu_506_p2;
wire   [0:0] trunc_ln833_1_fu_512_p1;
wire   [0:0] trunc_ln833_fu_502_p1;
wire   [31:0] lshr_ln835_fu_528_p2;
wire   [31:0] lshr_ln835_1_fu_538_p2;
wire   [0:0] trunc_ln835_fu_534_p1;
wire   [0:0] trunc_ln835_1_fu_544_p1;
wire   [31:0] lshr_ln835_2_fu_554_p2;
wire   [31:0] lshr_ln835_3_fu_564_p2;
wire   [0:0] trunc_ln835_2_fu_560_p1;
wire   [0:0] trunc_ln835_3_fu_570_p1;
wire   [0:0] and_ln835_fu_548_p2;
wire   [0:0] and_ln835_1_fu_574_p2;
wire   [0:0] or_ln835_fu_580_p2;
wire   [2:0] mul_ln902_fu_595_p0;
reg   [3:0] ap_NS_fsm;
wire   [15:0] mul_ln902_fu_595_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
end

bd_v_multi_scaler_0_0_v_scaler_top_Block_split10_proc52_MEMORY2LIVE #(
    .DataWidth( 3 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
MEMORY2LIVE_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(MEMORY2LIVE_address0),
    .ce0(MEMORY2LIVE_ce0),
    .q0(MEMORY2LIVE_q0)
);

bd_v_multi_scaler_0_0_v_scaler_top_Block_split10_proc52_BYTES_PER_PIXEL #(
    .DataWidth( 3 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
BYTES_PER_PIXEL_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(BYTES_PER_PIXEL_address0),
    .ce0(BYTES_PER_PIXEL_ce0),
    .q0(BYTES_PER_PIXEL_q0)
);

bd_v_multi_scaler_0_0_mul_3ns_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mul_3ns_16s_16_1_1_U1(
    .din0(mul_ln902_fu_595_p0),
    .din1(WidthIn),
    .dout(mul_ln902_fu_595_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        BYTES_PER_PIXEL_load_reg_710 <= BYTES_PER_PIXEL_q0;
        ColorModeIn_reg_705 <= MEMORY2LIVE_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bPassThruCsc_reg_735 <= bPassThruCsc_fu_586_p2;
        bPassThruHcrDown_reg_725 <= bPassThruHcrDown_fu_516_p2;
        bPassThruHcrUp_reg_720 <= bPassThruHcrUp_fu_487_p2;
        bPassThruVcrDown_reg_730 <= bPassThruVcrDown_fu_522_p2;
        bPassThruVcrUp_reg_715 <= bPassThruVcrUp_fu_471_p2;
        mul_ln902_reg_745 <= mul_ln902_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_116_reg_675 <= empty_116_fu_432_p1;
        empty_117_reg_680 <= empty_117_fu_436_p1;
        empty_118_reg_685 <= empty_118_fu_440_p1;
        empty_119_reg_690 <= empty_119_fu_444_p1;
        empty_reg_670 <= empty_fu_428_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        BYTES_PER_PIXEL_address0 = zext_ln835_1_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        BYTES_PER_PIXEL_address0 = zext_ln835_fu_448_p1;
    end else begin
        BYTES_PER_PIXEL_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        BYTES_PER_PIXEL_ce0 = 1'b1;
    end else begin
        BYTES_PER_PIXEL_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ColorModeIn_out_out_blk_n = ColorModeIn_out_out_full_n;
    end else begin
        ColorModeIn_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ColorModeIn_out_out_write = 1'b1;
    end else begin
        ColorModeIn_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        HeightIn_out_blk_n = HeightIn_out_full_n;
    end else begin
        HeightIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        HeightIn_out_write = 1'b1;
    end else begin
        HeightIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        HeightOut_cast_out_out_blk_n = HeightOut_cast_out_out_full_n;
    end else begin
        HeightOut_cast_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        HeightOut_cast_out_out_write = 1'b1;
    end else begin
        HeightOut_cast_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        HeightOut_out_blk_n = HeightOut_out_full_n;
    end else begin
        HeightOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        HeightOut_out_write = 1'b1;
    end else begin
        HeightOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        InPixelFmt_out_blk_n = InPixelFmt_out_full_n;
    end else begin
        InPixelFmt_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        InPixelFmt_out_write = 1'b1;
    end else begin
        InPixelFmt_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        LineRate_out_blk_n = LineRate_out_full_n;
    end else begin
        LineRate_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        LineRate_out_write = 1'b1;
    end else begin
        LineRate_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        MEMORY2LIVE_ce0 = 1'b1;
    end else begin
        MEMORY2LIVE_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        OutPixelFmt_out_blk_n = OutPixelFmt_out_full_n;
    end else begin
        OutPixelFmt_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        OutPixelFmt_out_write = 1'b1;
    end else begin
        OutPixelFmt_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        StrideIn_out_blk_n = StrideIn_out_full_n;
    end else begin
        StrideIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        StrideIn_out_write = 1'b1;
    end else begin
        StrideIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        StrideOut_out_blk_n = StrideOut_out_full_n;
    end else begin
        StrideOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        StrideOut_out_write = 1'b1;
    end else begin
        StrideOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthIn_cast1_out_out_blk_n = WidthIn_cast1_out_out_full_n;
    end else begin
        WidthIn_cast1_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthIn_cast1_out_out_write = 1'b1;
    end else begin
        WidthIn_cast1_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthIn_cast_out_out_blk_n = WidthIn_cast_out_out_full_n;
    end else begin
        WidthIn_cast_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthIn_cast_out_out_write = 1'b1;
    end else begin
        WidthIn_cast_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthIn_out_blk_n = WidthIn_out_full_n;
    end else begin
        WidthIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthIn_out_write = 1'b1;
    end else begin
        WidthIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthOut_cast2_out_out_blk_n = WidthOut_cast2_out_out_full_n;
    end else begin
        WidthOut_cast2_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthOut_cast2_out_out_write = 1'b1;
    end else begin
        WidthOut_cast2_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthOut_cast_out_out_blk_n = WidthOut_cast_out_out_full_n;
    end else begin
        WidthOut_cast_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthOut_cast_out_out_write = 1'b1;
    end else begin
        WidthOut_cast_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthOut_out1_blk_n = WidthOut_out1_full_n;
    end else begin
        WidthOut_out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthOut_out1_write = 1'b1;
    end else begin
        WidthOut_out1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        WidthOut_out_blk_n = WidthOut_out_full_n;
    end else begin
        WidthOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        WidthOut_out_write = 1'b1;
    end else begin
        WidthOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bPassThruCsc_out_out_blk_n = bPassThruCsc_out_out_full_n;
    end else begin
        bPassThruCsc_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        bPassThruCsc_out_out_write = 1'b1;
    end else begin
        bPassThruCsc_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bPassThruHcrDown_out_out_blk_n = bPassThruHcrDown_out_out_full_n;
    end else begin
        bPassThruHcrDown_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        bPassThruHcrDown_out_out_write = 1'b1;
    end else begin
        bPassThruHcrDown_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bPassThruHcrUp_out_out_blk_n = bPassThruHcrUp_out_out_full_n;
    end else begin
        bPassThruHcrUp_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        bPassThruHcrUp_out_out_write = 1'b1;
    end else begin
        bPassThruHcrUp_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bPassThruVcrDown_out_out_blk_n = bPassThruVcrDown_out_out_full_n;
    end else begin
        bPassThruVcrDown_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        bPassThruVcrDown_out_out_write = 1'b1;
    end else begin
        bPassThruVcrDown_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bPassThruVcrUp_out_out_blk_n = bPassThruVcrUp_out_out_full_n;
    end else begin
        bPassThruVcrUp_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        bPassThruVcrUp_out_out_write = 1'b1;
    end else begin
        bPassThruVcrUp_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dstImgBuf0_out_blk_n = dstImgBuf0_out_full_n;
    end else begin
        dstImgBuf0_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        dstImgBuf0_out_write = 1'b1;
    end else begin
        dstImgBuf0_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dstImgBuf1_out_blk_n = dstImgBuf1_out_full_n;
    end else begin
        dstImgBuf1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        dstImgBuf1_out_write = 1'b1;
    end else begin
        dstImgBuf1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        mul_ln902_out_out_blk_n = mul_ln902_out_out_full_n;
    end else begin
        mul_ln902_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        mul_ln902_out_out_write = 1'b1;
    end else begin
        mul_ln902_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        srcImgBuf0_out_blk_n = srcImgBuf0_out_full_n;
    end else begin
        srcImgBuf0_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        srcImgBuf0_out_write = 1'b1;
    end else begin
        srcImgBuf0_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        srcImgBuf1_out_blk_n = srcImgBuf1_out_full_n;
    end else begin
        srcImgBuf1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        srcImgBuf1_out_write = 1'b1;
    end else begin
        srcImgBuf1_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ColorModeIn_out_out_din = ColorModeIn_reg_705;

assign HeightIn_out_din = HeightIn;

assign HeightOut_cast_out_out_din = empty_117_reg_680;

assign HeightOut_out_din = HeightOut;

assign InPixelFmt_out_din = InPixelFmt;

assign LineRate_out_din = LineRate;

assign MEMORY2LIVE_address0 = zext_ln835_fu_448_p1;

assign OutPixelFmt_out_din = OutPixelFmt;

assign StrideIn_out_din = StrideIn;

assign StrideOut_out_din = StrideOut;

assign WidthIn_cast1_out_out_din = empty_118_reg_685;

assign WidthIn_cast_out_out_din = empty_119_reg_690;

assign WidthIn_out_din = WidthIn;

assign WidthOut_cast2_out_out_din = empty_reg_670;

assign WidthOut_cast_out_out_din = empty_116_reg_675;

assign WidthOut_out1_din = WidthOut;

assign WidthOut_out_din = WidthOut;

assign and_ln835_1_fu_574_p2 = (trunc_ln835_3_fu_570_p1 & trunc_ln835_2_fu_560_p1);

assign and_ln835_fu_548_p2 = (trunc_ln835_fu_534_p1 & trunc_ln835_1_fu_544_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((1'b0 == ColorModeIn_out_out_full_n) | (1'b0 == WidthIn_cast_out_out_full_n) | (1'b0 == WidthIn_cast1_out_out_full_n) | (1'b0 == HeightOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast_out_out_full_n) | (1'b0 == WidthOut_cast2_out_out_full_n) | (1'b0 == OutPixelFmt_out_full_n) | (1'b0 == InPixelFmt_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_out1_full_n) | (1'b0 == WidthOut_out_full_n) | (1'b0 == LineRate_out_full_n) | (1'b0 == StrideOut_out_full_n) | (1'b0 == StrideIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (dstImgBuf1_out_full_n == 1'b0) | (dstImgBuf0_out_full_n == 1'b0) | (srcImgBuf1_out_full_n == 1'b0) | (srcImgBuf0_out_full_n == 1'b0) | (mul_ln902_out_out_full_n == 1'b0) | (bPassThruCsc_out_out_full_n == 1'b0) | (bPassThruVcrDown_out_out_full_n == 1'b0) | (bPassThruHcrDown_out_out_full_n == 1'b0) | (bPassThruHcrUp_out_out_full_n == 1'b0) | (bPassThruVcrUp_out_out_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign ap_return = BYTES_PER_PIXEL_q0;

assign bPassThruCsc_fu_586_p2 = (or_ln835_fu_580_p2 ^ 1'd1);

assign bPassThruCsc_out_out_din = bPassThruCsc_reg_735;

assign bPassThruHcrDown_fu_516_p2 = (trunc_ln833_1_fu_512_p1 ^ 1'd1);

assign bPassThruHcrDown_out_out_din = bPassThruHcrDown_reg_725;

assign bPassThruHcrUp_fu_487_p2 = (trunc_ln832_fu_483_p1 ^ 1'd1);

assign bPassThruHcrUp_out_out_din = bPassThruHcrUp_reg_720;

assign bPassThruVcrDown_fu_522_p2 = (trunc_ln833_fu_502_p1 ^ 1'd1);

assign bPassThruVcrDown_out_out_din = bPassThruVcrDown_reg_730;

assign bPassThruVcrUp_fu_471_p2 = (trunc_ln831_fu_467_p1 ^ 1'd1);

assign bPassThruVcrUp_out_out_din = bPassThruVcrUp_reg_715;

assign dstImgBuf0_out_din = dstImgBuf0;

assign dstImgBuf1_out_din = dstImgBuf1;

assign empty_116_fu_432_p1 = WidthOut[11:0];

assign empty_117_fu_436_p1 = HeightOut[11:0];

assign empty_118_fu_440_p0 = WidthIn;

assign empty_118_fu_440_p1 = empty_118_fu_440_p0[12:0];

assign empty_119_fu_444_p0 = WidthIn;

assign empty_119_fu_444_p1 = empty_119_fu_444_p0[3:0];

assign empty_fu_428_p1 = WidthOut[3:0];

assign lshr_ln831_fu_461_p2 = 32'd8912904 >> zext_ln831_fu_458_p1;

assign lshr_ln832_fu_477_p2 = 32'd281808908 >> zext_ln831_fu_458_p1;

assign lshr_ln833_1_fu_506_p2 = 32'd281808908 >> zext_ln833_fu_493_p1;

assign lshr_ln833_fu_496_p2 = 32'd8912904 >> zext_ln833_fu_493_p1;

assign lshr_ln835_1_fu_538_p2 = 32'd401438830 >> zext_ln833_fu_493_p1;

assign lshr_ln835_2_fu_554_p2 = 32'd401438830 >> zext_ln831_fu_458_p1;

assign lshr_ln835_3_fu_564_p2 = 32'd672302993 >> zext_ln833_fu_493_p1;

assign lshr_ln835_fu_528_p2 = 32'd672302993 >> zext_ln831_fu_458_p1;

assign mul_ln902_fu_595_p0 = mul_ln902_fu_595_p00;

assign mul_ln902_fu_595_p00 = BYTES_PER_PIXEL_load_reg_710;

assign mul_ln902_out_out_din = mul_ln902_reg_745;

assign or_ln835_fu_580_p2 = (and_ln835_fu_548_p2 | and_ln835_1_fu_574_p2);

assign srcImgBuf0_out_din = srcImgBuf0;

assign srcImgBuf1_out_din = srcImgBuf1;

assign start_out = real_start;

assign trunc_ln831_fu_467_p1 = lshr_ln831_fu_461_p2[0:0];

assign trunc_ln832_fu_483_p1 = lshr_ln832_fu_477_p2[0:0];

assign trunc_ln833_1_fu_512_p1 = lshr_ln833_1_fu_506_p2[0:0];

assign trunc_ln833_fu_502_p1 = lshr_ln833_fu_496_p2[0:0];

assign trunc_ln835_1_fu_544_p1 = lshr_ln835_1_fu_538_p2[0:0];

assign trunc_ln835_2_fu_560_p1 = lshr_ln835_2_fu_554_p2[0:0];

assign trunc_ln835_3_fu_570_p1 = lshr_ln835_3_fu_564_p2[0:0];

assign trunc_ln835_fu_534_p1 = lshr_ln835_fu_528_p2[0:0];

assign zext_ln831_fu_458_p1 = InPixelFmt;

assign zext_ln833_fu_493_p1 = OutPixelFmt;

assign zext_ln835_1_fu_454_p1 = OutPixelFmt;

assign zext_ln835_fu_448_p1 = InPixelFmt;

endmodule //bd_v_multi_scaler_0_0_v_scaler_top_Block_split10_proc52
