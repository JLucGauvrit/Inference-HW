// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_frmbuf_wr_0_0_AXIvideo2MultiPixStream3 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        img_din,
        img_full_n,
        img_write,
        s_axis_video_TDATA,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        p_read,
        p_read1,
        p_read2,
        HwReg_frm_buffer,
        HwReg_frm_buffer2,
        p_read3,
        p_read4,
        p_read5,
        Height_out_din,
        Height_out_full_n,
        Height_out_write,
        WidthIn_out_din,
        WidthIn_out_full_n,
        WidthIn_out_write,
        HwReg_frm_buffer_out_din,
        HwReg_frm_buffer_out_full_n,
        HwReg_frm_buffer_out_write,
        HwReg_frm_buffer2_out_din,
        HwReg_frm_buffer2_out_full_n,
        HwReg_frm_buffer2_out_write,
        WidthInBytes_out_din,
        WidthInBytes_out_full_n,
        WidthInBytes_out_write,
        stride_out_din,
        stride_out_full_n,
        stride_out_write,
        video_format_out_din,
        video_format_out_full_n,
        video_format_out_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_state8 = 9'd64;
parameter    ap_ST_fsm_state9 = 9'd128;
parameter    ap_ST_fsm_state10 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [47:0] img_din;
input   img_full_n;
output   img_write;
input  [47:0] s_axis_video_TDATA;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
input  [5:0] s_axis_video_TKEEP;
input  [5:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
input  [11:0] p_read;
input  [11:0] p_read1;
input  [2:0] p_read2;
input  [63:0] HwReg_frm_buffer;
input  [63:0] HwReg_frm_buffer2;
input  [14:0] p_read3;
input  [15:0] p_read4;
input  [5:0] p_read5;
output  [11:0] Height_out_din;
input   Height_out_full_n;
output   Height_out_write;
output  [3:0] WidthIn_out_din;
input   WidthIn_out_full_n;
output   WidthIn_out_write;
output  [63:0] HwReg_frm_buffer_out_din;
input   HwReg_frm_buffer_out_full_n;
output   HwReg_frm_buffer_out_write;
output  [63:0] HwReg_frm_buffer2_out_din;
input   HwReg_frm_buffer2_out_full_n;
output   HwReg_frm_buffer2_out_write;
output  [14:0] WidthInBytes_out_din;
input   WidthInBytes_out_full_n;
output   WidthInBytes_out_write;
output  [15:0] stride_out_din;
input   stride_out_full_n;
output   stride_out_write;
output  [5:0] video_format_out_din;
input   video_format_out_full_n;
output   video_format_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg img_write;
reg s_axis_video_TREADY;
reg Height_out_write;
reg WidthIn_out_write;
reg HwReg_frm_buffer_out_write;
reg HwReg_frm_buffer2_out_write;
reg WidthInBytes_out_write;
reg stride_out_write;
reg video_format_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    img_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln214_reg_837;
reg    s_axis_video_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] ap_phi_mux_sof_phi_fu_328_p4;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln214_fu_610_p2;
wire   [0:0] or_ln218_fu_615_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] ap_phi_mux_eol_2_phi_fu_511_p4;
reg    Height_out_blk_n;
reg    WidthIn_out_blk_n;
reg    HwReg_frm_buffer_out_blk_n;
reg    HwReg_frm_buffer2_out_blk_n;
reg    WidthInBytes_out_blk_n;
reg    stride_out_blk_n;
reg    video_format_out_blk_n;
reg   [10:0] j_reg_368;
reg   [0:0] eol_reg_379;
reg   [0:0] sof_3_reg_391;
reg   [0:0] axi_last_V_3_reg_401;
reg   [47:0] axi_data_V_3_reg_411;
reg   [47:0] axi_data_V_7_reg_422;
reg   [0:0] axi_last_V_9_reg_434;
reg    ap_block_state3;
reg    ap_block_state9;
wire    ap_CS_fsm_state2;
wire   [11:0] grp_reg_unsigned_short_s_fu_539_ap_return;
reg   [11:0] rows_reg_760;
wire   [11:0] grp_reg_unsigned_short_s_fu_545_ap_return;
reg   [11:0] cols_reg_766;
wire   [10:0] div_cast_i_i_fu_555_p4;
reg   [10:0] div_cast_i_i_reg_781;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln211_fu_564_p2;
reg   [0:0] icmp_ln211_reg_786;
wire   [0:0] cmp7524_i_i_fu_569_p2;
reg   [0:0] cmp7524_i_i_reg_797;
wire   [0:0] icmp_ln242_fu_575_p2;
reg   [0:0] icmp_ln242_reg_801;
wire   [0:0] icmp_ln242_1_fu_580_p2;
reg   [0:0] icmp_ln242_1_reg_808;
wire   [11:0] i_1_fu_590_p2;
reg   [11:0] i_1_reg_818;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln211_1_fu_599_p2;
wire   [10:0] j_1_fu_604_p2;
reg    ap_predicate_op154_read_state6;
reg    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] pix_val_V_5_11_fu_682_p3;
reg   [7:0] pix_val_V_5_11_reg_845;
wire   [7:0] pix_val_V_4_25_fu_696_p3;
reg   [7:0] pix_val_V_4_25_reg_850;
wire   [7:0] pix_val_V_3_27_fu_710_p3;
reg   [7:0] pix_val_V_3_27_reg_855;
wire   [7:0] pix_val_V_2_fu_717_p3;
reg   [7:0] pix_val_V_2_reg_860;
wire   [7:0] pix_val_V_1_24_fu_724_p3;
reg   [7:0] pix_val_V_1_24_reg_865;
wire   [7:0] pix_val_V_0_fu_731_p3;
reg   [7:0] pix_val_V_0_reg_870;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg   [47:0] axi_data_V_reg_300;
reg   [0:0] axi_last_V_reg_312;
reg   [0:0] sof_reg_324;
reg   [11:0] i_reg_335;
wire    ap_CS_fsm_state10;
reg   [0:0] axi_last_V_2_reg_346;
reg   [0:0] axi_last_V_5_reg_496;
reg   [47:0] axi_data_V_2_reg_357;
reg   [47:0] axi_data_V_5_reg_484;
reg   [0:0] ap_phi_mux_eol_phi_fu_383_p4;
reg   [0:0] ap_phi_mux_sof_3_phi_fu_394_p4;
reg   [0:0] ap_phi_mux_axi_last_V_3_phi_fu_404_p4;
reg   [47:0] ap_phi_mux_axi_data_V_3_phi_fu_414_p4;
reg   [47:0] ap_phi_mux_axi_data_V_7_phi_fu_426_p4;
wire   [47:0] ap_phi_reg_pp1_iter0_axi_data_V_7_reg_422;
wire   [0:0] ap_phi_reg_pp1_iter0_axi_last_V_9_reg_434;
reg   [47:0] ap_phi_mux_axi_data_V_5_ph_phi_fu_450_p4;
reg   [47:0] axi_data_V_5_ph_reg_447;
wire    ap_CS_fsm_state8;
reg   [0:0] ap_phi_mux_axi_last_V_5_ph_phi_fu_462_p4;
reg   [0:0] axi_last_V_5_ph_reg_459;
reg   [0:0] ap_phi_mux_eol_2_ph_phi_fu_475_p4;
reg   [0:0] eol_2_ph_reg_471;
reg   [0:0] eol_2_reg_508;
reg   [0:0] sof_2_fu_168;
reg    ap_block_state1;
reg    ap_block_pp1_stage0_01001;
wire   [7:0] pix_val_V_3_28_fu_645_p4;
wire   [7:0] pix_val_V_5_fu_665_p4;
wire   [7:0] pix_val_V_5_10_fu_675_p3;
wire   [7:0] pix_val_V_4_26_fu_655_p4;
wire   [7:0] pix_val_V_4_24_fu_689_p3;
wire   [7:0] pix_val_V_0_20_fu_621_p4;
wire   [7:0] pix_val_V_3_fu_703_p3;
wire   [7:0] pix_val_V_2_11_fu_635_p4;
wire   [7:0] pix_val_V_1_25_fu_631_p1;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_240;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

bd_v_frmbuf_wr_0_0_reg_unsigned_short_s grp_reg_unsigned_short_s_fu_539(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(p_read),
    .ap_return(grp_reg_unsigned_short_s_fu_539_ap_return)
);

bd_v_frmbuf_wr_0_0_reg_unsigned_short_s grp_reg_unsigned_short_s_fu_545(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(p_read1),
    .ap_return(grp_reg_unsigned_short_s_fu_545_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln211_1_fu_599_p2 == 1'd1) | (icmp_ln211_reg_786 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        axi_data_V_2_reg_357 <= axi_data_V_5_reg_484;
    end else if (((icmp_ln211_fu_564_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        axi_data_V_2_reg_357 <= axi_data_V_reg_300;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        axi_data_V_3_reg_411 <= axi_data_V_2_reg_357;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        axi_data_V_3_reg_411 <= axi_data_V_7_reg_422;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        axi_data_V_5_ph_reg_447 <= axi_data_V_3_reg_411;
    end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd1) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        axi_data_V_5_ph_reg_447 <= axi_data_V_2_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        axi_data_V_5_reg_484 <= ap_phi_mux_axi_data_V_5_ph_phi_fu_450_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0))) begin
        axi_data_V_5_reg_484 <= s_axis_video_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_240)) begin
        if (((or_ln218_fu_615_p2 == 1'd1) & (icmp_ln214_fu_610_p2 == 1'd0))) begin
            axi_data_V_7_reg_422 <= ap_phi_mux_axi_data_V_3_phi_fu_414_p4;
        end else if (((or_ln218_fu_615_p2 == 1'd0) & (icmp_ln214_fu_610_p2 == 1'd0))) begin
            axi_data_V_7_reg_422 <= s_axis_video_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            axi_data_V_7_reg_422 <= ap_phi_reg_pp1_iter0_axi_data_V_7_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        axi_last_V_2_reg_346 <= axi_last_V_5_reg_496;
    end else if (((icmp_ln211_fu_564_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        axi_last_V_2_reg_346 <= axi_last_V_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        axi_last_V_3_reg_401 <= axi_last_V_2_reg_346;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        axi_last_V_3_reg_401 <= axi_last_V_9_reg_434;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        axi_last_V_5_ph_reg_459 <= eol_reg_379;
    end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd1) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        axi_last_V_5_ph_reg_459 <= axi_last_V_2_reg_346;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        axi_last_V_5_reg_496 <= ap_phi_mux_axi_last_V_5_ph_phi_fu_462_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0))) begin
        axi_last_V_5_reg_496 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_240)) begin
        if (((or_ln218_fu_615_p2 == 1'd1) & (icmp_ln214_fu_610_p2 == 1'd0))) begin
            axi_last_V_9_reg_434 <= ap_phi_mux_axi_last_V_3_phi_fu_404_p4;
        end else if (((or_ln218_fu_615_p2 == 1'd0) & (icmp_ln214_fu_610_p2 == 1'd0))) begin
            axi_last_V_9_reg_434 <= s_axis_video_TLAST;
        end else if ((1'b1 == 1'b1)) begin
            axi_last_V_9_reg_434 <= ap_phi_reg_pp1_iter0_axi_last_V_9_reg_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        eol_2_ph_reg_471 <= eol_reg_379;
    end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd1) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        eol_2_ph_reg_471 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        eol_2_reg_508 <= ap_phi_mux_eol_2_ph_phi_fu_475_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0))) begin
        eol_2_reg_508 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        eol_reg_379 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        eol_reg_379 <= axi_last_V_9_reg_434;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_335 <= i_1_reg_818;
    end else if (((icmp_ln211_fu_564_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_reg_335 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_reg_368 <= 11'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_fu_610_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        j_reg_368 <= j_1_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_564_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        sof_2_fu_168 <= 1'd1;
    end else if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        sof_2_fu_168 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sof_3_reg_391 <= sof_2_fu_168;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        sof_3_reg_391 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sof_reg_324 <= 1'd0;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_324 == 1'd0))) begin
        sof_reg_324 <= s_axis_video_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_324 == 1'd0))) begin
        axi_data_V_reg_300 <= s_axis_video_TDATA;
        axi_last_V_reg_312 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_564_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        cmp7524_i_i_reg_797 <= cmp7524_i_i_fu_569_p2;
        icmp_ln242_1_reg_808 <= icmp_ln242_1_fu_580_p2;
        icmp_ln242_reg_801 <= icmp_ln242_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cols_reg_766 <= grp_reg_unsigned_short_s_fu_545_ap_return;
        rows_reg_760 <= grp_reg_unsigned_short_s_fu_539_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        div_cast_i_i_reg_781 <= {{cols_reg_766[11:1]}};
        icmp_ln211_reg_786 <= icmp_ln211_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_1_reg_818 <= i_1_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln214_reg_837 <= icmp_ln214_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_fu_610_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        pix_val_V_0_reg_870 <= pix_val_V_0_fu_731_p3;
        pix_val_V_1_24_reg_865 <= pix_val_V_1_24_fu_724_p3;
        pix_val_V_2_reg_860 <= pix_val_V_2_fu_717_p3;
        pix_val_V_3_27_reg_855 <= pix_val_V_3_27_fu_710_p3;
        pix_val_V_4_25_reg_850 <= pix_val_V_4_25_fu_696_p3;
        pix_val_V_5_11_reg_845 <= pix_val_V_5_11_fu_682_p3;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_blk_n = Height_out_full_n;
    end else begin
        Height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_write = 1'b1;
    end else begin
        Height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_frm_buffer2_out_blk_n = HwReg_frm_buffer2_out_full_n;
    end else begin
        HwReg_frm_buffer2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_frm_buffer2_out_write = 1'b1;
    end else begin
        HwReg_frm_buffer2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_frm_buffer_out_blk_n = HwReg_frm_buffer_out_full_n;
    end else begin
        HwReg_frm_buffer_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_frm_buffer_out_write = 1'b1;
    end else begin
        HwReg_frm_buffer_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthInBytes_out_blk_n = WidthInBytes_out_full_n;
    end else begin
        WidthInBytes_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthInBytes_out_write = 1'b1;
    end else begin
        WidthInBytes_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_blk_n = WidthIn_out_full_n;
    end else begin
        WidthIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_write = 1'b1;
    end else begin
        WidthIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln214_fu_610_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln211_1_fu_599_p2 == 1'd1) | (icmp_ln211_reg_786 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_axi_data_V_3_phi_fu_414_p4 = axi_data_V_7_reg_422;
    end else begin
        ap_phi_mux_axi_data_V_3_phi_fu_414_p4 = axi_data_V_3_reg_411;
    end
end

always @ (*) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_axi_data_V_5_ph_phi_fu_450_p4 = axi_data_V_3_reg_411;
    end else begin
        ap_phi_mux_axi_data_V_5_ph_phi_fu_450_p4 = axi_data_V_5_ph_reg_447;
    end
end

always @ (*) begin
    if ((icmp_ln214_fu_610_p2 == 1'd0)) begin
        if ((or_ln218_fu_615_p2 == 1'd1)) begin
            ap_phi_mux_axi_data_V_7_phi_fu_426_p4 = ap_phi_mux_axi_data_V_3_phi_fu_414_p4;
        end else if ((or_ln218_fu_615_p2 == 1'd0)) begin
            ap_phi_mux_axi_data_V_7_phi_fu_426_p4 = s_axis_video_TDATA;
        end else begin
            ap_phi_mux_axi_data_V_7_phi_fu_426_p4 = ap_phi_reg_pp1_iter0_axi_data_V_7_reg_422;
        end
    end else begin
        ap_phi_mux_axi_data_V_7_phi_fu_426_p4 = ap_phi_reg_pp1_iter0_axi_data_V_7_reg_422;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_axi_last_V_3_phi_fu_404_p4 = axi_last_V_9_reg_434;
    end else begin
        ap_phi_mux_axi_last_V_3_phi_fu_404_p4 = axi_last_V_3_reg_401;
    end
end

always @ (*) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_axi_last_V_5_ph_phi_fu_462_p4 = eol_reg_379;
    end else begin
        ap_phi_mux_axi_last_V_5_ph_phi_fu_462_p4 = axi_last_V_5_ph_reg_459;
    end
end

always @ (*) begin
    if (((cmp7524_i_i_reg_797 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_phi_mux_eol_2_ph_phi_fu_475_p4 = eol_reg_379;
    end else begin
        ap_phi_mux_eol_2_ph_phi_fu_475_p4 = eol_2_ph_reg_471;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_eol_phi_fu_383_p4 = axi_last_V_9_reg_434;
    end else begin
        ap_phi_mux_eol_phi_fu_383_p4 = eol_reg_379;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_sof_3_phi_fu_394_p4 = 1'd0;
    end else begin
        ap_phi_mux_sof_3_phi_fu_394_p4 = sof_3_reg_391;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        img_blk_n = img_full_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln214_reg_837 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        img_write = 1'b1;
    end else begin
        img_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln211_1_fu_599_p2 == 1'd1) | (icmp_ln211_reg_786 == 1'd1)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (or_ln218_fu_615_p2 == 1'd0) & (icmp_ln214_fu_610_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (sof_reg_324 == 1'd0)))) begin
        s_axis_video_TDATA_blk_n = s_axis_video_TVALID;
    end else begin
        s_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op154_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0)) | (~((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_324 == 1'd0)))) begin
        s_axis_video_TREADY = 1'b1;
    end else begin
        s_axis_video_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_out_blk_n = stride_out_full_n;
    end else begin
        stride_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        stride_out_write = 1'b1;
    end else begin
        stride_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        video_format_out_blk_n = video_format_out_full_n;
    end else begin
        video_format_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        video_format_out_write = 1'b1;
    end else begin
        video_format_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_324 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_sof_phi_fu_328_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((icmp_ln211_1_fu_599_p2 == 1'd1) | (icmp_ln211_reg_786 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln211_1_fu_599_p2 == 1'd0) & (cmp7524_i_i_reg_797 == 1'd0) & (icmp_ln211_reg_786 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln214_fu_610_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln214_fu_610_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_2_reg_508 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (ap_phi_mux_eol_2_phi_fu_511_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Height_out_din = p_read;

assign HwReg_frm_buffer2_out_din = HwReg_frm_buffer2;

assign HwReg_frm_buffer_out_din = HwReg_frm_buffer;

assign WidthInBytes_out_din = p_read3;

assign WidthIn_out_din = p_read1[3:0];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((img_full_n == 1'b0) & (icmp_ln214_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op154_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((img_full_n == 1'b0) & (icmp_ln214_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op154_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((img_full_n == 1'b0) & (icmp_ln214_reg_837 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op154_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((video_format_out_full_n == 1'b0) | (stride_out_full_n == 1'b0) | (1'b0 == WidthInBytes_out_full_n) | (1'b0 == HwReg_frm_buffer2_out_full_n) | (1'b0 == HwReg_frm_buffer_out_full_n) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((s_axis_video_TVALID == 1'b0) & (sof_reg_324 == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp1_stage0_iter0 = ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op154_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((img_full_n == 1'b0) & (icmp_ln214_reg_837 == 1'd0));
end

always @ (*) begin
    ap_block_state9 = ((s_axis_video_TVALID == 1'b0) & (eol_2_reg_508 == 1'd0));
end

always @ (*) begin
    ap_condition_240 = ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_eol_2_phi_fu_511_p4 = eol_2_reg_508;

assign ap_phi_mux_sof_phi_fu_328_p4 = sof_reg_324;

assign ap_phi_reg_pp1_iter0_axi_data_V_7_reg_422 = 'bx;

assign ap_phi_reg_pp1_iter0_axi_last_V_9_reg_434 = 'bx;

always @ (*) begin
    ap_predicate_op154_read_state6 = ((or_ln218_fu_615_p2 == 1'd0) & (icmp_ln214_fu_610_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cmp7524_i_i_fu_569_p2 = ((div_cast_i_i_fu_555_p4 == 11'd0) ? 1'b1 : 1'b0);

assign div_cast_i_i_fu_555_p4 = {{cols_reg_766[11:1]}};

assign i_1_fu_590_p2 = (i_reg_335 + 12'd1);

assign icmp_ln211_1_fu_599_p2 = ((i_reg_335 == rows_reg_760) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_564_p2 = ((rows_reg_760 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln214_fu_610_p2 = ((j_reg_368 == div_cast_i_i_reg_781) ? 1'b1 : 1'b0);

assign icmp_ln242_1_fu_580_p2 = ((p_read2 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_575_p2 = ((p_read2 == 3'd1) ? 1'b1 : 1'b0);

assign img_din = {{{{{{pix_val_V_5_11_reg_845}, {pix_val_V_4_25_reg_850}}, {pix_val_V_3_27_reg_855}}, {pix_val_V_2_reg_860}}, {pix_val_V_1_24_reg_865}}, {pix_val_V_0_reg_870}};

assign j_1_fu_604_p2 = (j_reg_368 + 11'd1);

assign or_ln218_fu_615_p2 = (ap_phi_mux_sof_3_phi_fu_394_p4 | ap_phi_mux_eol_phi_fu_383_p4);

assign pix_val_V_0_20_fu_621_p4 = {{ap_phi_mux_axi_data_V_7_phi_fu_426_p4[23:16]}};

assign pix_val_V_0_fu_731_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_0_20_fu_621_p4 : pix_val_V_1_25_fu_631_p1);

assign pix_val_V_1_24_fu_724_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_1_25_fu_631_p1 : pix_val_V_2_11_fu_635_p4);

assign pix_val_V_1_25_fu_631_p1 = ap_phi_mux_axi_data_V_7_phi_fu_426_p4[7:0];

assign pix_val_V_2_11_fu_635_p4 = {{ap_phi_mux_axi_data_V_7_phi_fu_426_p4[15:8]}};

assign pix_val_V_2_fu_717_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_2_11_fu_635_p4 : pix_val_V_0_20_fu_621_p4);

assign pix_val_V_3_27_fu_710_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_3_28_fu_645_p4 : pix_val_V_3_fu_703_p3);

assign pix_val_V_3_28_fu_645_p4 = {{ap_phi_mux_axi_data_V_7_phi_fu_426_p4[47:40]}};

assign pix_val_V_3_fu_703_p3 = ((icmp_ln242_reg_801[0:0] == 1'b1) ? pix_val_V_4_26_fu_655_p4 : pix_val_V_0_20_fu_621_p4);

assign pix_val_V_4_24_fu_689_p3 = ((icmp_ln242_reg_801[0:0] == 1'b1) ? pix_val_V_5_fu_665_p4 : pix_val_V_4_26_fu_655_p4);

assign pix_val_V_4_25_fu_696_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_4_26_fu_655_p4 : pix_val_V_4_24_fu_689_p3);

assign pix_val_V_4_26_fu_655_p4 = {{ap_phi_mux_axi_data_V_7_phi_fu_426_p4[31:24]}};

assign pix_val_V_5_10_fu_675_p3 = ((icmp_ln242_reg_801[0:0] == 1'b1) ? pix_val_V_3_28_fu_645_p4 : pix_val_V_5_fu_665_p4);

assign pix_val_V_5_11_fu_682_p3 = ((icmp_ln242_1_reg_808[0:0] == 1'b1) ? pix_val_V_5_fu_665_p4 : pix_val_V_5_10_fu_675_p3);

assign pix_val_V_5_fu_665_p4 = {{ap_phi_mux_axi_data_V_7_phi_fu_426_p4[39:32]}};

assign start_out = real_start;

assign stride_out_din = p_read4;

assign video_format_out_din = p_read5;

endmodule //bd_v_frmbuf_wr_0_0_AXIvideo2MultiPixStream3
