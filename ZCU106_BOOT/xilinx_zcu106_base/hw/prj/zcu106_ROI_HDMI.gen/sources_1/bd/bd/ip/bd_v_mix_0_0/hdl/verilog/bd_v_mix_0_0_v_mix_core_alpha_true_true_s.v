// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_mix_0_0_v_mix_core_alpha_true_true_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        outLayer2_dout,
        outLayer2_empty_n,
        outLayer2_read,
        srcLayer3x_dout,
        srcLayer3x_empty_n,
        srcLayer3x_read,
        srcLayer3Alphax_dout,
        srcLayer3Alphax_empty_n,
        srcLayer3Alphax_read,
        outLayer3_din,
        outLayer3_full_n,
        outLayer3_write,
        p_read_dout,
        p_read_empty_n,
        p_read_read,
        p_read1_dout,
        p_read1_empty_n,
        p_read1_read,
        hwReg_layerEnable_dout,
        hwReg_layerEnable_empty_n,
        hwReg_layerEnable_read,
        p_read2_dout,
        p_read2_empty_n,
        p_read2_read,
        hwReg_layerStartX6_dout,
        hwReg_layerStartX6_empty_n,
        hwReg_layerStartX6_read,
        hwReg_layerStartY9_dout,
        hwReg_layerStartY9_empty_n,
        hwReg_layerStartY9_read,
        hwReg_layerWidth12_dout,
        hwReg_layerWidth12_empty_n,
        hwReg_layerWidth12_read,
        hwReg_layerHeight15_dout,
        hwReg_layerHeight15_empty_n,
        hwReg_layerHeight15_read,
        hwReg_layerScaleFactor18_dout,
        hwReg_layerScaleFactor18_empty_n,
        hwReg_layerScaleFactor18_read,
        p_read_out_din,
        p_read_out_full_n,
        p_read_out_write,
        p_read1_out_din,
        p_read1_out_full_n,
        p_read1_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state13 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] outLayer2_dout;
input   outLayer2_empty_n;
output   outLayer2_read;
input  [47:0] srcLayer3x_dout;
input   srcLayer3x_empty_n;
output   srcLayer3x_read;
input  [15:0] srcLayer3Alphax_dout;
input   srcLayer3Alphax_empty_n;
output   srcLayer3Alphax_read;
output  [47:0] outLayer3_din;
input   outLayer3_full_n;
output   outLayer3_write;
input  [11:0] p_read_dout;
input   p_read_empty_n;
output   p_read_read;
input  [11:0] p_read1_dout;
input   p_read1_empty_n;
output   p_read1_read;
input  [3:0] hwReg_layerEnable_dout;
input   hwReg_layerEnable_empty_n;
output   hwReg_layerEnable_read;
input  [11:0] p_read2_dout;
input   p_read2_empty_n;
output   p_read2_read;
input  [15:0] hwReg_layerStartX6_dout;
input   hwReg_layerStartX6_empty_n;
output   hwReg_layerStartX6_read;
input  [15:0] hwReg_layerStartY9_dout;
input   hwReg_layerStartY9_empty_n;
output   hwReg_layerStartY9_read;
input  [15:0] hwReg_layerWidth12_dout;
input   hwReg_layerWidth12_empty_n;
output   hwReg_layerWidth12_read;
input  [15:0] hwReg_layerHeight15_dout;
input   hwReg_layerHeight15_empty_n;
output   hwReg_layerHeight15_read;
input  [7:0] hwReg_layerScaleFactor18_dout;
input   hwReg_layerScaleFactor18_empty_n;
output   hwReg_layerScaleFactor18_read;
output  [11:0] p_read_out_din;
input   p_read_out_full_n;
output   p_read_out_write;
output  [11:0] p_read1_out_din;
input   p_read1_out_full_n;
output   p_read1_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg outLayer2_read;
reg srcLayer3x_read;
reg srcLayer3Alphax_read;
reg outLayer3_write;
reg p_read_read;
reg p_read1_read;
reg hwReg_layerEnable_read;
reg p_read2_read;
reg hwReg_layerStartX6_read;
reg hwReg_layerStartY9_read;
reg hwReg_layerWidth12_read;
reg hwReg_layerHeight15_read;
reg hwReg_layerScaleFactor18_read;
reg p_read_out_write;
reg p_read1_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    outLayer2_blk_n;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln319_reg_1102;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter3_reg;
reg    srcLayer3x_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] and_ln333_3_reg_1106;
reg    srcLayer3Alphax_blk_n;
reg    outLayer3_blk_n;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter7_reg;
reg    p_read_blk_n;
reg    p_read1_blk_n;
reg    hwReg_layerEnable_blk_n;
reg    p_read2_blk_n;
reg    hwReg_layerStartX6_blk_n;
reg    hwReg_layerStartY9_blk_n;
reg    hwReg_layerWidth12_blk_n;
reg    hwReg_layerHeight15_blk_n;
reg    hwReg_layerScaleFactor18_blk_n;
reg    p_read_out_blk_n;
reg    p_read1_out_blk_n;
reg   [10:0] x_reg_270;
reg   [11:0] height_reg_1042;
reg   [15:0] layerStartY_reg_1047;
wire   [16:0] add60_i_i_fu_337_p2;
reg   [16:0] add60_i_i_reg_1052;
reg   [14:0] div64_cast_i_i_reg_1057;
reg   [15:0] div70_cast_i_i_reg_1062;
reg   [0:0] tmp_reg_1067;
reg   [10:0] lshr_ln317_cast_i_reg_1072;
wire   [16:0] zext_ln347_fu_395_p1;
reg   [16:0] zext_ln347_reg_1077;
wire    ap_CS_fsm_state2;
wire   [11:0] y_10_fu_399_p2;
reg   [11:0] y_10_reg_1083;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln317_fu_413_p2;
wire   [0:0] and_ln333_fu_434_p2;
reg   [0:0] and_ln333_reg_1092;
wire   [10:0] x_10_fu_440_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op109_read_state5;
reg    ap_predicate_op116_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state8_pp0_stage0_iter4;
wire    ap_block_state9_pp0_stage0_iter5;
wire    ap_block_state10_pp0_stage0_iter6;
wire    ap_block_state11_pp0_stage0_iter7;
reg    ap_block_state12_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln319_fu_454_p2;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter1_reg;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter2_reg;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter4_reg;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter5_reg;
reg   [0:0] icmp_ln319_reg_1102_pp0_iter6_reg;
wire   [0:0] and_ln333_3_fu_486_p2;
wire   [7:0] a_val_0_fu_545_p1;
reg   [7:0] lyrpix_val_V_5_load_reg_1120;
reg   [7:0] lyrpix_val_V_5_load_reg_1120_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_5_load_reg_1120_pp0_iter4_reg;
reg   [7:0] lyrpix_val_V_4_load_reg_1125;
reg   [7:0] lyrpix_val_V_4_load_reg_1125_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_4_load_reg_1125_pp0_iter4_reg;
reg   [7:0] lyrpix_val_V_3_load_reg_1130;
reg   [7:0] lyrpix_val_V_3_load_reg_1130_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_3_load_reg_1130_pp0_iter4_reg;
reg   [7:0] lyrpix_val_V_2_load_reg_1135;
reg   [7:0] lyrpix_val_V_2_load_reg_1135_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_2_load_reg_1135_pp0_iter4_reg;
reg   [7:0] lyrpix_val_V_0_load_reg_1140;
reg   [7:0] lyrpix_val_V_0_load_reg_1140_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_0_load_reg_1140_pp0_iter4_reg;
reg   [7:0] lyrpix_val_V_1_load_reg_1145;
reg   [7:0] lyrpix_val_V_1_load_reg_1145_pp0_iter3_reg;
reg   [7:0] lyrpix_val_V_1_load_reg_1145_pp0_iter4_reg;
wire   [7:0] srcpix_val_V_0_fu_651_p1;
reg   [7:0] srcpix_val_V_0_reg_1160;
reg   [7:0] srcpix_val_V_0_reg_1160_pp0_iter5_reg;
reg   [7:0] srcpix_val_V_0_reg_1160_pp0_iter6_reg;
reg   [7:0] srcpix_val_V_5_i_reg_1166;
reg   [7:0] srcpix_val_V_5_i_reg_1166_pp0_iter5_reg;
reg   [7:0] srcpix_val_V_5_i_reg_1166_pp0_iter6_reg;
reg   [7:0] tmp_6_i_reg_1172;
reg   [7:0] tmp_6_i_reg_1172_pp0_iter5_reg;
reg   [7:0] tmp_6_i_reg_1172_pp0_iter6_reg;
reg   [7:0] tmp_8_i_reg_1178;
reg   [7:0] tmp_8_i_reg_1178_pp0_iter5_reg;
reg   [7:0] tmp_8_i_reg_1178_pp0_iter6_reg;
reg   [7:0] tmp_10_i_reg_1184;
reg   [7:0] tmp_10_i_reg_1184_pp0_iter5_reg;
reg   [7:0] tmp_10_i_reg_1184_pp0_iter6_reg;
reg   [7:0] tmp_13_i_reg_1190;
reg   [7:0] tmp_13_i_reg_1190_pp0_iter5_reg;
reg   [7:0] tmp_13_i_reg_1190_pp0_iter6_reg;
wire   [15:0] zext_ln1345_fu_730_p1;
wire   [15:0] zext_ln1345_1_fu_791_p1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
wire   [11:0] grp_reg_unsigned_short_s_fu_323_ap_return;
reg   [11:0] y_reg_259;
wire    ap_CS_fsm_state13;
wire   [7:0] ap_phi_reg_pp0_iter0_a_val_0_0_i_i_reg_281;
reg   [7:0] ap_phi_reg_pp0_iter1_a_val_0_0_i_i_reg_281;
reg   [7:0] ap_phi_reg_pp0_iter2_a_val_0_0_i_i_reg_281;
wire   [7:0] ap_phi_reg_pp0_iter0_a_val_1_0_i_i_reg_292;
reg   [7:0] ap_phi_reg_pp0_iter1_a_val_1_0_i_i_reg_292;
reg   [7:0] ap_phi_reg_pp0_iter2_a_val_1_0_i_i_reg_292;
reg   [7:0] lyrpix_val_V_5_fu_140;
reg   [7:0] lyrpix_val_V_4_fu_144;
reg   [7:0] lyrpix_val_V_3_fu_148;
reg   [7:0] lyrpix_val_V_2_fu_152;
reg   [7:0] lyrpix_val_V_0_fu_156;
wire   [7:0] lyrpix_val_V_0_1_fu_491_p1;
reg   [7:0] lyrpix_val_V_1_fu_160;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] hwReg_layerScaleFactor18_readcast_fu_303_p1;
wire   [15:0] hwReg_layerScaleFactor18_readcast9_fu_313_p1;
wire   [15:0] shl_ln299_fu_307_p2;
wire   [16:0] layerHeight_cast_i_i_fu_333_p1;
wire   [16:0] layerStartY_cast_i_i_fu_329_p1;
wire   [15:0] shl_ln300_fu_317_p2;
wire   [16:0] layerWidth_cast_i_i_fu_357_p1;
wire   [16:0] layerStartX_cast_i_i_fu_343_p1;
wire   [16:0] add69_i_i_fu_361_p2;
wire   [15:0] zext_ln317_fu_405_p1;
wire   [0:0] ult_fu_418_p2;
wire   [16:0] zext_ln317_1_fu_409_p1;
wire   [0:0] notrhs_i_i_fu_429_p2;
wire   [0:0] rev_fu_423_p2;
wire   [14:0] zext_ln319_fu_446_p1;
wire   [0:0] icmp_ln333_fu_459_p2;
wire   [15:0] zext_ln319_1_fu_450_p1;
wire   [0:0] xor_ln333_fu_464_p2;
wire   [0:0] icmp_ln333_1_fu_470_p2;
wire   [0:0] and_ln333_1_fu_475_p2;
wire   [0:0] and_ln333_2_fu_481_p2;
wire   [0:0] icmp_ln346_fu_607_p2;
wire   [8:0] zext_ln301_fu_613_p1;
wire   [8:0] select_ln301_fu_617_p3;
wire   [0:0] icmp_ln346_1_fu_629_p2;
wire   [8:0] zext_ln301_1_fu_635_p1;
wire   [8:0] select_ln301_11_fu_639_p3;
wire   [8:0] zext_ln215_fu_705_p1;
wire   [8:0] zext_ln215_1_fu_708_p1;
wire  signed [8:0] sub_ln1347_fu_711_p2;
wire   [16:0] grp_fu_940_p2;
wire   [8:0] tmp_i_fu_721_p4;
wire   [8:0] zext_ln215_2_fu_734_p1;
wire   [8:0] zext_ln215_3_fu_737_p1;
wire  signed [8:0] sub_ln1347_1_fu_740_p2;
wire   [8:0] zext_ln215_4_fu_750_p1;
wire   [8:0] zext_ln215_5_fu_753_p1;
wire  signed [8:0] sub_ln1347_2_fu_756_p2;
wire   [8:0] zext_ln215_6_fu_766_p1;
wire   [8:0] zext_ln215_7_fu_769_p1;
wire  signed [8:0] sub_ln1347_3_fu_772_p2;
wire   [16:0] grp_fu_946_p2;
wire   [8:0] tmp_11_i_fu_782_p4;
wire   [8:0] zext_ln215_8_fu_795_p1;
wire   [8:0] zext_ln215_9_fu_798_p1;
wire  signed [8:0] sub_ln1347_4_fu_801_p2;
wire   [8:0] zext_ln215_10_fu_811_p1;
wire   [8:0] zext_ln215_11_fu_814_p1;
wire  signed [8:0] sub_ln1347_5_fu_817_p2;
wire  signed [15:0] grp_fu_952_p3;
wire  signed [15:0] grp_fu_961_p3;
wire  signed [15:0] grp_fu_970_p3;
wire  signed [15:0] grp_fu_979_p3;
wire  signed [15:0] grp_fu_988_p3;
wire  signed [15:0] grp_fu_997_p3;
wire   [7:0] trunc_ln213_5_i_fu_914_p4;
wire   [7:0] trunc_ln213_4_i_fu_905_p4;
wire   [7:0] trunc_ln213_3_i_fu_896_p4;
wire   [7:0] trunc_ln213_2_i_fu_887_p4;
wire   [7:0] trunc_ln213_1_i_fu_878_p4;
wire   [7:0] trunc_ln_i_fu_869_p4;
wire   [11:0] grp_fu_940_p0;
wire   [8:0] grp_fu_940_p1;
wire   [11:0] grp_fu_946_p0;
wire   [8:0] grp_fu_946_p1;
wire   [8:0] grp_fu_952_p0;
wire   [15:0] grp_fu_952_p2;
wire   [8:0] grp_fu_961_p0;
wire   [15:0] grp_fu_961_p2;
wire   [8:0] grp_fu_970_p0;
wire   [15:0] grp_fu_970_p2;
wire   [8:0] grp_fu_979_p0;
wire   [15:0] grp_fu_979_p2;
wire   [8:0] grp_fu_988_p0;
wire   [15:0] grp_fu_988_p2;
wire   [8:0] grp_fu_997_p0;
wire   [15:0] grp_fu_997_p2;
reg    grp_fu_940_ce;
reg    grp_fu_946_ce;
reg    grp_fu_952_ce;
reg    grp_fu_961_ce;
reg    grp_fu_970_ce;
reg    grp_fu_979_ce;
reg    grp_fu_988_ce;
reg    grp_fu_997_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [16:0] grp_fu_940_p10;
wire   [16:0] grp_fu_946_p10;
reg    ap_condition_228;
reg    ap_condition_403;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

bd_v_mix_0_0_reg_unsigned_short_s grp_reg_unsigned_short_s_fu_323(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(p_read2_dout),
    .ap_return(grp_reg_unsigned_short_s_fu_323_ap_return)
);

bd_v_mix_0_0_mul_mul_12ns_9ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_mul_12ns_9ns_17_4_1_U339(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_940_p0),
    .din1(grp_fu_940_p1),
    .ce(grp_fu_940_ce),
    .dout(grp_fu_940_p2)
);

bd_v_mix_0_0_mul_mul_12ns_9ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_mul_12ns_9ns_17_4_1_U340(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_946_p0),
    .din1(grp_fu_946_p1),
    .ce(grp_fu_946_ce),
    .dout(grp_fu_946_p2)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U341(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_952_p0),
    .din1(sub_ln1347_fu_711_p2),
    .din2(grp_fu_952_p2),
    .ce(grp_fu_952_ce),
    .dout(grp_fu_952_p3)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U342(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_961_p0),
    .din1(sub_ln1347_1_fu_740_p2),
    .din2(grp_fu_961_p2),
    .ce(grp_fu_961_ce),
    .dout(grp_fu_961_p3)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U343(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_970_p0),
    .din1(sub_ln1347_2_fu_756_p2),
    .din2(grp_fu_970_p2),
    .ce(grp_fu_970_ce),
    .dout(grp_fu_970_p3)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U344(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_979_p0),
    .din1(sub_ln1347_3_fu_772_p2),
    .din2(grp_fu_979_p2),
    .ce(grp_fu_979_ce),
    .dout(grp_fu_979_p3)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U345(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(sub_ln1347_4_fu_801_p2),
    .din2(grp_fu_988_p2),
    .ce(grp_fu_988_ce),
    .dout(grp_fu_988_p3)
);

bd_v_mix_0_0_mac_muladd_9ns_9s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_9ns_9s_16ns_16_4_1_U346(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_997_p0),
    .din1(sub_ln1347_5_fu_817_p2),
    .din2(grp_fu_997_p2),
    .ce(grp_fu_997_ce),
    .dout(grp_fu_997_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if (((icmp_ln319_fu_454_p2 == 1'd0) & (1'd0 == and_ln333_3_fu_486_p2))) begin
            ap_phi_reg_pp0_iter1_a_val_0_0_i_i_reg_281 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_a_val_0_0_i_i_reg_281 <= ap_phi_reg_pp0_iter0_a_val_0_0_i_i_reg_281;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_228)) begin
        if (((icmp_ln319_fu_454_p2 == 1'd0) & (1'd0 == and_ln333_3_fu_486_p2))) begin
            ap_phi_reg_pp0_iter1_a_val_1_0_i_i_reg_292 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_a_val_1_0_i_i_reg_292 <= ap_phi_reg_pp0_iter0_a_val_1_0_i_i_reg_292;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_403)) begin
        if (((1'd1 == and_ln333_3_reg_1106) & (icmp_ln319_reg_1102 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_a_val_0_0_i_i_reg_281 <= a_val_0_fu_545_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_a_val_0_0_i_i_reg_281 <= ap_phi_reg_pp0_iter1_a_val_0_0_i_i_reg_281;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_403)) begin
        if (((1'd1 == and_ln333_3_reg_1106) & (icmp_ln319_reg_1102 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_a_val_1_0_i_i_reg_292 <= {{srcLayer3Alphax_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_a_val_1_0_i_i_reg_292 <= ap_phi_reg_pp0_iter1_a_val_1_0_i_i_reg_292;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_reg_270 <= x_10_fu_440_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd0))) begin
        x_reg_270 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        y_reg_259 <= y_10_reg_1083;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_259 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add60_i_i_reg_1052 <= add60_i_i_fu_337_p2;
        div64_cast_i_i_reg_1057 <= {{hwReg_layerStartX6_dout[15:1]}};
        div70_cast_i_i_reg_1062 <= {{add69_i_i_fu_361_p2[16:1]}};
        height_reg_1042 <= p_read1_dout;
        layerStartY_reg_1047 <= hwReg_layerStartY9_dout;
        lshr_ln317_cast_i_reg_1072 <= {{p_read_dout[11:1]}};
        tmp_reg_1067 <= hwReg_layerEnable_dout[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_fu_454_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln333_3_reg_1106 <= and_ln333_3_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd0))) begin
        and_ln333_reg_1092 <= and_ln333_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln319_reg_1102 <= icmp_ln319_fu_454_p2;
        icmp_ln319_reg_1102_pp0_iter1_reg <= icmp_ln319_reg_1102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln319_reg_1102_pp0_iter2_reg <= icmp_ln319_reg_1102_pp0_iter1_reg;
        icmp_ln319_reg_1102_pp0_iter3_reg <= icmp_ln319_reg_1102_pp0_iter2_reg;
        icmp_ln319_reg_1102_pp0_iter4_reg <= icmp_ln319_reg_1102_pp0_iter3_reg;
        icmp_ln319_reg_1102_pp0_iter5_reg <= icmp_ln319_reg_1102_pp0_iter4_reg;
        icmp_ln319_reg_1102_pp0_iter6_reg <= icmp_ln319_reg_1102_pp0_iter5_reg;
        icmp_ln319_reg_1102_pp0_iter7_reg <= icmp_ln319_reg_1102_pp0_iter6_reg;
        lyrpix_val_V_0_load_reg_1140_pp0_iter3_reg <= lyrpix_val_V_0_load_reg_1140;
        lyrpix_val_V_0_load_reg_1140_pp0_iter4_reg <= lyrpix_val_V_0_load_reg_1140_pp0_iter3_reg;
        lyrpix_val_V_1_load_reg_1145_pp0_iter3_reg <= lyrpix_val_V_1_load_reg_1145;
        lyrpix_val_V_1_load_reg_1145_pp0_iter4_reg <= lyrpix_val_V_1_load_reg_1145_pp0_iter3_reg;
        lyrpix_val_V_2_load_reg_1135_pp0_iter3_reg <= lyrpix_val_V_2_load_reg_1135;
        lyrpix_val_V_2_load_reg_1135_pp0_iter4_reg <= lyrpix_val_V_2_load_reg_1135_pp0_iter3_reg;
        lyrpix_val_V_3_load_reg_1130_pp0_iter3_reg <= lyrpix_val_V_3_load_reg_1130;
        lyrpix_val_V_3_load_reg_1130_pp0_iter4_reg <= lyrpix_val_V_3_load_reg_1130_pp0_iter3_reg;
        lyrpix_val_V_4_load_reg_1125_pp0_iter3_reg <= lyrpix_val_V_4_load_reg_1125;
        lyrpix_val_V_4_load_reg_1125_pp0_iter4_reg <= lyrpix_val_V_4_load_reg_1125_pp0_iter3_reg;
        lyrpix_val_V_5_load_reg_1120_pp0_iter3_reg <= lyrpix_val_V_5_load_reg_1120;
        lyrpix_val_V_5_load_reg_1120_pp0_iter4_reg <= lyrpix_val_V_5_load_reg_1120_pp0_iter3_reg;
        srcpix_val_V_0_reg_1160_pp0_iter5_reg <= srcpix_val_V_0_reg_1160;
        srcpix_val_V_0_reg_1160_pp0_iter6_reg <= srcpix_val_V_0_reg_1160_pp0_iter5_reg;
        srcpix_val_V_5_i_reg_1166_pp0_iter5_reg <= srcpix_val_V_5_i_reg_1166;
        srcpix_val_V_5_i_reg_1166_pp0_iter6_reg <= srcpix_val_V_5_i_reg_1166_pp0_iter5_reg;
        tmp_10_i_reg_1184_pp0_iter5_reg <= tmp_10_i_reg_1184;
        tmp_10_i_reg_1184_pp0_iter6_reg <= tmp_10_i_reg_1184_pp0_iter5_reg;
        tmp_13_i_reg_1190_pp0_iter5_reg <= tmp_13_i_reg_1190;
        tmp_13_i_reg_1190_pp0_iter6_reg <= tmp_13_i_reg_1190_pp0_iter5_reg;
        tmp_6_i_reg_1172_pp0_iter5_reg <= tmp_6_i_reg_1172;
        tmp_6_i_reg_1172_pp0_iter6_reg <= tmp_6_i_reg_1172_pp0_iter5_reg;
        tmp_8_i_reg_1178_pp0_iter5_reg <= tmp_8_i_reg_1178;
        tmp_8_i_reg_1178_pp0_iter6_reg <= tmp_8_i_reg_1178_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln333_3_reg_1106) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln319_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lyrpix_val_V_0_fu_156 <= lyrpix_val_V_0_1_fu_491_p1;
        lyrpix_val_V_1_fu_160 <= {{srcLayer3x_dout[15:8]}};
        lyrpix_val_V_2_fu_152 <= {{srcLayer3x_dout[23:16]}};
        lyrpix_val_V_3_fu_148 <= {{srcLayer3x_dout[31:24]}};
        lyrpix_val_V_4_fu_144 <= {{srcLayer3x_dout[39:32]}};
        lyrpix_val_V_5_fu_140 <= {{srcLayer3x_dout[47:40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_reg_1102_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lyrpix_val_V_0_load_reg_1140 <= lyrpix_val_V_0_fu_156;
        lyrpix_val_V_1_load_reg_1145 <= lyrpix_val_V_1_fu_160;
        lyrpix_val_V_2_load_reg_1135 <= lyrpix_val_V_2_fu_152;
        lyrpix_val_V_3_load_reg_1130 <= lyrpix_val_V_3_fu_148;
        lyrpix_val_V_4_load_reg_1125 <= lyrpix_val_V_4_fu_144;
        lyrpix_val_V_5_load_reg_1120 <= lyrpix_val_V_5_fu_140;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcpix_val_V_0_reg_1160 <= srcpix_val_V_0_fu_651_p1;
        srcpix_val_V_5_i_reg_1166 <= {{outLayer2_dout[47:40]}};
        tmp_10_i_reg_1184 <= {{outLayer2_dout[31:24]}};
        tmp_13_i_reg_1190 <= {{outLayer2_dout[39:32]}};
        tmp_6_i_reg_1172 <= {{outLayer2_dout[15:8]}};
        tmp_8_i_reg_1178 <= {{outLayer2_dout[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        y_10_reg_1083 <= y_10_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        zext_ln347_reg_1077[11 : 0] <= zext_ln347_fu_395_p1[11 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln319_fu_454_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_940_ce = 1'b1;
    end else begin
        grp_fu_940_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_946_ce = 1'b1;
    end else begin
        grp_fu_946_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_952_ce = 1'b1;
    end else begin
        grp_fu_952_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_961_ce = 1'b1;
    end else begin
        grp_fu_961_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_970_ce = 1'b1;
    end else begin
        grp_fu_970_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_979_ce = 1'b1;
    end else begin
        grp_fu_979_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_988_ce = 1'b1;
    end else begin
        grp_fu_988_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_997_ce = 1'b1;
    end else begin
        grp_fu_997_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerEnable_blk_n = hwReg_layerEnable_empty_n;
    end else begin
        hwReg_layerEnable_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerEnable_read = 1'b1;
    end else begin
        hwReg_layerEnable_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerHeight15_blk_n = hwReg_layerHeight15_empty_n;
    end else begin
        hwReg_layerHeight15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerHeight15_read = 1'b1;
    end else begin
        hwReg_layerHeight15_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerScaleFactor18_blk_n = hwReg_layerScaleFactor18_empty_n;
    end else begin
        hwReg_layerScaleFactor18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerScaleFactor18_read = 1'b1;
    end else begin
        hwReg_layerScaleFactor18_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerStartX6_blk_n = hwReg_layerStartX6_empty_n;
    end else begin
        hwReg_layerStartX6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerStartX6_read = 1'b1;
    end else begin
        hwReg_layerStartX6_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerStartY9_blk_n = hwReg_layerStartY9_empty_n;
    end else begin
        hwReg_layerStartY9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerStartY9_read = 1'b1;
    end else begin
        hwReg_layerStartY9_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerWidth12_blk_n = hwReg_layerWidth12_empty_n;
    end else begin
        hwReg_layerWidth12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_layerWidth12_read = 1'b1;
    end else begin
        hwReg_layerWidth12_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        outLayer2_blk_n = outLayer2_empty_n;
    end else begin
        outLayer2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        outLayer2_read = 1'b1;
    end else begin
        outLayer2_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outLayer3_blk_n = outLayer3_full_n;
    end else begin
        outLayer3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outLayer3_write = 1'b1;
    end else begin
        outLayer3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_blk_n = p_read1_empty_n;
    end else begin
        p_read1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_out_blk_n = p_read1_out_full_n;
    end else begin
        p_read1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_out_write = 1'b1;
    end else begin
        p_read1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_read = 1'b1;
    end else begin
        p_read1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_blk_n = p_read2_empty_n;
    end else begin
        p_read2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_read = 1'b1;
    end else begin
        p_read2_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_blk_n = p_read_empty_n;
    end else begin
        p_read_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_out_blk_n = p_read_out_full_n;
    end else begin
        p_read_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_out_write = 1'b1;
    end else begin
        p_read_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_read = 1'b1;
    end else begin
        p_read_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln333_3_reg_1106) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln319_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        srcLayer3Alphax_blk_n = srcLayer3Alphax_empty_n;
    end else begin
        srcLayer3Alphax_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op116_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcLayer3Alphax_read = 1'b1;
    end else begin
        srcLayer3Alphax_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln333_3_reg_1106) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln319_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        srcLayer3x_blk_n = srcLayer3x_empty_n;
    end else begin
        srcLayer3x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op109_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        srcLayer3x_read = 1'b1;
    end else begin
        srcLayer3x_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln317_fu_413_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln319_fu_454_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln319_fu_454_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_val_0_fu_545_p1 = srcLayer3Alphax_dout[7:0];

assign add60_i_i_fu_337_p2 = (layerHeight_cast_i_i_fu_333_p1 + layerStartY_cast_i_i_fu_329_p1);

assign add69_i_i_fu_361_p2 = (layerWidth_cast_i_i_fu_357_p1 + layerStartX_cast_i_i_fu_343_p1);

assign and_ln333_1_fu_475_p2 = (xor_ln333_fu_464_p2 & icmp_ln333_1_fu_470_p2);

assign and_ln333_2_fu_481_p2 = (and_ln333_reg_1092 & and_ln333_1_fu_475_p2);

assign and_ln333_3_fu_486_p2 = (tmp_reg_1067 & and_ln333_2_fu_481_p2);

assign and_ln333_fu_434_p2 = (rev_fu_423_p2 & notrhs_i_i_fu_429_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((outLayer3_full_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((outLayer2_empty_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((srcLayer3Alphax_empty_n == 1'b0) & (ap_predicate_op116_read_state5 == 1'b1)) | ((srcLayer3x_empty_n == 1'b0) & (ap_predicate_op109_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((outLayer3_full_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((outLayer2_empty_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((srcLayer3Alphax_empty_n == 1'b0) & (ap_predicate_op116_read_state5 == 1'b1)) | ((srcLayer3x_empty_n == 1'b0) & (ap_predicate_op109_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((outLayer3_full_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((outLayer2_empty_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((srcLayer3Alphax_empty_n == 1'b0) & (ap_predicate_op116_read_state5 == 1'b1)) | ((srcLayer3x_empty_n == 1'b0) & (ap_predicate_op109_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_layerScaleFactor18_empty_n == 1'b0) | (hwReg_layerHeight15_empty_n == 1'b0) | (hwReg_layerWidth12_empty_n == 1'b0) | (hwReg_layerStartY9_empty_n == 1'b0) | (hwReg_layerStartX6_empty_n == 1'b0) | (p_read2_empty_n == 1'b0) | (hwReg_layerEnable_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter8 = ((outLayer3_full_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter7_reg == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((srcLayer3Alphax_empty_n == 1'b0) & (ap_predicate_op116_read_state5 == 1'b1)) | ((srcLayer3x_empty_n == 1'b0) & (ap_predicate_op109_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter4 = ((outLayer2_empty_n == 1'b0) & (icmp_ln319_reg_1102_pp0_iter3_reg == 1'd0));
end

assign ap_block_state9_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_228 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_403 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_a_val_0_0_i_i_reg_281 = 'bx;

assign ap_phi_reg_pp0_iter0_a_val_1_0_i_i_reg_292 = 'bx;

always @ (*) begin
    ap_predicate_op109_read_state5 = ((1'd1 == and_ln333_3_reg_1106) & (icmp_ln319_reg_1102 == 1'd0));
end

always @ (*) begin
    ap_predicate_op116_read_state5 = ((1'd1 == and_ln333_3_reg_1106) & (icmp_ln319_reg_1102 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_940_p0 = zext_ln347_reg_1077;

assign grp_fu_940_p1 = grp_fu_940_p10;

assign grp_fu_940_p10 = select_ln301_fu_617_p3;

assign grp_fu_946_p0 = zext_ln347_reg_1077;

assign grp_fu_946_p1 = grp_fu_946_p10;

assign grp_fu_946_p10 = select_ln301_11_fu_639_p3;

assign grp_fu_952_p0 = zext_ln1345_fu_730_p1;

assign grp_fu_952_p2 = {{srcpix_val_V_0_reg_1160_pp0_iter6_reg}, {8'd0}};

assign grp_fu_961_p0 = zext_ln1345_fu_730_p1;

assign grp_fu_961_p2 = {{tmp_6_i_reg_1172_pp0_iter6_reg}, {8'd0}};

assign grp_fu_970_p0 = zext_ln1345_fu_730_p1;

assign grp_fu_970_p2 = {{tmp_8_i_reg_1178_pp0_iter6_reg}, {8'd0}};

assign grp_fu_979_p0 = zext_ln1345_1_fu_791_p1;

assign grp_fu_979_p2 = {{tmp_10_i_reg_1184_pp0_iter6_reg}, {8'd0}};

assign grp_fu_988_p0 = zext_ln1345_1_fu_791_p1;

assign grp_fu_988_p2 = {{tmp_13_i_reg_1190_pp0_iter6_reg}, {8'd0}};

assign grp_fu_997_p0 = zext_ln1345_1_fu_791_p1;

assign grp_fu_997_p2 = {{srcpix_val_V_5_i_reg_1166_pp0_iter6_reg}, {8'd0}};

assign hwReg_layerScaleFactor18_readcast9_fu_313_p1 = hwReg_layerScaleFactor18_dout;

assign hwReg_layerScaleFactor18_readcast_fu_303_p1 = hwReg_layerScaleFactor18_dout;

assign icmp_ln317_fu_413_p2 = ((y_reg_259 == height_reg_1042) ? 1'b1 : 1'b0);

assign icmp_ln319_fu_454_p2 = ((x_reg_270 == lshr_ln317_cast_i_reg_1072) ? 1'b1 : 1'b0);

assign icmp_ln333_1_fu_470_p2 = ((zext_ln319_1_fu_450_p1 < div70_cast_i_i_reg_1062) ? 1'b1 : 1'b0);

assign icmp_ln333_fu_459_p2 = ((zext_ln319_fu_446_p1 < div64_cast_i_i_reg_1057) ? 1'b1 : 1'b0);

assign icmp_ln346_1_fu_629_p2 = ((ap_phi_reg_pp0_iter2_a_val_1_0_i_i_reg_292 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln346_fu_607_p2 = ((ap_phi_reg_pp0_iter2_a_val_0_0_i_i_reg_281 == 8'd255) ? 1'b1 : 1'b0);

assign layerHeight_cast_i_i_fu_333_p1 = shl_ln299_fu_307_p2;

assign layerStartX_cast_i_i_fu_343_p1 = hwReg_layerStartX6_dout;

assign layerStartY_cast_i_i_fu_329_p1 = hwReg_layerStartY9_dout;

assign layerWidth_cast_i_i_fu_357_p1 = shl_ln300_fu_317_p2;

assign lyrpix_val_V_0_1_fu_491_p1 = srcLayer3x_dout[7:0];

assign notrhs_i_i_fu_429_p2 = ((zext_ln317_1_fu_409_p1 < add60_i_i_reg_1052) ? 1'b1 : 1'b0);

assign outLayer3_din = {{{{{{trunc_ln213_5_i_fu_914_p4}, {trunc_ln213_4_i_fu_905_p4}}, {trunc_ln213_3_i_fu_896_p4}}, {trunc_ln213_2_i_fu_887_p4}}, {trunc_ln213_1_i_fu_878_p4}}, {trunc_ln_i_fu_869_p4}};

assign p_read1_out_din = p_read1_dout;

assign p_read_out_din = p_read_dout;

assign rev_fu_423_p2 = (ult_fu_418_p2 ^ 1'd1);

assign select_ln301_11_fu_639_p3 = ((icmp_ln346_1_fu_629_p2[0:0] == 1'b1) ? 9'd256 : zext_ln301_1_fu_635_p1);

assign select_ln301_fu_617_p3 = ((icmp_ln346_fu_607_p2[0:0] == 1'b1) ? 9'd256 : zext_ln301_fu_613_p1);

assign shl_ln299_fu_307_p2 = hwReg_layerHeight15_dout << hwReg_layerScaleFactor18_readcast_fu_303_p1;

assign shl_ln300_fu_317_p2 = hwReg_layerWidth12_dout << hwReg_layerScaleFactor18_readcast9_fu_313_p1;

assign srcpix_val_V_0_fu_651_p1 = outLayer2_dout[7:0];

assign start_out = real_start;

assign sub_ln1347_1_fu_740_p2 = (zext_ln215_2_fu_734_p1 - zext_ln215_3_fu_737_p1);

assign sub_ln1347_2_fu_756_p2 = (zext_ln215_4_fu_750_p1 - zext_ln215_5_fu_753_p1);

assign sub_ln1347_3_fu_772_p2 = (zext_ln215_6_fu_766_p1 - zext_ln215_7_fu_769_p1);

assign sub_ln1347_4_fu_801_p2 = (zext_ln215_8_fu_795_p1 - zext_ln215_9_fu_798_p1);

assign sub_ln1347_5_fu_817_p2 = (zext_ln215_10_fu_811_p1 - zext_ln215_11_fu_814_p1);

assign sub_ln1347_fu_711_p2 = (zext_ln215_fu_705_p1 - zext_ln215_1_fu_708_p1);

assign tmp_11_i_fu_782_p4 = {{grp_fu_946_p2[16:8]}};

assign tmp_i_fu_721_p4 = {{grp_fu_940_p2[16:8]}};

assign trunc_ln213_1_i_fu_878_p4 = {{grp_fu_961_p3[15:8]}};

assign trunc_ln213_2_i_fu_887_p4 = {{grp_fu_970_p3[15:8]}};

assign trunc_ln213_3_i_fu_896_p4 = {{grp_fu_979_p3[15:8]}};

assign trunc_ln213_4_i_fu_905_p4 = {{grp_fu_988_p3[15:8]}};

assign trunc_ln213_5_i_fu_914_p4 = {{grp_fu_997_p3[15:8]}};

assign trunc_ln_i_fu_869_p4 = {{grp_fu_952_p3[15:8]}};

assign ult_fu_418_p2 = ((zext_ln317_fu_405_p1 < layerStartY_reg_1047) ? 1'b1 : 1'b0);

assign x_10_fu_440_p2 = (x_reg_270 + 11'd1);

assign xor_ln333_fu_464_p2 = (icmp_ln333_fu_459_p2 ^ 1'd1);

assign y_10_fu_399_p2 = (y_reg_259 + 12'd1);

assign zext_ln1345_1_fu_791_p1 = tmp_11_i_fu_782_p4;

assign zext_ln1345_fu_730_p1 = tmp_i_fu_721_p4;

assign zext_ln215_10_fu_811_p1 = lyrpix_val_V_5_load_reg_1120_pp0_iter4_reg;

assign zext_ln215_11_fu_814_p1 = srcpix_val_V_5_i_reg_1166;

assign zext_ln215_1_fu_708_p1 = srcpix_val_V_0_reg_1160;

assign zext_ln215_2_fu_734_p1 = lyrpix_val_V_1_load_reg_1145_pp0_iter4_reg;

assign zext_ln215_3_fu_737_p1 = tmp_6_i_reg_1172;

assign zext_ln215_4_fu_750_p1 = lyrpix_val_V_2_load_reg_1135_pp0_iter4_reg;

assign zext_ln215_5_fu_753_p1 = tmp_8_i_reg_1178;

assign zext_ln215_6_fu_766_p1 = lyrpix_val_V_3_load_reg_1130_pp0_iter4_reg;

assign zext_ln215_7_fu_769_p1 = tmp_10_i_reg_1184;

assign zext_ln215_8_fu_795_p1 = lyrpix_val_V_4_load_reg_1125_pp0_iter4_reg;

assign zext_ln215_9_fu_798_p1 = tmp_13_i_reg_1190;

assign zext_ln215_fu_705_p1 = lyrpix_val_V_0_load_reg_1140_pp0_iter4_reg;

assign zext_ln301_1_fu_635_p1 = ap_phi_reg_pp0_iter2_a_val_1_0_i_i_reg_292;

assign zext_ln301_fu_613_p1 = ap_phi_reg_pp0_iter2_a_val_0_0_i_i_reg_281;

assign zext_ln317_1_fu_409_p1 = y_reg_259;

assign zext_ln317_fu_405_p1 = y_reg_259;

assign zext_ln319_1_fu_450_p1 = x_reg_270;

assign zext_ln319_fu_446_p1 = x_reg_270;

assign zext_ln347_fu_395_p1 = grp_reg_unsigned_short_s_fu_323_ap_return;

always @ (posedge ap_clk) begin
    zext_ln347_reg_1077[16:12] <= 5'b00000;
end

endmodule //bd_v_mix_0_0_v_mix_core_alpha_true_true_s
