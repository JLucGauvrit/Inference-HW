// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_mix_0_0_v_mix_420_to_422_true_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcImg_dout,
        srcImg_empty_n,
        srcImg_read,
        outImg_din,
        outImg_full_n,
        outImg_write,
        HwReg_layerHeight17_load_loc_dout,
        HwReg_layerHeight17_load_loc_empty_n,
        HwReg_layerHeight17_load_loc_read,
        layer2WidthInBytes_loc_dout,
        layer2WidthInBytes_loc_empty_n,
        layer2WidthInBytes_loc_read,
        p_read2_dout,
        p_read2_empty_n,
        p_read2_read,
        HwReg_layerHeight17_load_loc_out_din,
        HwReg_layerHeight17_load_loc_out_full_n,
        HwReg_layerHeight17_load_loc_out_write,
        layer2WidthInBytes_loc_out_din,
        layer2WidthInBytes_loc_out_full_n,
        layer2WidthInBytes_loc_out_write,
        p_read2_out_din,
        p_read2_out_full_n,
        p_read2_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] srcImg_dout;
input   srcImg_empty_n;
output   srcImg_read;
output  [47:0] outImg_din;
input   outImg_full_n;
output   outImg_write;
input  [15:0] HwReg_layerHeight17_load_loc_dout;
input   HwReg_layerHeight17_load_loc_empty_n;
output   HwReg_layerHeight17_load_loc_read;
input  [15:0] layer2WidthInBytes_loc_dout;
input   layer2WidthInBytes_loc_empty_n;
output   layer2WidthInBytes_loc_read;
input  [0:0] p_read2_dout;
input   p_read2_empty_n;
output   p_read2_read;
output  [15:0] HwReg_layerHeight17_load_loc_out_din;
input   HwReg_layerHeight17_load_loc_out_full_n;
output   HwReg_layerHeight17_load_loc_out_write;
output  [15:0] layer2WidthInBytes_loc_out_din;
input   layer2WidthInBytes_loc_out_full_n;
output   layer2WidthInBytes_loc_out_write;
output  [0:0] p_read2_out_din;
input   p_read2_out_full_n;
output   p_read2_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcImg_read;
reg outImg_write;
reg HwReg_layerHeight17_load_loc_read;
reg layer2WidthInBytes_loc_read;
reg p_read2_read;
reg HwReg_layerHeight17_load_loc_out_write;
reg layer2WidthInBytes_loc_out_write;
reg p_read2_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    srcImg_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln291_reg_883;
reg   [0:0] cmp22_i_i_reg_863;
reg    outImg_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] tmp_reg_874;
reg    HwReg_layerHeight17_load_loc_blk_n;
reg    layer2WidthInBytes_loc_blk_n;
reg    p_read2_blk_n;
reg    HwReg_layerHeight17_load_loc_out_blk_n;
reg    layer2WidthInBytes_loc_out_blk_n;
reg    p_read2_out_blk_n;
reg   [14:0] x_reg_296;
reg   [14:0] x_reg_296_pp0_iter1_reg;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op79_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] HwReg_layerHeight17_load_loc_read_reg_758;
reg   [0:0] p_read_reg_764;
reg   [14:0] loopWidth_reg_769;
wire   [15:0] loopHeight_fu_336_p2;
reg   [15:0] loopHeight_reg_775;
wire    ap_CS_fsm_state2;
wire   [0:0] and_ln289_fu_347_p2;
reg   [0:0] and_ln289_reg_780;
wire   [0:0] cmp16462_i_i_fu_352_p2;
reg   [0:0] cmp16462_i_i_reg_840;
wire   [14:0] add_ln289_fu_357_p2;
reg   [14:0] add_ln289_reg_844;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln289_2_fu_367_p2;
wire   [0:0] empty_fu_372_p1;
reg   [0:0] empty_reg_853;
wire   [0:0] cmp22_i_i_fu_382_p2;
wire   [0:0] cmp74_i_i_fu_387_p2;
reg   [0:0] cmp74_i_i_reg_867;
wire   [14:0] add_ln291_fu_401_p2;
reg   [14:0] add_ln291_reg_878;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln291_fu_407_p2;
reg   [0:0] icmp_ln291_reg_883_pp0_iter1_reg;
reg   [0:0] icmp_ln291_reg_883_pp0_iter2_reg;
wire   [63:0] idxprom5_i154_i_i_fu_416_p1;
reg   [63:0] idxprom5_i154_i_i_reg_887;
reg   [63:0] idxprom5_i154_i_i_reg_887_pp0_iter1_reg;
reg   [10:0] linebuf_y_val_V_0_addr_reg_892;
reg   [10:0] linebuf_y_val_V_0_addr_reg_892_pp0_iter1_reg;
reg   [10:0] linebuf_c_val_V_0_addr_reg_898;
reg   [10:0] linebuf_c_val_V_0_addr_reg_898_pp0_iter1_reg;
wire   [15:0] linebuf_y_val_V_0_q1;
reg   [15:0] linebuf_y_val_V_0_load_reg_909;
wire   [7:0] pixbuf_c_val_V_2_0_11_fu_483_p1;
reg   [7:0] pixbuf_c_val_V_2_0_11_reg_914;
wire   [7:0] pixbuf_c_val_V_2_1_14_fu_487_p4;
reg   [7:0] pixbuf_c_val_V_2_1_14_reg_919;
wire   [7:0] pixbuf_c_val_V_2_1_fu_497_p3;
reg   [7:0] pixbuf_c_val_V_2_1_reg_924;
wire   [7:0] pixbuf_c_val_V_2_0_12_fu_504_p3;
reg   [7:0] pixbuf_c_val_V_2_0_12_reg_930;
reg   [7:0] PixBufVal_val_V_0_load_2_reg_941;
reg   [7:0] pixbuf_c_val_V_2_1_10_load_1_reg_947;
wire   [7:0] trunc_ln674_fu_655_p1;
reg   [7:0] trunc_ln674_reg_953;
reg   [7:0] p_Result_1_1_i_i_reg_958;
wire   [7:0] outpix_val_V_load_6_i_i_fu_704_p3;
reg   [7:0] outpix_val_V_load_6_i_i_reg_963;
wire   [7:0] outpix_val_V_load_9_i_i_fu_739_p3;
reg   [7:0] outpix_val_V_load_9_i_i_reg_968;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state6;
wire   [10:0] linebuf_y_val_V_0_address0;
reg    linebuf_y_val_V_0_ce0;
reg    linebuf_y_val_V_0_we0;
wire   [10:0] linebuf_y_val_V_0_address1;
reg    linebuf_y_val_V_0_ce1;
wire   [10:0] linebuf_y_val_V_1_address0;
reg    linebuf_y_val_V_1_ce0;
reg    linebuf_y_val_V_1_we0;
wire   [15:0] linebuf_y_val_V_1_d0;
wire   [10:0] linebuf_y_val_V_1_address1;
reg    linebuf_y_val_V_1_ce1;
wire   [15:0] linebuf_y_val_V_1_q1;
wire   [10:0] linebuf_c_val_V_0_address0;
reg    linebuf_c_val_V_0_ce0;
reg    linebuf_c_val_V_0_we0;
wire   [15:0] linebuf_c_val_V_0_d0;
wire   [10:0] linebuf_c_val_V_0_address1;
reg    linebuf_c_val_V_0_ce1;
wire   [15:0] linebuf_c_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_1_address0;
reg    linebuf_c_val_V_1_ce0;
reg    linebuf_c_val_V_1_we0;
wire   [15:0] linebuf_c_val_V_1_d0;
wire   [10:0] linebuf_c_val_V_1_address1;
reg    linebuf_c_val_V_1_ce1;
wire   [15:0] linebuf_c_val_V_1_q1;
reg   [14:0] y_reg_285;
wire    ap_CS_fsm_state9;
reg   [14:0] ap_phi_mux_x_phi_fu_300_p4;
reg   [7:0] ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_311_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_308;
wire   [7:0] ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_308;
reg   [7:0] ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_308;
reg   [7:0] ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_320_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_317;
wire   [7:0] ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_317;
reg   [7:0] ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_317;
wire   [63:0] zext_ln291_fu_545_p1;
reg   [7:0] mpix_y_val_V_0_fu_120;
wire   [7:0] mpix_y_val_V_0_6_fu_423_p1;
reg   [7:0] mpix_y_val_V_1_6_fu_124;
reg   [7:0] pixbuf_c_val_V_2_0_7_fu_128;
reg   [7:0] pixbuf_c_val_V_2_1_9_fu_132;
reg   [7:0] PixBufVal_val_V_0_fu_136;
wire   [7:0] pixbuf_c_val_V_1_0_2_fu_511_p1;
reg   [7:0] pixbuf_c_val_V_2_1_10_fu_140;
reg   [7:0] PixBufVal_val_V_0_4_fu_144;
wire   [7:0] select_ln359_4_fu_593_p3;
reg   [7:0] pixbuf_c_val_V_2_1_11_fu_148;
wire   [7:0] select_ln359_fu_587_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] p_Result_2_1_i_i_fu_571_p3;
wire   [0:0] icmp_ln289_fu_341_p2;
wire   [15:0] zext_ln289_fu_363_p1;
wire   [15:0] out_y_fu_376_p2;
wire   [10:0] empty_143_fu_412_p1;
wire   [7:0] pixbuf_c_val_V_2_1_13_fu_614_p3;
wire   [7:0] pixbuf_c_val_V_2_0_fu_608_p3;
wire   [8:0] zext_ln215_fu_675_p1;
wire   [8:0] add_ln1346_fu_682_p2;
wire   [8:0] zext_ln215_11_fu_678_p1;
wire   [8:0] add_ln1346_9_fu_688_p2;
wire   [7:0] trunc_ln_fu_694_p4;
wire   [8:0] zext_ln215_12_fu_710_p1;
wire   [8:0] add_ln1346_10_fu_717_p2;
wire   [8:0] zext_ln215_13_fu_713_p1;
wire   [8:0] add_ln1346_11_fu_723_p2;
wire   [7:0] trunc_ln213_7_fu_729_p4;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op71_load_state4;
reg    ap_enable_operation_71;
reg    ap_enable_state4_pp0_iter0_stage0;
reg    ap_predicate_op91_load_state5;
reg    ap_enable_operation_91;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_116;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_73;
reg    ap_enable_operation_92;
reg    ap_predicate_op123_store_state6;
reg    ap_enable_operation_123;
reg    ap_enable_operation_75;
reg    ap_enable_operation_97;
reg    ap_predicate_op131_store_state6;
reg    ap_enable_operation_131;
reg    ap_enable_operation_119;
reg    ap_enable_operation_114;
reg    ap_enable_operation_140;
reg    ap_enable_state7_pp0_iter3_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_420;
reg    ap_condition_314;
reg    ap_condition_329;
reg    ap_condition_208;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

bd_v_mix_0_0_v_mix_420_to_422_true_15_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_0_address0),
    .ce0(linebuf_y_val_V_0_ce0),
    .we0(linebuf_y_val_V_0_we0),
    .d0(p_Result_2_1_i_i_fu_571_p3),
    .address1(linebuf_y_val_V_0_address1),
    .ce1(linebuf_y_val_V_0_ce1),
    .q1(linebuf_y_val_V_0_q1)
);

bd_v_mix_0_0_v_mix_420_to_422_true_15_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_1_address0),
    .ce0(linebuf_y_val_V_1_ce0),
    .we0(linebuf_y_val_V_1_we0),
    .d0(linebuf_y_val_V_1_d0),
    .address1(linebuf_y_val_V_1_address1),
    .ce1(linebuf_y_val_V_1_ce1),
    .q1(linebuf_y_val_V_1_q1)
);

bd_v_mix_0_0_v_mix_420_to_422_true_15_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_0_address0),
    .ce0(linebuf_c_val_V_0_ce0),
    .we0(linebuf_c_val_V_0_we0),
    .d0(linebuf_c_val_V_0_d0),
    .address1(linebuf_c_val_V_0_address1),
    .ce1(linebuf_c_val_V_0_ce1),
    .q1(linebuf_c_val_V_0_q1)
);

bd_v_mix_0_0_v_mix_420_to_422_true_15_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_1_address0),
    .ce0(linebuf_c_val_V_1_ce0),
    .we0(linebuf_c_val_V_1_we0),
    .d0(linebuf_c_val_V_1_d0),
    .address1(linebuf_c_val_V_1_address1),
    .ce1(linebuf_c_val_V_1_ce1),
    .q1(linebuf_c_val_V_1_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & ((1'd0 == and_ln289_reg_780) | (icmp_ln289_2_fu_367_p2 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0) & (cmp16462_i_i_reg_840 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0) & (cmp16462_i_i_reg_840 == 1'd0))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_420)) begin
        if ((empty_reg_853 == 1'd1)) begin
            PixBufVal_val_V_0_4_fu_144 <= select_ln359_4_fu_593_p3;
        end else if ((empty_reg_853 == 1'd0)) begin
            PixBufVal_val_V_0_4_fu_144 <= ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_320_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_314)) begin
        if ((empty_reg_853 == 1'd1)) begin
            PixBufVal_val_V_0_fu_136 <= pixbuf_c_val_V_1_0_2_fu_511_p1;
        end else if ((empty_reg_853 == 1'd0)) begin
            PixBufVal_val_V_0_fu_136 <= pixbuf_c_val_V_2_0_12_fu_504_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_208)) begin
        if ((1'b1 == ap_condition_329)) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_317 <= pixbuf_c_val_V_2_0_12_fu_504_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_317 <= ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_317;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_208)) begin
        if ((1'b1 == ap_condition_329)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_308 <= pixbuf_c_val_V_2_1_fu_497_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_308 <= ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_308;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_314)) begin
        if ((empty_reg_853 == 1'd1)) begin
            pixbuf_c_val_V_2_1_10_fu_140 <= {{linebuf_c_val_V_1_q1[15:8]}};
        end else if ((empty_reg_853 == 1'd0)) begin
            pixbuf_c_val_V_2_1_10_fu_140 <= pixbuf_c_val_V_2_1_fu_497_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_420)) begin
        if ((empty_reg_853 == 1'd1)) begin
            pixbuf_c_val_V_2_1_11_fu_148 <= select_ln359_fu_587_p3;
        end else if ((empty_reg_853 == 1'd0)) begin
            pixbuf_c_val_V_2_1_11_fu_148 <= ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_311_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0) & (cmp16462_i_i_reg_840 == 1'd0))) begin
        x_reg_296 <= 15'd0;
    end else if (((icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_reg_296 <= add_ln291_reg_878;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        y_reg_285 <= add_ln289_reg_844;
    end else if (((1'd1 == and_ln289_fu_347_p2) & (1'b1 == ap_CS_fsm_state2))) begin
        y_reg_285 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HwReg_layerHeight17_load_loc_read_reg_758 <= HwReg_layerHeight17_load_loc_dout;
        loopWidth_reg_769 <= {{layer2WidthInBytes_loc_dout[15:1]}};
        p_read_reg_764 <= p_read2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0))) begin
        PixBufVal_val_V_0_load_2_reg_941 <= PixBufVal_val_V_0_fu_136;
        pixbuf_c_val_V_2_1_10_load_1_reg_947 <= pixbuf_c_val_V_2_1_10_fu_140;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln289_reg_844 <= add_ln289_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln291_reg_878 <= add_ln291_fu_401_p2;
        ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_317 <= ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_317;
        ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_308 <= ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_308;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        and_ln289_reg_780 <= and_ln289_fu_347_p2;
        loopHeight_reg_775 <= loopHeight_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln289_fu_347_p2) & (1'b1 == ap_CS_fsm_state2))) begin
        cmp16462_i_i_reg_840 <= cmp16462_i_i_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0))) begin
        cmp22_i_i_reg_863 <= cmp22_i_i_fu_382_p2;
        cmp74_i_i_reg_867 <= cmp74_i_i_fu_387_p2;
        empty_reg_853 <= empty_fu_372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln291_reg_883 <= icmp_ln291_fu_407_p2;
        icmp_ln291_reg_883_pp0_iter1_reg <= icmp_ln291_reg_883;
        idxprom5_i154_i_i_reg_887_pp0_iter1_reg[10 : 0] <= idxprom5_i154_i_i_reg_887[10 : 0];
        linebuf_c_val_V_0_addr_reg_898_pp0_iter1_reg <= linebuf_c_val_V_0_addr_reg_898;
        linebuf_y_val_V_0_addr_reg_892_pp0_iter1_reg <= linebuf_y_val_V_0_addr_reg_892;
        x_reg_296_pp0_iter1_reg <= x_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln291_reg_883_pp0_iter2_reg <= icmp_ln291_reg_883_pp0_iter1_reg;
        outpix_val_V_load_6_i_i_reg_963 <= outpix_val_V_load_6_i_i_fu_704_p3;
        outpix_val_V_load_9_i_i_reg_968 <= outpix_val_V_load_9_i_i_fu_739_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln291_fu_407_p2 == 1'd0))) begin
        idxprom5_i154_i_i_reg_887[10 : 0] <= idxprom5_i154_i_i_fu_416_p1[10 : 0];
        linebuf_c_val_V_0_addr_reg_898 <= idxprom5_i154_i_i_fu_416_p1;
        linebuf_y_val_V_0_addr_reg_892 <= idxprom5_i154_i_i_fu_416_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cmp74_i_i_reg_867 == 1'd1))) begin
        linebuf_y_val_V_0_load_reg_909 <= linebuf_y_val_V_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_y_val_V_0_fu_120 <= mpix_y_val_V_0_6_fu_423_p1;
        mpix_y_val_V_1_6_fu_124 <= {{srcImg_dout[31:24]}};
        pixbuf_c_val_V_2_0_7_fu_128 <= {{srcImg_dout[15:8]}};
        pixbuf_c_val_V_2_1_9_fu_132 <= {{srcImg_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln291_reg_883_pp0_iter2_reg == 1'd0))) begin
        p_Result_1_1_i_i_reg_958 <= {{linebuf_y_val_V_1_q1[15:8]}};
        trunc_ln674_reg_953 <= trunc_ln674_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixbuf_c_val_V_2_0_11_reg_914 <= pixbuf_c_val_V_2_0_11_fu_483_p1;
        pixbuf_c_val_V_2_0_12_reg_930 <= pixbuf_c_val_V_2_0_12_fu_504_p3;
        pixbuf_c_val_V_2_1_14_reg_919 <= {{linebuf_c_val_V_0_q1[15:8]}};
        pixbuf_c_val_V_2_1_reg_924 <= pixbuf_c_val_V_2_1_fu_497_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0) & (cmp16462_i_i_reg_840 == 1'd0))) begin
        tmp_reg_874 <= out_y_fu_376_p2[32'd15];
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_blk_n = HwReg_layerHeight17_load_loc_empty_n;
    end else begin
        HwReg_layerHeight17_load_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_out_blk_n = HwReg_layerHeight17_load_loc_out_full_n;
    end else begin
        HwReg_layerHeight17_load_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_out_write = 1'b1;
    end else begin
        HwReg_layerHeight17_load_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_read = 1'b1;
    end else begin
        HwReg_layerHeight17_load_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln291_fu_407_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((1'd0 == and_ln289_reg_780) | (icmp_ln289_2_fu_367_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0))) begin
        ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_320_p4 = pixbuf_c_val_V_2_0_7_fu_128;
    end else begin
        ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_320_p4 = ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_317;
    end
end

always @ (*) begin
    if (((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0))) begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_311_p4 = pixbuf_c_val_V_2_1_9_fu_132;
    end else begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_311_p4 = ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_308;
    end
end

always @ (*) begin
    if (((icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_300_p4 = add_ln291_reg_878;
    end else begin
        ap_phi_mux_x_phi_fu_300_p4 = x_reg_296;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((1'd0 == and_ln289_reg_780) | (icmp_ln289_2_fu_367_p2 == 1'd1)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_blk_n = layer2WidthInBytes_loc_empty_n;
    end else begin
        layer2WidthInBytes_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_out_blk_n = layer2WidthInBytes_loc_out_full_n;
    end else begin
        layer2WidthInBytes_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_out_write = 1'b1;
    end else begin
        layer2WidthInBytes_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_read = 1'b1;
    end else begin
        layer2WidthInBytes_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_c_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp22_i_i_reg_863 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0))) begin
        linebuf_c_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_c_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0))) begin
        linebuf_c_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_y_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_y_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0))) begin
        linebuf_y_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_y_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_y_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0))) begin
        linebuf_y_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_reg_874 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        outImg_blk_n = outImg_full_n;
    end else begin
        outImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_reg_874 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outImg_write = 1'b1;
    end else begin
        outImg_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_blk_n = p_read2_empty_n;
    end else begin
        p_read2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_out_blk_n = p_read2_out_full_n;
    end else begin
        p_read2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_out_write = 1'b1;
    end else begin
        p_read2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_read = 1'b1;
    end else begin
        p_read2_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_blk_n = srcImg_empty_n;
    end else begin
        srcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op79_read_state5 == 1'b1))) begin
        srcImg_read = 1'b1;
    end else begin
        srcImg_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((1'd0 == and_ln289_reg_780) | (icmp_ln289_2_fu_367_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'd1 == and_ln289_reg_780) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln289_2_fu_367_p2 == 1'd0) & (cmp16462_i_i_reg_840 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HwReg_layerHeight17_load_loc_out_din = HwReg_layerHeight17_load_loc_dout;

assign add_ln1346_10_fu_717_p2 = (zext_ln215_12_fu_710_p1 + 9'd1);

assign add_ln1346_11_fu_723_p2 = (add_ln1346_10_fu_717_p2 + zext_ln215_13_fu_713_p1);

assign add_ln1346_9_fu_688_p2 = (add_ln1346_fu_682_p2 + zext_ln215_11_fu_678_p1);

assign add_ln1346_fu_682_p2 = (zext_ln215_fu_675_p1 + 9'd1);

assign add_ln289_fu_357_p2 = (y_reg_285 + 15'd1);

assign add_ln291_fu_401_p2 = (ap_phi_mux_x_phi_fu_300_p4 + 15'd1);

assign and_ln289_fu_347_p2 = (p_read_reg_764 & icmp_ln289_fu_341_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0) & (ap_predicate_op79_read_state5 == 1'b1)) | ((tmp_reg_874 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0) & (ap_predicate_op79_read_state5 == 1'b1)) | ((tmp_reg_874 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (srcImg_empty_n == 1'b0) & (ap_predicate_op79_read_state5 == 1'b1)) | ((tmp_reg_874 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (outImg_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((srcImg_empty_n == 1'b0) & (ap_predicate_op79_read_state5 == 1'b1));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter4 = ((tmp_reg_874 == 1'd0) & (outImg_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_208 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_314 = ((icmp_ln291_reg_883 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_329 = ((cmp22_i_i_reg_863 == 1'd0) & (icmp_ln291_reg_883 == 1'd0) & (empty_reg_853 == 1'd0));
end

always @ (*) begin
    ap_condition_420 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_enable_operation_114 = (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_116 = (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_119 = (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_123 = (ap_predicate_op123_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_131 = (ap_predicate_op131_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_140 = (icmp_ln291_reg_883_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_71 = (ap_predicate_op71_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_73 = (icmp_ln291_fu_407_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_75 = (icmp_ln291_fu_407_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_91 = (ap_predicate_op91_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_92 = (icmp_ln291_reg_883 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_97 = (icmp_ln291_reg_883 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_317 = 'bx;

assign ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_308 = 'bx;

always @ (*) begin
    ap_predicate_op123_store_state6 = ((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0));
end

always @ (*) begin
    ap_predicate_op131_store_state6 = ((icmp_ln291_reg_883_pp0_iter1_reg == 1'd0) & (empty_reg_853 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_load_state4 = ((icmp_ln291_fu_407_p2 == 1'd0) & (cmp74_i_i_reg_867 == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_read_state5 = ((cmp22_i_i_reg_863 == 1'd1) & (icmp_ln291_reg_883 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_load_state5 = ((icmp_ln291_reg_883 == 1'd0) & (cmp74_i_i_reg_867 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign cmp16462_i_i_fu_352_p2 = ((loopWidth_reg_769 == 15'd0) ? 1'b1 : 1'b0);

assign cmp22_i_i_fu_382_p2 = ((zext_ln289_fu_363_p1 < HwReg_layerHeight17_load_loc_read_reg_758) ? 1'b1 : 1'b0);

assign cmp74_i_i_fu_387_p2 = ((y_reg_285 != 15'd0) ? 1'b1 : 1'b0);

assign empty_143_fu_412_p1 = ap_phi_mux_x_phi_fu_300_p4[10:0];

assign empty_fu_372_p1 = y_reg_285[0:0];

assign icmp_ln289_2_fu_367_p2 = ((zext_ln289_fu_363_p1 == loopHeight_reg_775) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_341_p2 = (($signed(loopHeight_fu_336_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln291_fu_407_p2 = ((ap_phi_mux_x_phi_fu_300_p4 == loopWidth_reg_769) ? 1'b1 : 1'b0);

assign idxprom5_i154_i_i_fu_416_p1 = empty_143_fu_412_p1;

assign layer2WidthInBytes_loc_out_din = layer2WidthInBytes_loc_dout;

assign linebuf_c_val_V_0_address0 = linebuf_c_val_V_0_addr_reg_898_pp0_iter1_reg;

assign linebuf_c_val_V_0_address1 = idxprom5_i154_i_i_fu_416_p1;

assign linebuf_c_val_V_0_d0 = {{pixbuf_c_val_V_2_1_9_fu_132}, {pixbuf_c_val_V_2_0_7_fu_128}};

assign linebuf_c_val_V_1_address0 = zext_ln291_fu_545_p1;

assign linebuf_c_val_V_1_address1 = idxprom5_i154_i_i_fu_416_p1;

assign linebuf_c_val_V_1_d0 = {{pixbuf_c_val_V_2_1_13_fu_614_p3}, {pixbuf_c_val_V_2_0_fu_608_p3}};

assign linebuf_y_val_V_0_address0 = linebuf_y_val_V_0_addr_reg_892_pp0_iter1_reg;

assign linebuf_y_val_V_0_address1 = idxprom5_i154_i_i_fu_416_p1;

assign linebuf_y_val_V_1_address0 = zext_ln291_fu_545_p1;

assign linebuf_y_val_V_1_address1 = idxprom5_i154_i_i_reg_887_pp0_iter1_reg;

assign linebuf_y_val_V_1_d0 = ((cmp74_i_i_reg_867[0:0] == 1'b1) ? linebuf_y_val_V_0_load_reg_909 : p_Result_2_1_i_i_fu_571_p3);

assign loopHeight_fu_336_p2 = (HwReg_layerHeight17_load_loc_read_reg_758 + 16'd2);

assign mpix_y_val_V_0_6_fu_423_p1 = srcImg_dout[7:0];

assign outImg_din = {{{{{{{{{{8'd0}, {outpix_val_V_load_9_i_i_reg_968}}}, {p_Result_1_1_i_i_reg_958}}}, {8'd0}}}, {outpix_val_V_load_6_i_i_reg_963}}}, {trunc_ln674_reg_953}};

assign out_y_fu_376_p2 = ($signed(zext_ln289_fu_363_p1) + $signed(16'd65534));

assign outpix_val_V_load_6_i_i_fu_704_p3 = ((empty_reg_853[0:0] == 1'b1) ? trunc_ln_fu_694_p4 : PixBufVal_val_V_0_load_2_reg_941);

assign outpix_val_V_load_9_i_i_fu_739_p3 = ((empty_reg_853[0:0] == 1'b1) ? trunc_ln213_7_fu_729_p4 : pixbuf_c_val_V_2_1_10_load_1_reg_947);

assign p_Result_2_1_i_i_fu_571_p3 = {{mpix_y_val_V_1_6_fu_124}, {mpix_y_val_V_0_fu_120}};

assign p_read2_out_din = p_read2_dout;

assign pixbuf_c_val_V_1_0_2_fu_511_p1 = linebuf_c_val_V_1_q1[7:0];

assign pixbuf_c_val_V_2_0_11_fu_483_p1 = linebuf_c_val_V_0_q1[7:0];

assign pixbuf_c_val_V_2_0_12_fu_504_p3 = ((empty_reg_853[0:0] == 1'b1) ? PixBufVal_val_V_0_fu_136 : pixbuf_c_val_V_2_0_11_fu_483_p1);

assign pixbuf_c_val_V_2_0_fu_608_p3 = ((cmp74_i_i_reg_867[0:0] == 1'b1) ? pixbuf_c_val_V_2_0_12_reg_930 : ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_320_p4);

assign pixbuf_c_val_V_2_1_13_fu_614_p3 = ((cmp74_i_i_reg_867[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_reg_924 : ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_311_p4);

assign pixbuf_c_val_V_2_1_14_fu_487_p4 = {{linebuf_c_val_V_0_q1[15:8]}};

assign pixbuf_c_val_V_2_1_fu_497_p3 = ((empty_reg_853[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_10_fu_140 : pixbuf_c_val_V_2_1_14_fu_487_p4);

assign select_ln359_4_fu_593_p3 = ((empty_reg_853[0:0] == 1'b1) ? pixbuf_c_val_V_2_0_11_reg_914 : PixBufVal_val_V_0_4_fu_144);

assign select_ln359_fu_587_p3 = ((empty_reg_853[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_14_reg_919 : pixbuf_c_val_V_2_1_11_fu_148);

assign start_out = real_start;

assign trunc_ln213_7_fu_729_p4 = {{add_ln1346_11_fu_723_p2[8:1]}};

assign trunc_ln674_fu_655_p1 = linebuf_y_val_V_1_q1[7:0];

assign trunc_ln_fu_694_p4 = {{add_ln1346_9_fu_688_p2[8:1]}};

assign zext_ln215_11_fu_678_p1 = PixBufVal_val_V_0_4_fu_144;

assign zext_ln215_12_fu_710_p1 = pixbuf_c_val_V_2_1_10_load_1_reg_947;

assign zext_ln215_13_fu_713_p1 = pixbuf_c_val_V_2_1_11_fu_148;

assign zext_ln215_fu_675_p1 = PixBufVal_val_V_0_load_2_reg_941;

assign zext_ln289_fu_363_p1 = y_reg_285;

assign zext_ln291_fu_545_p1 = x_reg_296_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    idxprom5_i154_i_i_reg_887[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    idxprom5_i154_i_i_reg_887_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //bd_v_mix_0_0_v_mix_420_to_422_true_s
