// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_mix_0_0_v_mix_core_alpha_false_false_19 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        outLayer0_dout,
        outLayer0_empty_n,
        outLayer0_read,
        srcLayer1x_dout,
        srcLayer1x_empty_n,
        srcLayer1x_read,
        outLayer1_din,
        outLayer1_full_n,
        outLayer1_write,
        p_read_dout,
        p_read_empty_n,
        p_read_read,
        p_read1_dout,
        p_read1_empty_n,
        p_read1_read,
        hwReg_3_dout,
        hwReg_3_empty_n,
        hwReg_3_read,
        hwReg_4_dout,
        hwReg_4_empty_n,
        hwReg_4_read,
        hwReg_5_dout,
        hwReg_5_empty_n,
        hwReg_5_read,
        hwReg_6_dout,
        hwReg_6_empty_n,
        hwReg_6_read,
        hwReg_151_dout,
        hwReg_151_empty_n,
        hwReg_151_read,
        hwReg_164_dout,
        hwReg_164_empty_n,
        hwReg_164_read,
        hwReg_177_dout,
        hwReg_177_empty_n,
        hwReg_177_read,
        hwReg_1810_dout,
        hwReg_1810_empty_n,
        hwReg_1810_read,
        hwReg_1913_dout,
        hwReg_1913_empty_n,
        hwReg_1913_read,
        hwReg_6_out_din,
        hwReg_6_out_full_n,
        hwReg_6_out_write,
        p_read_out_din,
        p_read_out_full_n,
        p_read_out_write,
        p_read1_out_din,
        p_read1_out_full_n,
        p_read1_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] outLayer0_dout;
input   outLayer0_empty_n;
output   outLayer0_read;
input  [47:0] srcLayer1x_dout;
input   srcLayer1x_empty_n;
output   srcLayer1x_read;
output  [47:0] outLayer1_din;
input   outLayer1_full_n;
output   outLayer1_write;
input  [11:0] p_read_dout;
input   p_read_empty_n;
output   p_read_read;
input  [11:0] p_read1_dout;
input   p_read1_empty_n;
output   p_read1_read;
input  [7:0] hwReg_3_dout;
input   hwReg_3_empty_n;
output   hwReg_3_read;
input  [7:0] hwReg_4_dout;
input   hwReg_4_empty_n;
output   hwReg_4_read;
input  [7:0] hwReg_5_dout;
input   hwReg_5_empty_n;
output   hwReg_5_read;
input  [3:0] hwReg_6_dout;
input   hwReg_6_empty_n;
output   hwReg_6_read;
input  [15:0] hwReg_151_dout;
input   hwReg_151_empty_n;
output   hwReg_151_read;
input  [15:0] hwReg_164_dout;
input   hwReg_164_empty_n;
output   hwReg_164_read;
input  [15:0] hwReg_177_dout;
input   hwReg_177_empty_n;
output   hwReg_177_read;
input  [15:0] hwReg_1810_dout;
input   hwReg_1810_empty_n;
output   hwReg_1810_read;
input  [7:0] hwReg_1913_dout;
input   hwReg_1913_empty_n;
output   hwReg_1913_read;
output  [3:0] hwReg_6_out_din;
input   hwReg_6_out_full_n;
output   hwReg_6_out_write;
output  [11:0] p_read_out_din;
input   p_read_out_full_n;
output   p_read_out_write;
output  [11:0] p_read1_out_din;
input   p_read1_out_full_n;
output   p_read1_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outLayer0_read;
reg srcLayer1x_read;
reg outLayer1_write;
reg p_read_read;
reg p_read1_read;
reg hwReg_3_read;
reg hwReg_4_read;
reg hwReg_5_read;
reg hwReg_6_read;
reg hwReg_151_read;
reg hwReg_164_read;
reg hwReg_177_read;
reg hwReg_1810_read;
reg hwReg_1913_read;
reg hwReg_6_out_write;
reg p_read_out_write;
reg p_read1_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    outLayer0_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln464_reg_997;
reg   [0:0] empty_reg_949;
reg    srcLayer1x_blk_n;
reg   [0:0] and_ln475_6_reg_1001;
reg    outLayer1_blk_n;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln464_reg_997_pp1_iter1_reg;
reg    p_read_blk_n;
reg    p_read1_blk_n;
reg    hwReg_3_blk_n;
reg    hwReg_4_blk_n;
reg    hwReg_5_blk_n;
reg    hwReg_6_blk_n;
reg    hwReg_151_blk_n;
reg    hwReg_164_blk_n;
reg    hwReg_177_blk_n;
reg    hwReg_1810_blk_n;
reg    hwReg_1913_blk_n;
reg    hwReg_6_out_blk_n;
reg    p_read_out_blk_n;
reg    p_read1_out_blk_n;
reg   [10:0] x_reg_345;
reg   [11:0] width_reg_849;
reg   [11:0] height_reg_854;
reg   [3:0] hwReg_6_read_reg_859;
reg   [15:0] layerStartY_reg_865;
reg   [15:0] layerStartX_reg_871;
reg   [15:0] hwReg_1810_read_reg_877;
reg   [7:0] hwReg_1913_read_reg_882;
reg   [15:0] hwReg_177_read_reg_888;
reg   [7:0] bkgpix_val_V_0_reg_893;
reg   [7:0] bkgpix_val_V_2_reg_899;
reg   [7:0] bkgpix_val_V_1_reg_905;
wire   [1:0] add_ln455_fu_476_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] srcpix_val_V_3_1_fu_510_p3;
wire   [0:0] icmp_ln455_fu_482_p2;
wire   [7:0] bkgpix_val_V_3_1_fu_517_p3;
wire   [7:0] srcpix_val_V_4_1_fu_524_p3;
wire   [7:0] bkgpix_val_V_4_1_fu_531_p3;
wire   [7:0] bkgpix_val_V_5_1_fu_538_p3;
wire   [7:0] bkgpix_val_V_5_2_fu_545_p3;
wire   [0:0] empty_fu_571_p1;
wire    ap_CS_fsm_state3;
wire   [16:0] add56_i_i_fu_578_p2;
reg   [16:0] add56_i_i_reg_953;
reg   [14:0] div60_cast_i_i_reg_958;
reg   [15:0] div66_cast_i_i_reg_963;
reg   [0:0] tmp_reg_968;
reg   [10:0] lshr_ln462_cast_i_reg_973;
wire   [11:0] y_12_fu_632_p2;
reg   [11:0] y_12_reg_978;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln462_fu_646_p2;
wire   [0:0] and_ln475_fu_667_p2;
reg   [0:0] and_ln475_reg_987;
wire   [10:0] x_12_fu_673_p2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state5_pp1_stage0_iter0;
reg    ap_predicate_op129_read_state6;
reg    ap_predicate_op137_read_state6;
reg    ap_block_state6_pp1_stage0_iter1;
reg    ap_block_state7_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln464_fu_687_p2;
wire   [0:0] and_ln475_6_fu_719_p2;
reg   [0:0] and_ln475_6_reg_1001_pp1_iter1_reg;
wire   [7:0] srcpix_val_V_0_1_fu_724_p1;
wire   [7:0] srcpix_val_V_0_2_fu_778_p1;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg   [7:0] bkgpix_val_V_5_06_i_i_reg_251;
reg   [7:0] srcpix_val_V_4_reg_263;
reg   [7:0] srcpix_val_V_3_reg_275;
reg   [7:0] srcpix_val_V_2_reg_287;
reg   [7:0] srcpix_val_V_1_reg_299;
reg   [7:0] srcpix_val_V_0_reg_311;
reg   [1:0] k_reg_323;
reg    ap_block_state1;
reg   [11:0] y_reg_334;
wire    ap_CS_fsm_state8;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_4_0_i_i_reg_356;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_4_0_i_i_reg_356;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_4_0_i_i_reg_356;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_3_0_i_i_reg_366;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_3_0_i_i_reg_366;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_3_0_i_i_reg_366;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_2_0_i_i_reg_376;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_2_0_i_i_reg_376;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_2_0_i_i_reg_376;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_1_0_i_i_reg_386;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_1_0_i_i_reg_386;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_1_0_i_i_reg_386;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_0_0_i_i_reg_396;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_0_0_i_i_reg_396;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_0_0_i_i_reg_396;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_5_reg_406;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_5_reg_406;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_5_reg_406;
reg   [7:0] ap_phi_mux_srcpix_val_V_5_0_i_i_phi_fu_419_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_5_0_i_i_reg_416;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_5_0_i_i_reg_416;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_5_0_i_i_reg_416;
reg   [7:0] ap_phi_mux_srcpix_val_V_4_1_i_i_phi_fu_429_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_4_1_i_i_reg_426;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_4_1_i_i_reg_426;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_4_1_i_i_reg_426;
reg   [7:0] ap_phi_mux_srcpix_val_V_3_1_i_i_phi_fu_439_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_3_1_i_i_reg_436;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_3_1_i_i_reg_436;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_3_1_i_i_reg_436;
reg   [7:0] ap_phi_mux_srcpix_val_V_2_1_i_i_phi_fu_449_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_2_1_i_i_reg_446;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_2_1_i_i_reg_446;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_2_1_i_i_reg_446;
reg   [7:0] ap_phi_mux_srcpix_val_V_1_1_i_i_phi_fu_459_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_1_1_i_i_reg_456;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_1_1_i_i_reg_456;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_1_1_i_i_reg_456;
reg   [7:0] ap_phi_mux_srcpix_val_V_0_1_i_i_phi_fu_469_p4;
reg   [7:0] ap_phi_reg_pp1_iter2_srcpix_val_V_0_1_i_i_reg_466;
wire   [7:0] ap_phi_reg_pp1_iter0_srcpix_val_V_0_1_i_i_reg_466;
reg   [7:0] ap_phi_reg_pp1_iter1_srcpix_val_V_0_1_i_i_reg_466;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] trunc_ln457_fu_492_p1;
wire   [2:0] shl_ln_i_fu_496_p3;
wire   [2:0] zext_ln472_fu_488_p1;
wire   [0:0] icmp_ln457_fu_504_p2;
wire   [15:0] hwReg_1913_readcast_fu_552_p1;
wire   [15:0] hwReg_1913_readcast8_fu_560_p1;
wire   [15:0] shl_ln448_fu_555_p2;
wire   [16:0] trunc_ln448_cast_i_i_fu_574_p1;
wire   [16:0] layerStartY_cast_i_i_fu_568_p1;
wire   [15:0] shl_ln449_fu_563_p2;
wire   [16:0] trunc_ln449_cast_i_i_fu_596_p1;
wire   [16:0] layerStartX_cast_i_i_fu_584_p1;
wire   [16:0] add65_i_i_fu_600_p2;
wire   [15:0] zext_ln462_fu_638_p1;
wire   [0:0] ult_fu_651_p2;
wire   [16:0] zext_ln462_2_fu_642_p1;
wire   [0:0] notrhs_i_i_fu_662_p2;
wire   [0:0] rev_fu_656_p2;
wire   [14:0] zext_ln464_fu_679_p1;
wire   [0:0] icmp_ln475_fu_692_p2;
wire   [15:0] zext_ln464_2_fu_683_p1;
wire   [0:0] xor_ln475_fu_697_p2;
wire   [0:0] icmp_ln475_2_fu_703_p2;
wire   [0:0] and_ln475_4_fu_708_p2;
wire   [0:0] and_ln475_5_fu_714_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_272;
reg    ap_condition_382;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln462_fu_646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln462_fu_646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state5)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((icmp_ln462_fu_646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_0_0_i_i_reg_396 <= srcpix_val_V_0_reg_311;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_0_0_i_i_reg_396 <= ap_phi_reg_pp1_iter0_srcpix_val_V_0_0_i_i_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_1_0_i_i_reg_386 <= srcpix_val_V_1_reg_299;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_1_0_i_i_reg_386 <= ap_phi_reg_pp1_iter0_srcpix_val_V_1_0_i_i_reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_2_0_i_i_reg_376 <= srcpix_val_V_2_reg_287;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_2_0_i_i_reg_376 <= ap_phi_reg_pp1_iter0_srcpix_val_V_2_0_i_i_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_3_0_i_i_reg_366 <= srcpix_val_V_3_reg_275;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_3_0_i_i_reg_366 <= ap_phi_reg_pp1_iter0_srcpix_val_V_3_0_i_i_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_4_0_i_i_reg_356 <= srcpix_val_V_4_reg_263;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_4_0_i_i_reg_356 <= ap_phi_reg_pp1_iter0_srcpix_val_V_4_0_i_i_reg_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_272)) begin
        if (((icmp_ln464_fu_687_p2 == 1'd0) & (empty_reg_949 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_5_reg_406 <= bkgpix_val_V_5_06_i_i_reg_251;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_srcpix_val_V_5_reg_406 <= ap_phi_reg_pp1_iter0_srcpix_val_V_5_reg_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_0_0_i_i_reg_396 <= srcpix_val_V_0_1_fu_724_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_0_0_i_i_reg_396 <= ap_phi_reg_pp1_iter1_srcpix_val_V_0_0_i_i_reg_396;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_0_1_i_i_reg_466 <= srcpix_val_V_0_2_fu_778_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_0_1_i_i_reg_466 <= ap_phi_reg_pp1_iter1_srcpix_val_V_0_1_i_i_reg_466;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_1_0_i_i_reg_386 <= {{outLayer0_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_1_0_i_i_reg_386 <= ap_phi_reg_pp1_iter1_srcpix_val_V_1_0_i_i_reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_1_1_i_i_reg_456 <= {{srcLayer1x_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_1_1_i_i_reg_456 <= ap_phi_reg_pp1_iter1_srcpix_val_V_1_1_i_i_reg_456;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_2_0_i_i_reg_376 <= {{outLayer0_dout[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_2_0_i_i_reg_376 <= ap_phi_reg_pp1_iter1_srcpix_val_V_2_0_i_i_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_2_1_i_i_reg_446 <= {{srcLayer1x_dout[23:16]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_2_1_i_i_reg_446 <= ap_phi_reg_pp1_iter1_srcpix_val_V_2_1_i_i_reg_446;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_3_0_i_i_reg_366 <= {{outLayer0_dout[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_3_0_i_i_reg_366 <= ap_phi_reg_pp1_iter1_srcpix_val_V_3_0_i_i_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_3_1_i_i_reg_436 <= {{srcLayer1x_dout[31:24]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_3_1_i_i_reg_436 <= ap_phi_reg_pp1_iter1_srcpix_val_V_3_1_i_i_reg_436;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_4_0_i_i_reg_356 <= {{outLayer0_dout[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_4_0_i_i_reg_356 <= ap_phi_reg_pp1_iter1_srcpix_val_V_4_0_i_i_reg_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_4_1_i_i_reg_426 <= {{srcLayer1x_dout[39:32]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_4_1_i_i_reg_426 <= ap_phi_reg_pp1_iter1_srcpix_val_V_4_1_i_i_reg_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_5_0_i_i_reg_416 <= {{srcLayer1x_dout[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_5_0_i_i_reg_416 <= ap_phi_reg_pp1_iter1_srcpix_val_V_5_0_i_i_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_382)) begin
        if (((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_5_reg_406 <= {{outLayer0_dout[47:40]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_srcpix_val_V_5_reg_406 <= ap_phi_reg_pp1_iter1_srcpix_val_V_5_reg_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln455_fu_482_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        k_reg_323 <= add_ln455_fu_476_p2;
    end else if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        k_reg_323 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln464_fu_687_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_reg_345 <= x_12_fu_673_p2;
    end else if (((icmp_ln462_fu_646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x_reg_345 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_reg_334 <= y_12_reg_978;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        y_reg_334 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add56_i_i_reg_953 <= add56_i_i_fu_578_p2;
        div60_cast_i_i_reg_958 <= {{layerStartX_reg_871[15:1]}};
        div66_cast_i_i_reg_963 <= {{add65_i_i_fu_600_p2[16:1]}};
        empty_reg_949 <= empty_fu_571_p1;
        lshr_ln462_cast_i_reg_973 <= {{width_reg_849[11:1]}};
        tmp_reg_968 <= hwReg_6_read_reg_859[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln464_fu_687_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln475_6_reg_1001 <= and_ln475_6_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        and_ln475_6_reg_1001_pp1_iter1_reg <= and_ln475_6_reg_1001;
        icmp_ln464_reg_997 <= icmp_ln464_fu_687_p2;
        icmp_ln464_reg_997_pp1_iter1_reg <= icmp_ln464_reg_997;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln462_fu_646_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        and_ln475_reg_987 <= and_ln475_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        ap_phi_reg_pp1_iter1_srcpix_val_V_0_1_i_i_reg_466 <= ap_phi_reg_pp1_iter0_srcpix_val_V_0_1_i_i_reg_466;
        ap_phi_reg_pp1_iter1_srcpix_val_V_1_1_i_i_reg_456 <= ap_phi_reg_pp1_iter0_srcpix_val_V_1_1_i_i_reg_456;
        ap_phi_reg_pp1_iter1_srcpix_val_V_2_1_i_i_reg_446 <= ap_phi_reg_pp1_iter0_srcpix_val_V_2_1_i_i_reg_446;
        ap_phi_reg_pp1_iter1_srcpix_val_V_3_1_i_i_reg_436 <= ap_phi_reg_pp1_iter0_srcpix_val_V_3_1_i_i_reg_436;
        ap_phi_reg_pp1_iter1_srcpix_val_V_4_1_i_i_reg_426 <= ap_phi_reg_pp1_iter0_srcpix_val_V_4_1_i_i_reg_426;
        ap_phi_reg_pp1_iter1_srcpix_val_V_5_0_i_i_reg_416 <= ap_phi_reg_pp1_iter0_srcpix_val_V_5_0_i_i_reg_416;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bkgpix_val_V_0_reg_893 <= hwReg_3_dout;
        bkgpix_val_V_1_reg_905 <= hwReg_4_dout;
        bkgpix_val_V_2_reg_899 <= hwReg_5_dout;
        height_reg_854 <= p_read1_dout;
        hwReg_177_read_reg_888 <= hwReg_177_dout;
        hwReg_1810_read_reg_877 <= hwReg_1810_dout;
        hwReg_1913_read_reg_882 <= hwReg_1913_dout;
        hwReg_6_read_reg_859 <= hwReg_6_dout;
        layerStartX_reg_871 <= hwReg_151_dout;
        layerStartY_reg_865 <= hwReg_164_dout;
        width_reg_849 <= p_read_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln455_fu_482_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        bkgpix_val_V_5_06_i_i_reg_251 <= bkgpix_val_V_5_1_fu_538_p3;
        srcpix_val_V_0_reg_311 <= bkgpix_val_V_3_1_fu_517_p3;
        srcpix_val_V_1_reg_299 <= bkgpix_val_V_4_1_fu_531_p3;
        srcpix_val_V_2_reg_287 <= bkgpix_val_V_5_2_fu_545_p3;
        srcpix_val_V_3_reg_275 <= srcpix_val_V_3_1_fu_510_p3;
        srcpix_val_V_4_reg_263 <= srcpix_val_V_4_1_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_12_reg_978 <= y_12_fu_632_p2;
    end
end

always @ (*) begin
    if ((icmp_ln464_fu_687_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln462_fu_646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_0_1_i_i_phi_fu_469_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_0_0_i_i_reg_396;
    end else begin
        ap_phi_mux_srcpix_val_V_0_1_i_i_phi_fu_469_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_0_1_i_i_reg_466;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_1_1_i_i_phi_fu_459_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_1_0_i_i_reg_386;
    end else begin
        ap_phi_mux_srcpix_val_V_1_1_i_i_phi_fu_459_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_1_1_i_i_reg_456;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_2_1_i_i_phi_fu_449_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_2_0_i_i_reg_376;
    end else begin
        ap_phi_mux_srcpix_val_V_2_1_i_i_phi_fu_449_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_2_1_i_i_reg_446;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_3_1_i_i_phi_fu_439_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_3_0_i_i_reg_366;
    end else begin
        ap_phi_mux_srcpix_val_V_3_1_i_i_phi_fu_439_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_3_1_i_i_reg_436;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_4_1_i_i_phi_fu_429_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_4_0_i_i_reg_356;
    end else begin
        ap_phi_mux_srcpix_val_V_4_1_i_i_phi_fu_429_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_4_1_i_i_reg_426;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (1'd0 == and_ln475_6_reg_1001_pp1_iter1_reg))) begin
        ap_phi_mux_srcpix_val_V_5_0_i_i_phi_fu_419_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_5_reg_406;
    end else begin
        ap_phi_mux_srcpix_val_V_5_0_i_i_phi_fu_419_p4 = ap_phi_reg_pp1_iter2_srcpix_val_V_5_0_i_i_reg_416;
    end
end

always @ (*) begin
    if (((icmp_ln462_fu_646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_151_blk_n = hwReg_151_empty_n;
    end else begin
        hwReg_151_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_151_read = 1'b1;
    end else begin
        hwReg_151_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_164_blk_n = hwReg_164_empty_n;
    end else begin
        hwReg_164_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_164_read = 1'b1;
    end else begin
        hwReg_164_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_177_blk_n = hwReg_177_empty_n;
    end else begin
        hwReg_177_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_177_read = 1'b1;
    end else begin
        hwReg_177_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_1810_blk_n = hwReg_1810_empty_n;
    end else begin
        hwReg_1810_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_1810_read = 1'b1;
    end else begin
        hwReg_1810_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_1913_blk_n = hwReg_1913_empty_n;
    end else begin
        hwReg_1913_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_1913_read = 1'b1;
    end else begin
        hwReg_1913_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_3_blk_n = hwReg_3_empty_n;
    end else begin
        hwReg_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_3_read = 1'b1;
    end else begin
        hwReg_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_4_blk_n = hwReg_4_empty_n;
    end else begin
        hwReg_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_4_read = 1'b1;
    end else begin
        hwReg_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_5_blk_n = hwReg_5_empty_n;
    end else begin
        hwReg_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_5_read = 1'b1;
    end else begin
        hwReg_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_6_blk_n = hwReg_6_empty_n;
    end else begin
        hwReg_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_6_out_blk_n = hwReg_6_out_full_n;
    end else begin
        hwReg_6_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_6_out_write = 1'b1;
    end else begin
        hwReg_6_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        hwReg_6_read = 1'b1;
    end else begin
        hwReg_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        outLayer0_blk_n = outLayer0_empty_n;
    end else begin
        outLayer0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        outLayer0_read = 1'b1;
    end else begin
        outLayer0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        outLayer1_blk_n = outLayer1_full_n;
    end else begin
        outLayer1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        outLayer1_write = 1'b1;
    end else begin
        outLayer1_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_blk_n = p_read1_empty_n;
    end else begin
        p_read1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_out_blk_n = p_read1_out_full_n;
    end else begin
        p_read1_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_out_write = 1'b1;
    end else begin
        p_read1_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read1_read = 1'b1;
    end else begin
        p_read1_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_blk_n = p_read_empty_n;
    end else begin
        p_read_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_out_blk_n = p_read_out_full_n;
    end else begin
        p_read_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_out_write = 1'b1;
    end else begin
        p_read_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read_read = 1'b1;
    end else begin
        p_read_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        srcLayer1x_blk_n = srcLayer1x_empty_n;
    end else begin
        srcLayer1x_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op137_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        srcLayer1x_read = 1'b1;
    end else begin
        srcLayer1x_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln455_fu_482_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln462_fu_646_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln464_fu_687_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln464_fu_687_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add56_i_i_fu_578_p2 = (trunc_ln448_cast_i_i_fu_574_p1 + layerStartY_cast_i_i_fu_568_p1);

assign add65_i_i_fu_600_p2 = (trunc_ln449_cast_i_i_fu_596_p1 + layerStartX_cast_i_i_fu_584_p1);

assign add_ln455_fu_476_p2 = (k_reg_323 + 2'd1);

assign and_ln475_4_fu_708_p2 = (xor_ln475_fu_697_p2 & icmp_ln475_2_fu_703_p2);

assign and_ln475_5_fu_714_p2 = (and_ln475_reg_987 & and_ln475_4_fu_708_p2);

assign and_ln475_6_fu_719_p2 = (tmp_reg_968 & and_ln475_5_fu_714_p2);

assign and_ln475_fu_667_p2 = (rev_fu_656_p2 & notrhs_i_i_fu_662_p2);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((outLayer1_full_n == 1'b0) & (icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((srcLayer1x_empty_n == 1'b0) & (ap_predicate_op137_read_state6 == 1'b1)) | ((outLayer0_empty_n == 1'b0) & (ap_predicate_op129_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((outLayer1_full_n == 1'b0) & (icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((srcLayer1x_empty_n == 1'b0) & (ap_predicate_op137_read_state6 == 1'b1)) | ((outLayer0_empty_n == 1'b0) & (ap_predicate_op129_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((outLayer1_full_n == 1'b0) & (icmp_ln464_reg_997_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (((srcLayer1x_empty_n == 1'b0) & (ap_predicate_op137_read_state6 == 1'b1)) | ((outLayer0_empty_n == 1'b0) & (ap_predicate_op129_read_state6 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1 = ((p_read1_out_full_n == 1'b0) | (p_read_out_full_n == 1'b0) | (hwReg_6_out_full_n == 1'b0) | (hwReg_1913_empty_n == 1'b0) | (hwReg_1810_empty_n == 1'b0) | (hwReg_177_empty_n == 1'b0) | (hwReg_164_empty_n == 1'b0) | (hwReg_151_empty_n == 1'b0) | (hwReg_6_empty_n == 1'b0) | (hwReg_5_empty_n == 1'b0) | (hwReg_4_empty_n == 1'b0) | (hwReg_3_empty_n == 1'b0) | (p_read1_empty_n == 1'b0) | (p_read_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp1_stage0_iter1 = (((srcLayer1x_empty_n == 1'b0) & (ap_predicate_op137_read_state6 == 1'b1)) | ((outLayer0_empty_n == 1'b0) & (ap_predicate_op129_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter2 = ((outLayer1_full_n == 1'b0) & (icmp_ln464_reg_997_pp1_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_272 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001));
end

always @ (*) begin
    ap_condition_382 = ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_srcpix_val_V_0_0_i_i_reg_396 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_0_1_i_i_reg_466 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_1_0_i_i_reg_386 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_1_1_i_i_reg_456 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_2_0_i_i_reg_376 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_2_1_i_i_reg_446 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_3_0_i_i_reg_366 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_3_1_i_i_reg_436 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_4_0_i_i_reg_356 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_4_1_i_i_reg_426 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_5_0_i_i_reg_416 = 'bx;

assign ap_phi_reg_pp1_iter0_srcpix_val_V_5_reg_406 = 'bx;

always @ (*) begin
    ap_predicate_op129_read_state6 = ((empty_reg_949 == 1'd1) & (icmp_ln464_reg_997 == 1'd0));
end

always @ (*) begin
    ap_predicate_op137_read_state6 = ((1'd1 == and_ln475_6_reg_1001) & (icmp_ln464_reg_997 == 1'd0));
end

assign bkgpix_val_V_3_1_fu_517_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? bkgpix_val_V_0_reg_893 : srcpix_val_V_0_reg_311);

assign bkgpix_val_V_4_1_fu_531_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? bkgpix_val_V_1_reg_905 : srcpix_val_V_1_reg_299);

assign bkgpix_val_V_5_1_fu_538_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? bkgpix_val_V_5_06_i_i_reg_251 : bkgpix_val_V_2_reg_899);

assign bkgpix_val_V_5_2_fu_545_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? bkgpix_val_V_2_reg_899 : srcpix_val_V_2_reg_287);

assign empty_fu_571_p1 = hwReg_6_read_reg_859[0:0];

assign hwReg_1913_readcast8_fu_560_p1 = hwReg_1913_read_reg_882;

assign hwReg_1913_readcast_fu_552_p1 = hwReg_1913_read_reg_882;

assign hwReg_6_out_din = hwReg_6_dout;

assign icmp_ln455_fu_482_p2 = ((k_reg_323 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln457_fu_504_p2 = ((shl_ln_i_fu_496_p3 == zext_ln472_fu_488_p1) ? 1'b1 : 1'b0);

assign icmp_ln462_fu_646_p2 = ((y_reg_334 == height_reg_854) ? 1'b1 : 1'b0);

assign icmp_ln464_fu_687_p2 = ((x_reg_345 == lshr_ln462_cast_i_reg_973) ? 1'b1 : 1'b0);

assign icmp_ln475_2_fu_703_p2 = ((zext_ln464_2_fu_683_p1 < div66_cast_i_i_reg_963) ? 1'b1 : 1'b0);

assign icmp_ln475_fu_692_p2 = ((zext_ln464_fu_679_p1 < div60_cast_i_i_reg_958) ? 1'b1 : 1'b0);

assign layerStartX_cast_i_i_fu_584_p1 = layerStartX_reg_871;

assign layerStartY_cast_i_i_fu_568_p1 = layerStartY_reg_865;

assign notrhs_i_i_fu_662_p2 = ((zext_ln462_2_fu_642_p1 < add56_i_i_reg_953) ? 1'b1 : 1'b0);

assign outLayer1_din = {{{{{{ap_phi_mux_srcpix_val_V_5_0_i_i_phi_fu_419_p4}, {ap_phi_mux_srcpix_val_V_4_1_i_i_phi_fu_429_p4}}, {ap_phi_mux_srcpix_val_V_3_1_i_i_phi_fu_439_p4}}, {ap_phi_mux_srcpix_val_V_2_1_i_i_phi_fu_449_p4}}, {ap_phi_mux_srcpix_val_V_1_1_i_i_phi_fu_459_p4}}, {ap_phi_mux_srcpix_val_V_0_1_i_i_phi_fu_469_p4}};

assign p_read1_out_din = p_read1_dout;

assign p_read_out_din = p_read_dout;

assign rev_fu_656_p2 = (ult_fu_651_p2 ^ 1'd1);

assign shl_ln448_fu_555_p2 = hwReg_1810_read_reg_877 << hwReg_1913_readcast_fu_552_p1;

assign shl_ln449_fu_563_p2 = hwReg_177_read_reg_888 << hwReg_1913_readcast8_fu_560_p1;

assign shl_ln_i_fu_496_p3 = {{trunc_ln457_fu_492_p1}, {2'd0}};

assign srcpix_val_V_0_1_fu_724_p1 = outLayer0_dout[7:0];

assign srcpix_val_V_0_2_fu_778_p1 = srcLayer1x_dout[7:0];

assign srcpix_val_V_3_1_fu_510_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? srcpix_val_V_3_reg_275 : bkgpix_val_V_0_reg_893);

assign srcpix_val_V_4_1_fu_524_p3 = ((icmp_ln457_fu_504_p2[0:0] == 1'b1) ? srcpix_val_V_4_reg_263 : bkgpix_val_V_1_reg_905);

assign trunc_ln448_cast_i_i_fu_574_p1 = shl_ln448_fu_555_p2;

assign trunc_ln449_cast_i_i_fu_596_p1 = shl_ln449_fu_563_p2;

assign trunc_ln457_fu_492_p1 = k_reg_323[0:0];

assign ult_fu_651_p2 = ((zext_ln462_fu_638_p1 < layerStartY_reg_865) ? 1'b1 : 1'b0);

assign x_12_fu_673_p2 = (x_reg_345 + 11'd1);

assign xor_ln475_fu_697_p2 = (icmp_ln475_fu_692_p2 ^ 1'd1);

assign y_12_fu_632_p2 = (y_reg_334 + 12'd1);

assign zext_ln462_2_fu_642_p1 = y_reg_334;

assign zext_ln462_fu_638_p1 = y_reg_334;

assign zext_ln464_2_fu_683_p1 = x_reg_345;

assign zext_ln464_fu_679_p1 = x_reg_345;

assign zext_ln472_fu_488_p1 = k_reg_323;

endmodule //bd_v_mix_0_0_v_mix_core_alpha_false_false_19
