// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_mix_0_0_Bytes2MultiPixStream_19_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        bytesLayer2_plane0_dout,
        bytesLayer2_plane0_empty_n,
        bytesLayer2_plane0_read,
        bytesLayer2_plane1_dout,
        bytesLayer2_plane1_empty_n,
        bytesLayer2_plane1_read,
        srcLayer2_din,
        srcLayer2_full_n,
        srcLayer2_write,
        HwReg_layerHeight17_load_loc_dout,
        HwReg_layerHeight17_load_loc_empty_n,
        HwReg_layerHeight17_load_loc_read,
        layer2WidthInBytes_loc_dout,
        layer2WidthInBytes_loc_empty_n,
        layer2WidthInBytes_loc_read,
        p_read2_dout,
        p_read2_empty_n,
        p_read2_read,
        HwReg_layerHeight17_load_loc_out_din,
        HwReg_layerHeight17_load_loc_out_full_n,
        HwReg_layerHeight17_load_loc_out_write,
        layer2WidthInBytes_loc_out_din,
        layer2WidthInBytes_loc_out_full_n,
        layer2WidthInBytes_loc_out_write,
        p_read2_out_din,
        p_read2_out_full_n,
        p_read2_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [127:0] bytesLayer2_plane0_dout;
input   bytesLayer2_plane0_empty_n;
output   bytesLayer2_plane0_read;
input  [127:0] bytesLayer2_plane1_dout;
input   bytesLayer2_plane1_empty_n;
output   bytesLayer2_plane1_read;
output  [47:0] srcLayer2_din;
input   srcLayer2_full_n;
output   srcLayer2_write;
input  [15:0] HwReg_layerHeight17_load_loc_dout;
input   HwReg_layerHeight17_load_loc_empty_n;
output   HwReg_layerHeight17_load_loc_read;
input  [15:0] layer2WidthInBytes_loc_dout;
input   layer2WidthInBytes_loc_empty_n;
output   layer2WidthInBytes_loc_read;
input  [0:0] p_read2_dout;
input   p_read2_empty_n;
output   p_read2_read;
output  [15:0] HwReg_layerHeight17_load_loc_out_din;
input   HwReg_layerHeight17_load_loc_out_full_n;
output   HwReg_layerHeight17_load_loc_out_write;
output  [15:0] layer2WidthInBytes_loc_out_din;
input   layer2WidthInBytes_loc_out_full_n;
output   layer2WidthInBytes_loc_out_write;
output  [0:0] p_read2_out_din;
input   p_read2_out_full_n;
output   p_read2_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg bytesLayer2_plane0_read;
reg bytesLayer2_plane1_read;
reg srcLayer2_write;
reg HwReg_layerHeight17_load_loc_read;
reg layer2WidthInBytes_loc_read;
reg p_read2_read;
reg HwReg_layerHeight17_load_loc_out_write;
reg layer2WidthInBytes_loc_out_write;
reg p_read2_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    bytesLayer2_plane0_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln771_reg_406;
reg   [0:0] icmp_ln775_reg_410;
reg    bytesLayer2_plane1_blk_n;
reg   [0:0] trunc_ln763_reg_392;
reg    srcLayer2_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln771_reg_406_pp0_iter1_reg;
reg    HwReg_layerHeight17_load_loc_blk_n;
reg    layer2WidthInBytes_loc_blk_n;
reg    p_read2_blk_n;
reg    HwReg_layerHeight17_load_loc_out_blk_n;
reg    layer2WidthInBytes_loc_out_blk_n;
reg    p_read2_out_blk_n;
reg   [14:0] x_reg_176;
reg   [127:0] y_pix_V_reg_187;
reg   [127:0] uv_pix_V_reg_198;
reg   [127:0] p_Val2_4_reg_209;
reg   [127:0] p_Val2_s_reg_224;
reg   [15:0] HwReg_layerHeight17_load_loc_read_reg_369;
wire   [0:0] p_read_read_fu_116_p2;
reg   [0:0] p_read_reg_374;
reg   [14:0] trunc_ln_reg_378;
wire   [0:0] icmp_ln763_fu_249_p2;
reg   [0:0] icmp_ln763_reg_383;
wire   [15:0] y_23_fu_255_p2;
reg   [15:0] y_23_reg_387;
wire    ap_CS_fsm_state2;
wire   [0:0] trunc_ln763_fu_261_p1;
wire   [0:0] icmp_ln763_2_fu_265_p2;
wire   [14:0] x_23_fu_270_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op60_read_state4;
reg    ap_predicate_op62_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln771_fu_276_p2;
wire   [0:0] icmp_ln775_fu_285_p2;
wire   [7:0] trunc_ln674_fu_328_p1;
reg   [7:0] trunc_ln674_reg_414;
wire   [7:0] trunc_ln674_6_fu_332_p1;
reg   [7:0] trunc_ln674_6_reg_419;
reg   [7:0] p_Result_1_i_i_reg_424;
reg   [7:0] p_Result_13_1_i_i_reg_429;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter1_state4;
reg   [15:0] y_reg_165;
wire    ap_CS_fsm_state6;
reg    ap_block_state1;
reg   [127:0] ap_phi_mux_y_pix_V_phi_fu_191_p4;
reg   [127:0] ap_phi_mux_uv_pix_V_phi_fu_202_p4;
reg   [127:0] ap_phi_mux_p_Val2_4_phi_fu_213_p6;
wire   [127:0] uv_pix_V_4_fu_320_p3;
wire   [127:0] ap_phi_reg_pp0_iter1_p_Val2_4_reg_209;
reg   [127:0] ap_phi_mux_p_Val2_s_phi_fu_228_p6;
wire   [127:0] zext_ln849_2_fu_301_p1;
wire   [127:0] ap_phi_reg_pp0_iter1_p_Val2_s_reg_224;
reg    ap_block_pp0_stage0_01001;
wire   [2:0] xmodratio_fu_281_p1;
wire   [111:0] y_pix_V_5_fu_291_p4;
wire   [111:0] lshr_ln_fu_306_p4;
wire   [127:0] zext_ln849_fu_316_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_101;
reg    ap_condition_262;
reg    ap_condition_255;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & ((p_read_reg_374 == 1'd0) | ((icmp_ln763_2_fu_265_p2 == 1'd1) | (icmp_ln763_reg_383 == 1'd1))))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state4) & (ap_enable_reg_pp0_iter0 == 1'b0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter1_state4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_255)) begin
        if ((1'b1 == ap_condition_262)) begin
            p_Val2_4_reg_209 <= ap_phi_mux_uv_pix_V_phi_fu_202_p4;
        end else if ((1'b1 == ap_condition_101)) begin
            p_Val2_4_reg_209 <= bytesLayer2_plane1_dout;
        end else if (((icmp_ln775_reg_410 == 1'd0) & (icmp_ln771_reg_406 == 1'd0))) begin
            p_Val2_4_reg_209 <= uv_pix_V_4_fu_320_p3;
        end else if ((1'b1 == 1'b1)) begin
            p_Val2_4_reg_209 <= ap_phi_reg_pp0_iter1_p_Val2_4_reg_209;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((trunc_ln763_reg_392 == 1'd1) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_Val2_s_reg_224 <= bytesLayer2_plane0_dout;
    end else if (((icmp_ln775_reg_410 == 1'd0) & (icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_224 <= zext_ln849_2_fu_301_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_224 <= ap_phi_reg_pp0_iter1_p_Val2_s_reg_224;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        uv_pix_V_reg_198 <= p_Val2_4_reg_209;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
        uv_pix_V_reg_198 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln771_fu_276_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_reg_176 <= x_23_fu_270_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
        x_reg_176 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        y_pix_V_reg_187 <= p_Val2_s_reg_224;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_2_fu_265_p2 == 1'd0) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
        y_pix_V_reg_187 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln763_fu_249_p2 == 1'd0) & (p_read_read_fu_116_p2 == 1'd1))) begin
        y_reg_165 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_reg_165 <= y_23_reg_387;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HwReg_layerHeight17_load_loc_read_reg_369 <= HwReg_layerHeight17_load_loc_dout;
        p_read_reg_374 <= p_read2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (p_read_read_fu_116_p2 == 1'd1))) begin
        icmp_ln763_reg_383 <= icmp_ln763_fu_249_p2;
        trunc_ln_reg_378 <= {{layer2WidthInBytes_loc_dout[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln771_reg_406 <= icmp_ln771_fu_276_p2;
        icmp_ln771_reg_406_pp0_iter1_reg <= icmp_ln771_reg_406;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln771_fu_276_p2 == 1'd0))) begin
        icmp_ln775_reg_410 <= icmp_ln775_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_13_1_i_i_reg_429 <= {{ap_phi_mux_p_Val2_4_phi_fu_213_p6[15:8]}};
        p_Result_1_i_i_reg_424 <= {{ap_phi_mux_p_Val2_s_phi_fu_228_p6[15:8]}};
        trunc_ln674_6_reg_419 <= trunc_ln674_6_fu_332_p1;
        trunc_ln674_reg_414 <= trunc_ln674_fu_328_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln763_reg_383 == 1'd0) & (p_read_reg_374 == 1'd1))) begin
        trunc_ln763_reg_392 <= trunc_ln763_fu_261_p1;
        y_23_reg_387 <= y_23_fu_255_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_blk_n = HwReg_layerHeight17_load_loc_empty_n;
    end else begin
        HwReg_layerHeight17_load_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_out_blk_n = HwReg_layerHeight17_load_loc_out_full_n;
    end else begin
        HwReg_layerHeight17_load_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_out_write = 1'b1;
    end else begin
        HwReg_layerHeight17_load_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_layerHeight17_load_loc_read = 1'b1;
    end else begin
        HwReg_layerHeight17_load_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln771_fu_276_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((p_read_reg_374 == 1'd0) | ((icmp_ln763_2_fu_265_p2 == 1'd1) | (icmp_ln763_reg_383 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln771_reg_406 == 1'd0)) begin
        if (((trunc_ln763_reg_392 == 1'd1) & (icmp_ln775_reg_410 == 1'd1))) begin
            ap_phi_mux_p_Val2_4_phi_fu_213_p6 = ap_phi_mux_uv_pix_V_phi_fu_202_p4;
        end else if (((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1))) begin
            ap_phi_mux_p_Val2_4_phi_fu_213_p6 = bytesLayer2_plane1_dout;
        end else if ((icmp_ln775_reg_410 == 1'd0)) begin
            ap_phi_mux_p_Val2_4_phi_fu_213_p6 = uv_pix_V_4_fu_320_p3;
        end else begin
            ap_phi_mux_p_Val2_4_phi_fu_213_p6 = ap_phi_reg_pp0_iter1_p_Val2_4_reg_209;
        end
    end else begin
        ap_phi_mux_p_Val2_4_phi_fu_213_p6 = ap_phi_reg_pp0_iter1_p_Val2_4_reg_209;
    end
end

always @ (*) begin
    if ((((trunc_ln763_reg_392 == 1'd1) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0)) | ((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0)))) begin
        ap_phi_mux_p_Val2_s_phi_fu_228_p6 = bytesLayer2_plane0_dout;
    end else if (((icmp_ln775_reg_410 == 1'd0) & (icmp_ln771_reg_406 == 1'd0))) begin
        ap_phi_mux_p_Val2_s_phi_fu_228_p6 = zext_ln849_2_fu_301_p1;
    end else begin
        ap_phi_mux_p_Val2_s_phi_fu_228_p6 = ap_phi_reg_pp0_iter1_p_Val2_s_reg_224;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_uv_pix_V_phi_fu_202_p4 = p_Val2_4_reg_209;
    end else begin
        ap_phi_mux_uv_pix_V_phi_fu_202_p4 = uv_pix_V_reg_198;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_y_pix_V_phi_fu_191_p4 = p_Val2_s_reg_224;
    end else begin
        ap_phi_mux_y_pix_V_phi_fu_191_p4 = y_pix_V_reg_187;
    end
end

always @ (*) begin
    if (((icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytesLayer2_plane0_blk_n = bytesLayer2_plane0_empty_n;
    end else begin
        bytesLayer2_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op60_read_state4 == 1'b1))) begin
        bytesLayer2_plane0_read = 1'b1;
    end else begin
        bytesLayer2_plane0_read = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bytesLayer2_plane1_blk_n = bytesLayer2_plane1_empty_n;
    end else begin
        bytesLayer2_plane1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op62_read_state4 == 1'b1))) begin
        bytesLayer2_plane1_read = 1'b1;
    end else begin
        bytesLayer2_plane1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((p_read_reg_374 == 1'd0) | ((icmp_ln763_2_fu_265_p2 == 1'd1) | (icmp_ln763_reg_383 == 1'd1))))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_blk_n = layer2WidthInBytes_loc_empty_n;
    end else begin
        layer2WidthInBytes_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_out_blk_n = layer2WidthInBytes_loc_out_full_n;
    end else begin
        layer2WidthInBytes_loc_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_out_write = 1'b1;
    end else begin
        layer2WidthInBytes_loc_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer2WidthInBytes_loc_read = 1'b1;
    end else begin
        layer2WidthInBytes_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_blk_n = p_read2_empty_n;
    end else begin
        p_read2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_out_blk_n = p_read2_out_full_n;
    end else begin
        p_read2_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_out_write = 1'b1;
    end else begin
        p_read2_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_read2_read = 1'b1;
    end else begin
        p_read2_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        srcLayer2_blk_n = srcLayer2_full_n;
    end else begin
        srcLayer2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        srcLayer2_write = 1'b1;
    end else begin
        srcLayer2_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((p_read_reg_374 == 1'd0) | ((icmp_ln763_2_fu_265_p2 == 1'd1) | (icmp_ln763_reg_383 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HwReg_layerHeight17_load_loc_out_din = HwReg_layerHeight17_load_loc_dout;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((bytesLayer2_plane1_empty_n == 1'b0) & (ap_predicate_op62_read_state4 == 1'b1)) | ((bytesLayer2_plane0_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1)))) | ((srcLayer2_full_n == 1'b0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((bytesLayer2_plane1_empty_n == 1'b0) & (ap_predicate_op62_read_state4 == 1'b1)) | ((bytesLayer2_plane0_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1)))) | ((srcLayer2_full_n == 1'b0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((bytesLayer2_plane1_empty_n == 1'b0) & (ap_predicate_op62_read_state4 == 1'b1)) | ((bytesLayer2_plane0_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1)))) | ((srcLayer2_full_n == 1'b0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((p_read2_out_full_n == 1'b0) | (layer2WidthInBytes_loc_out_full_n == 1'b0) | (p_read2_empty_n == 1'b0) | (layer2WidthInBytes_loc_empty_n == 1'b0) | (1'b0 == HwReg_layerHeight17_load_loc_out_full_n) | (1'b0 == HwReg_layerHeight17_load_loc_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((bytesLayer2_plane1_empty_n == 1'b0) & (ap_predicate_op62_read_state4 == 1'b1)) | ((bytesLayer2_plane0_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((srcLayer2_full_n == 1'b0) & (icmp_ln771_reg_406_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_101 = ((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0));
end

always @ (*) begin
    ap_condition_255 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_262 = ((trunc_ln763_reg_392 == 1'd1) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_p_Val2_4_reg_209 = 'bx;

assign ap_phi_reg_pp0_iter1_p_Val2_s_reg_224 = 'bx;

always @ (*) begin
    ap_predicate_op60_read_state4 = ((icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0));
end

always @ (*) begin
    ap_predicate_op62_read_state4 = ((trunc_ln763_reg_392 == 1'd0) & (icmp_ln775_reg_410 == 1'd1) & (icmp_ln771_reg_406 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln763_2_fu_265_p2 = ((y_reg_165 == HwReg_layerHeight17_load_loc_read_reg_369) ? 1'b1 : 1'b0);

assign icmp_ln763_fu_249_p2 = ((HwReg_layerHeight17_load_loc_dout == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln771_fu_276_p2 = ((x_reg_176 == trunc_ln_reg_378) ? 1'b1 : 1'b0);

assign icmp_ln775_fu_285_p2 = ((xmodratio_fu_281_p1 == 3'd0) ? 1'b1 : 1'b0);

assign layer2WidthInBytes_loc_out_din = layer2WidthInBytes_loc_dout;

assign lshr_ln_fu_306_p4 = {{ap_phi_mux_uv_pix_V_phi_fu_202_p4[127:16]}};

assign p_read2_out_din = p_read2_dout;

assign p_read_read_fu_116_p2 = p_read2_dout;

assign srcLayer2_din = {{{{{{{{{{8'd0}, {p_Result_13_1_i_i_reg_429}}}, {p_Result_1_i_i_reg_424}}}, {8'd0}}}, {trunc_ln674_6_reg_419}}}, {trunc_ln674_reg_414}};

assign start_out = real_start;

assign trunc_ln674_6_fu_332_p1 = ap_phi_mux_p_Val2_4_phi_fu_213_p6[7:0];

assign trunc_ln674_fu_328_p1 = ap_phi_mux_p_Val2_s_phi_fu_228_p6[7:0];

assign trunc_ln763_fu_261_p1 = y_reg_165[0:0];

assign uv_pix_V_4_fu_320_p3 = ((trunc_ln763_reg_392[0:0] == 1'b1) ? ap_phi_mux_uv_pix_V_phi_fu_202_p4 : zext_ln849_fu_316_p1);

assign x_23_fu_270_p2 = (x_reg_176 + 15'd1);

assign xmodratio_fu_281_p1 = x_reg_176[2:0];

assign y_23_fu_255_p2 = (y_reg_165 + 16'd1);

assign y_pix_V_5_fu_291_p4 = {{ap_phi_mux_y_pix_V_phi_fu_191_p4[127:16]}};

assign zext_ln849_2_fu_301_p1 = y_pix_V_5_fu_291_p4;

assign zext_ln849_fu_316_p1 = lshr_ln_fu_306_p4;

endmodule //bd_v_mix_0_0_Bytes2MultiPixStream_19_s
