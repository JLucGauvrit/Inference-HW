// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_frmbuf_rd_0_0_Bytes2MultiPixStream (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        bytePlanes_01_dout,
        bytePlanes_01_empty_n,
        bytePlanes_01_read,
        bytePlanes_12_dout,
        bytePlanes_12_empty_n,
        bytePlanes_12_read,
        img_din,
        img_full_n,
        img_write,
        Height_dout,
        Height_empty_n,
        Height_read,
        Width_dout,
        Width_empty_n,
        Width_read,
        WidthInBytes_dout,
        WidthInBytes_empty_n,
        WidthInBytes_read,
        VideoFormat_dout,
        VideoFormat_empty_n,
        VideoFormat_read,
        Height_out_din,
        Height_out_full_n,
        Height_out_write,
        Width_out_din,
        Width_out_full_n,
        Width_out_write
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_state6 = 38'd32;
parameter    ap_ST_fsm_state7 = 38'd64;
parameter    ap_ST_fsm_state8 = 38'd128;
parameter    ap_ST_fsm_state9 = 38'd256;
parameter    ap_ST_fsm_state10 = 38'd512;
parameter    ap_ST_fsm_state11 = 38'd1024;
parameter    ap_ST_fsm_state12 = 38'd2048;
parameter    ap_ST_fsm_state13 = 38'd4096;
parameter    ap_ST_fsm_state14 = 38'd8192;
parameter    ap_ST_fsm_state15 = 38'd16384;
parameter    ap_ST_fsm_state16 = 38'd32768;
parameter    ap_ST_fsm_state17 = 38'd65536;
parameter    ap_ST_fsm_state18 = 38'd131072;
parameter    ap_ST_fsm_pp0_stage0 = 38'd262144;
parameter    ap_ST_fsm_pp0_stage1 = 38'd524288;
parameter    ap_ST_fsm_pp0_stage2 = 38'd1048576;
parameter    ap_ST_fsm_pp0_stage3 = 38'd2097152;
parameter    ap_ST_fsm_pp0_stage4 = 38'd4194304;
parameter    ap_ST_fsm_pp0_stage5 = 38'd8388608;
parameter    ap_ST_fsm_pp0_stage6 = 38'd16777216;
parameter    ap_ST_fsm_pp0_stage7 = 38'd33554432;
parameter    ap_ST_fsm_state28 = 38'd67108864;
parameter    ap_ST_fsm_state29 = 38'd134217728;
parameter    ap_ST_fsm_state30 = 38'd268435456;
parameter    ap_ST_fsm_pp1_stage0 = 38'd536870912;
parameter    ap_ST_fsm_pp1_stage1 = 38'd1073741824;
parameter    ap_ST_fsm_pp1_stage2 = 38'd2147483648;
parameter    ap_ST_fsm_pp1_stage3 = 38'd4294967296;
parameter    ap_ST_fsm_pp1_stage4 = 38'd8589934592;
parameter    ap_ST_fsm_pp1_stage5 = 38'd17179869184;
parameter    ap_ST_fsm_pp1_stage6 = 38'd34359738368;
parameter    ap_ST_fsm_pp1_stage7 = 38'd68719476736;
parameter    ap_ST_fsm_state41 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] bytePlanes_01_dout;
input   bytePlanes_01_empty_n;
output   bytePlanes_01_read;
input  [127:0] bytePlanes_12_dout;
input   bytePlanes_12_empty_n;
output   bytePlanes_12_read;
output  [47:0] img_din;
input   img_full_n;
output   img_write;
input  [11:0] Height_dout;
input   Height_empty_n;
output   Height_read;
input  [11:0] Width_dout;
input   Width_empty_n;
output   Width_read;
input  [14:0] WidthInBytes_dout;
input   WidthInBytes_empty_n;
output   WidthInBytes_read;
input  [5:0] VideoFormat_dout;
input   VideoFormat_empty_n;
output   VideoFormat_read;
output  [11:0] Height_out_din;
input   Height_out_full_n;
output   Height_out_write;
output  [11:0] Width_out_din;
input   Width_out_full_n;
output   Width_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bytePlanes_01_read;
reg bytePlanes_12_read;
reg[47:0] img_din;
reg img_write;
reg Height_read;
reg Width_read;
reg WidthInBytes_read;
reg VideoFormat_read;
reg Height_out_write;
reg Width_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    bytePlanes_01_blk_n;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage2;
reg   [0:0] icmp_ln460_reg_1602;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln733_reg_1466;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln740_reg_1470;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln742_reg_1474;
reg    bytePlanes_12_blk_n;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
reg   [0:0] demorgan_reg_1593;
reg    img_blk_n;
reg   [0:0] or_ln478_reg_1606;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3;
reg   [0:0] or_ln478_1_reg_1610;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4;
reg   [0:0] or_ln478_2_reg_1614;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5;
reg   [0:0] or_ln478_3_reg_1618;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6;
reg   [0:0] or_ln478_4_reg_1622;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7;
reg   [0:0] or_ln478_5_reg_1626;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] or_ln478_6_reg_1630;
reg   [0:0] or_ln478_7_reg_1634;
reg   [0:0] or_ln478_7_reg_1634_pp1_iter1_reg;
reg   [0:0] or_ln759_reg_1478;
reg   [0:0] or_ln759_1_reg_1482;
reg   [0:0] or_ln759_2_reg_1486;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln759_3_reg_1490;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln759_4_reg_1494;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln759_5_reg_1498;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] or_ln759_6_reg_1502;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln759_7_reg_1506;
reg    Height_blk_n;
reg    Width_blk_n;
reg    WidthInBytes_blk_n;
reg    VideoFormat_blk_n;
reg    Height_out_blk_n;
reg    Width_out_blk_n;
reg   [9:0] x_1_reg_302;
reg   [11:0] x_reg_324;
reg   [11:0] Height_read_reg_1339;
wire   [5:0] VideoFormat_read_read_fu_260_p2;
reg   [5:0] VideoFormat_read_reg_1346;
reg   [14:0] widthInPix_reg_1351;
wire   [0:0] icmp_ln722_fu_350_p2;
reg   [0:0] icmp_ln722_reg_1359;
reg   [2:0] rem84_op_i_reg_1365;
wire   [11:0] trunc_ln_fu_375_p4;
wire    ap_CS_fsm_state2;
reg   [9:0] trunc_ln1_reg_1380;
wire    ap_CS_fsm_state5;
wire   [10:0] sub95_i_fu_417_p2;
reg   [10:0] sub95_i_reg_1386;
wire    ap_CS_fsm_state17;
wire   [0:0] cmp97_i_fu_423_p2;
reg   [0:0] cmp97_i_reg_1391;
wire   [0:0] cmp103_i_fu_429_p2;
reg   [0:0] cmp103_i_reg_1396;
wire   [0:0] grp_fu_335_p2;
reg   [0:0] icmp_ln725_reg_1401;
wire   [0:0] icmp_ln759_fu_445_p2;
reg   [0:0] icmp_ln759_reg_1417;
wire   [0:0] icmp_ln759_1_fu_461_p2;
reg   [0:0] icmp_ln759_1_reg_1422;
wire   [0:0] icmp_ln759_2_fu_467_p2;
reg   [0:0] icmp_ln759_2_reg_1427;
wire   [0:0] icmp_ln759_3_fu_483_p2;
reg   [0:0] icmp_ln759_3_reg_1432;
wire   [0:0] icmp_ln759_4_fu_489_p2;
reg   [0:0] icmp_ln759_4_reg_1437;
wire   [0:0] icmp_ln759_5_fu_495_p2;
reg   [0:0] icmp_ln759_5_reg_1442;
wire   [0:0] icmp_ln759_6_fu_501_p2;
reg   [0:0] icmp_ln759_6_reg_1447;
wire   [11:0] y_3_fu_507_p2;
reg   [11:0] y_3_reg_1452;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln725_1_fu_513_p2;
wire   [9:0] x_3_fu_518_p2;
reg   [9:0] x_3_reg_1461;
wire    ap_block_state19_pp0_stage0_iter0;
reg    ap_block_state27_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln733_fu_524_p2;
wire   [0:0] or_ln740_fu_538_p2;
wire   [0:0] or_ln742_fu_543_p2;
wire   [0:0] or_ln759_fu_548_p2;
wire   [0:0] or_ln759_1_fu_553_p2;
wire   [0:0] or_ln759_2_fu_558_p2;
wire   [0:0] or_ln759_3_fu_563_p2;
wire   [0:0] or_ln759_4_fu_568_p2;
wire   [0:0] or_ln759_5_fu_573_p2;
wire   [0:0] or_ln759_6_fu_578_p2;
wire   [0:0] or_ln759_7_fu_583_p2;
reg   [47:0] or_ln174_9_1_i_reg_1510;
reg    ap_predicate_op154_write_state20;
reg    ap_block_state20_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] tmp_8_i_reg_1515;
wire   [11:0] trunc_ln447_1_fu_714_p4;
reg   [11:0] trunc_ln447_1_reg_1520;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln450_fu_724_p2;
reg   [0:0] icmp_ln450_reg_1525;
wire  signed [12:0] sub46_cast17_i_fu_736_p1;
reg  signed [12:0] sub46_cast17_i_reg_1530;
wire   [0:0] brmerge35_not_i_fu_761_p2;
reg   [0:0] brmerge35_not_i_reg_1544;
wire   [0:0] icmp_ln478_fu_766_p2;
reg   [0:0] icmp_ln478_reg_1549;
wire   [0:0] icmp_ln478_1_fu_782_p2;
reg   [0:0] icmp_ln478_1_reg_1554;
wire   [0:0] icmp_ln478_2_fu_788_p2;
reg   [0:0] icmp_ln478_2_reg_1559;
wire   [0:0] icmp_ln478_3_fu_804_p2;
reg   [0:0] icmp_ln478_3_reg_1564;
wire   [0:0] icmp_ln478_4_fu_810_p2;
reg   [0:0] icmp_ln478_4_reg_1569;
wire   [0:0] icmp_ln478_5_fu_816_p2;
reg   [0:0] icmp_ln478_5_reg_1574;
wire   [0:0] icmp_ln478_6_fu_822_p2;
reg   [0:0] icmp_ln478_6_reg_1579;
wire   [11:0] y_2_fu_828_p2;
reg   [11:0] y_2_reg_1584;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln453_1_fu_838_p2;
wire   [0:0] demorgan_fu_843_p2;
wire   [11:0] x_2_fu_848_p2;
reg   [11:0] x_2_reg_1597;
wire    ap_block_state31_pp1_stage0_iter0;
reg    ap_block_state39_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln460_fu_854_p2;
wire   [0:0] or_ln478_fu_868_p2;
wire   [0:0] or_ln478_1_fu_873_p2;
wire   [0:0] or_ln478_2_fu_878_p2;
wire   [0:0] or_ln478_3_fu_883_p2;
wire   [0:0] or_ln478_4_fu_888_p2;
wire   [0:0] or_ln478_5_fu_893_p2;
wire   [0:0] or_ln478_6_fu_898_p2;
wire   [0:0] or_ln478_7_fu_903_p2;
reg   [127:0] p_Val2_s_reg_1638;
reg    ap_predicate_op266_write_state33;
reg    ap_block_state33_pp1_stage2_iter0;
reg    ap_block_pp1_stage2_11001;
reg   [7:0] p_Result_1_i_reg_1656;
reg   [7:0] p_Result_1_1_i_reg_1661;
reg   [7:0] p_Result_2_i_reg_1666;
reg   [7:0] p_Result_2_1_i_reg_1671;
reg   [7:0] p_Result_3_i_reg_1676;
reg   [7:0] p_Result_3_1_i_reg_1681;
reg   [7:0] p_Result_4_i_reg_1686;
reg   [7:0] p_Result_4_1_i_reg_1691;
reg   [7:0] p_Result_520_i_reg_1696;
reg   [7:0] p_Result_520_1_i_reg_1701;
reg   [7:0] p_Result_6_i_reg_1706;
reg   [7:0] p_Result_6_1_i_reg_1711;
reg   [7:0] p_Result_7_i_reg_1716;
reg   [7:0] p_Result_7_1_i_reg_1721;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state19;
reg    ap_predicate_op188_write_state26;
reg    ap_block_state26_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state31;
reg    ap_predicate_op305_write_state38;
reg    ap_block_state38_pp1_stage7_iter0;
reg    ap_block_pp1_stage7_subdone;
reg    ap_predicate_op254_read_state32;
reg    ap_block_state32_pp1_stage1_iter0;
reg    ap_block_state40_pp1_stage1_iter1;
reg    ap_block_pp1_stage1_subdone;
reg   [11:0] y_1_reg_291;
wire    ap_CS_fsm_state28;
reg   [9:0] ap_phi_mux_x_1_phi_fu_306_p4;
reg   [11:0] y_reg_313;
wire    ap_CS_fsm_state41;
reg   [11:0] ap_phi_mux_x_phi_fu_328_p4;
reg   [127:0] rd1_V_fu_220;
reg    ap_predicate_op158_read_state21;
reg    ap_predicate_op161_write_state21;
reg    ap_block_state21_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg   [127:0] rd2_V_fu_224;
reg    ap_predicate_op163_read_state22;
reg    ap_predicate_op169_write_state22;
reg    ap_block_state22_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg   [127:0] rdUv_V_fu_228;
reg    ap_block_pp1_stage1_11001;
reg    ap_block_state1;
wire   [47:0] trunc_ln174_fu_588_p1;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
wire   [47:0] or_ln174_9_2_i_fu_627_p3;
reg    ap_block_pp0_stage3_01001;
reg    ap_predicate_op173_write_state23;
reg    ap_block_state23_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
reg    ap_predicate_op177_write_state24;
reg    ap_block_state24_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
wire   [47:0] or_ln174_9_5_i_fu_671_p3;
reg    ap_predicate_op184_write_state25;
reg    ap_block_state25_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_4_i_fu_944_p7;
reg    ap_block_pp1_stage2_01001;
wire   [47:0] or_ln174_4_1_i_fu_1119_p7;
reg    ap_predicate_op285_write_state34;
reg    ap_block_state34_pp1_stage3_iter0;
reg    ap_block_pp1_stage3_01001;
wire   [47:0] or_ln174_4_2_i_fu_1152_p7;
reg    ap_predicate_op290_write_state35;
reg    ap_block_state35_pp1_stage4_iter0;
reg    ap_block_pp1_stage4_01001;
wire   [47:0] or_ln174_4_3_i_fu_1185_p7;
reg    ap_predicate_op295_write_state36;
reg    ap_block_state36_pp1_stage5_iter0;
reg    ap_block_pp1_stage5_01001;
wire   [47:0] or_ln174_4_4_i_fu_1218_p7;
reg    ap_predicate_op300_write_state37;
reg    ap_block_state37_pp1_stage6_iter0;
reg    ap_block_pp1_stage6_01001;
wire   [47:0] or_ln174_4_5_i_fu_1251_p7;
reg    ap_block_pp1_stage7_01001;
wire   [47:0] or_ln174_4_6_i_fu_1284_p7;
reg    ap_block_pp1_stage0_01001;
wire   [47:0] or_ln174_4_7_i_fu_1317_p7;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_pp1_stage3_11001;
reg    ap_block_pp1_stage4_11001;
reg    ap_block_pp1_stage5_11001;
reg    ap_block_pp1_stage6_11001;
reg    ap_block_pp1_stage7_11001;
wire   [3:0] remainPix_1_fu_346_p1;
wire   [15:0] zext_ln717_fu_366_p1;
wire   [15:0] add_ln717_fu_369_p2;
wire   [11:0] add_ln718_fu_385_p2;
wire   [11:0] grp_fu_395_p0;
wire   [2:0] grp_fu_395_p1;
wire   [24:0] grp_fu_1332_p2;
wire   [1:0] grp_fu_395_p2;
wire   [10:0] zext_ln718_fu_410_p1;
wire   [1:0] trunc_ln719_fu_413_p1;
wire   [3:0] rem84_op_i_cast_fu_435_p1;
wire   [3:0] div191_i_fu_438_p3;
wire   [2:0] tmp_2_fu_451_p4;
wire   [1:0] tmp_3_fu_473_p4;
wire   [10:0] zext_ln733_fu_529_p1;
wire   [0:0] icmp_ln740_fu_533_p2;
wire   [15:0] trunc_ln174_1_fu_623_p1;
wire   [31:0] trunc_ln174_2_fu_667_p1;
wire   [15:0] tmp_9_i_fu_657_p4;
wire   [15:0] zext_ln447_fu_705_p1;
wire   [15:0] add_ln447_fu_708_p2;
wire   [3:0] remainPix_fu_702_p1;
wire   [11:0] sub46_i_fu_730_p2;
wire   [2:0] rem_op_i_fu_740_p4;
wire   [3:0] rem_op_i_cast_fu_749_p1;
wire   [3:0] div48_i_fu_753_p3;
wire   [2:0] tmp_fu_772_p4;
wire   [1:0] tmp_1_fu_794_p4;
wire   [0:0] trunc_ln453_fu_834_p1;
wire   [12:0] zext_ln460_fu_859_p1;
wire   [0:0] cmp47_i_fu_863_p2;
wire   [7:0] p_Result_5_0_1_i_fu_934_p4;
wire   [7:0] p_Result_0_1_i_fu_924_p4;
wire   [7:0] trunc_ln674_1_fu_920_p1;
wire   [7:0] trunc_ln674_fu_916_p1;
wire   [7:0] p_Result_5_1_1_i_fu_1110_p4;
wire   [7:0] p_Result_5_1_i_fu_1101_p4;
wire   [7:0] p_Result_5_2_1_i_fu_1143_p4;
wire   [7:0] p_Result_5_2_i_fu_1134_p4;
wire   [7:0] p_Result_5_3_1_i_fu_1176_p4;
wire   [7:0] p_Result_5_3_i_fu_1167_p4;
wire   [7:0] p_Result_5_4_1_i_fu_1209_p4;
wire   [7:0] p_Result_5_4_i_fu_1200_p4;
wire   [7:0] p_Result_5_5_1_i_fu_1242_p4;
wire   [7:0] p_Result_5_5_i_fu_1233_p4;
wire   [7:0] p_Result_5_6_1_i_fu_1275_p4;
wire   [7:0] p_Result_5_6_i_fu_1266_p4;
wire   [7:0] p_Result_5_7_1_i_fu_1308_p4;
wire   [7:0] p_Result_5_7_i_fu_1299_p4;
wire   [11:0] grp_fu_1332_p0;
wire   [13:0] grp_fu_1332_p1;
reg    grp_fu_395_ap_start;
wire    grp_fu_395_ap_done;
reg   [37:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [24:0] grp_fu_1332_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 38'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

bd_v_frmbuf_rd_0_0_urem_12ns_3ns_2_16_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_12ns_3ns_2_16_seq_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_395_ap_start),
    .done(grp_fu_395_ap_done),
    .din0(grp_fu_395_p0),
    .din1(grp_fu_395_p1),
    .ce(1'b1),
    .dout(grp_fu_395_p2)
);

bd_v_frmbuf_rd_0_0_mul_mul_12ns_14ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 25 ))
mul_mul_12ns_14ns_25_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1332_p0),
    .din1(grp_fu_1332_p1),
    .ce(1'b1),
    .dout(grp_fu_1332_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd1) | (icmp_ln725_reg_1401 == 1'd1)) | (~(6'd21 == VideoFormat_read_reg_1346) & ~(6'd20 == VideoFormat_read_reg_1346))))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd21 == VideoFormat_read_reg_1346)) | ((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd20 == VideoFormat_read_reg_1346))))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd21 == VideoFormat_read_reg_1346)) | ((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd20 == VideoFormat_read_reg_1346))))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state31) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln453_1_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln453_1_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln733_reg_1466 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_1_reg_302 <= x_3_reg_1461;
    end else if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd21 == VideoFormat_read_reg_1346)) | ((icmp_ln725_1_fu_513_p2 == 1'd0) & (icmp_ln725_reg_1401 == 1'd0) & (6'd20 == VideoFormat_read_reg_1346))))) begin
        x_1_reg_302 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_reg_324 <= x_2_reg_1597;
    end else if (((icmp_ln453_1_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        x_reg_324 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        y_1_reg_291 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        y_1_reg_291 <= y_3_reg_1452;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        y_reg_313 <= y_2_reg_1584;
    end else if (((grp_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        y_reg_313 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        Height_read_reg_1339 <= Height_dout;
        VideoFormat_read_reg_1346 <= VideoFormat_dout;
        widthInPix_reg_1351 <= WidthInBytes_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        brmerge35_not_i_reg_1544 <= brmerge35_not_i_fu_761_p2;
        icmp_ln478_1_reg_1554 <= icmp_ln478_1_fu_782_p2;
        icmp_ln478_2_reg_1559 <= icmp_ln478_2_fu_788_p2;
        icmp_ln478_3_reg_1564 <= icmp_ln478_3_fu_804_p2;
        icmp_ln478_4_reg_1569 <= icmp_ln478_4_fu_810_p2;
        icmp_ln478_5_reg_1574 <= icmp_ln478_5_fu_816_p2;
        icmp_ln478_6_reg_1579 <= icmp_ln478_6_fu_822_p2;
        icmp_ln478_reg_1549 <= icmp_ln478_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        cmp103_i_reg_1396 <= cmp103_i_fu_429_p2;
        cmp97_i_reg_1391 <= cmp97_i_fu_423_p2;
        icmp_ln725_reg_1401 <= grp_fu_335_p2;
        sub95_i_reg_1386 <= sub95_i_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln453_1_fu_838_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        demorgan_reg_1593 <= demorgan_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        icmp_ln450_reg_1525 <= icmp_ln450_fu_724_p2;
        sub46_cast17_i_reg_1530 <= sub46_cast17_i_fu_736_p1;
        trunc_ln447_1_reg_1520 <= {{add_ln447_fu_708_p2[15:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln460_reg_1602 <= icmp_ln460_fu_854_p2;
        or_ln478_7_reg_1634_pp1_iter1_reg <= or_ln478_7_reg_1634;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & ((6'd21 == VideoFormat_read_read_fu_260_p2) | (6'd20 == VideoFormat_read_read_fu_260_p2)))) begin
        icmp_ln722_reg_1359 <= icmp_ln722_fu_350_p2;
        rem84_op_i_reg_1365 <= {{Width_dout[3:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln733_reg_1466 <= icmp_ln733_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        icmp_ln759_1_reg_1422 <= icmp_ln759_1_fu_461_p2;
        icmp_ln759_2_reg_1427 <= icmp_ln759_2_fu_467_p2;
        icmp_ln759_3_reg_1432 <= icmp_ln759_3_fu_483_p2;
        icmp_ln759_4_reg_1437 <= icmp_ln759_4_fu_489_p2;
        icmp_ln759_5_reg_1442 <= icmp_ln759_5_fu_495_p2;
        icmp_ln759_6_reg_1447 <= icmp_ln759_6_fu_501_p2;
        icmp_ln759_reg_1417 <= icmp_ln759_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln759_1_reg_1482 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln733_reg_1466 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        or_ln174_9_1_i_reg_1510 <= {{bytePlanes_01_dout[95:48]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln460_fu_854_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        or_ln478_1_reg_1610 <= or_ln478_1_fu_873_p2;
        or_ln478_2_reg_1614 <= or_ln478_2_fu_878_p2;
        or_ln478_3_reg_1618 <= or_ln478_3_fu_883_p2;
        or_ln478_4_reg_1622 <= or_ln478_4_fu_888_p2;
        or_ln478_5_reg_1626 <= or_ln478_5_fu_893_p2;
        or_ln478_6_reg_1630 <= or_ln478_6_fu_898_p2;
        or_ln478_7_reg_1634 <= or_ln478_7_fu_903_p2;
        or_ln478_reg_1606 <= or_ln478_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln733_fu_524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        or_ln740_reg_1470 <= or_ln740_fu_538_p2;
        or_ln742_reg_1474 <= or_ln742_fu_543_p2;
        or_ln759_1_reg_1482 <= or_ln759_1_fu_553_p2;
        or_ln759_2_reg_1486 <= or_ln759_2_fu_558_p2;
        or_ln759_3_reg_1490 <= or_ln759_3_fu_563_p2;
        or_ln759_4_reg_1494 <= or_ln759_4_fu_568_p2;
        or_ln759_5_reg_1498 <= or_ln759_5_fu_573_p2;
        or_ln759_6_reg_1502 <= or_ln759_6_fu_578_p2;
        or_ln759_7_reg_1506 <= or_ln759_7_fu_583_p2;
        or_ln759_reg_1478 <= or_ln759_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001))) begin
        p_Result_1_1_i_reg_1661 <= {{bytePlanes_01_dout[31:24]}};
        p_Result_1_i_reg_1656 <= {{bytePlanes_01_dout[23:16]}};
        p_Result_2_1_i_reg_1671 <= {{bytePlanes_01_dout[47:40]}};
        p_Result_2_i_reg_1666 <= {{bytePlanes_01_dout[39:32]}};
        p_Result_3_1_i_reg_1681 <= {{bytePlanes_01_dout[63:56]}};
        p_Result_3_i_reg_1676 <= {{bytePlanes_01_dout[55:48]}};
        p_Result_4_1_i_reg_1691 <= {{bytePlanes_01_dout[79:72]}};
        p_Result_4_i_reg_1686 <= {{bytePlanes_01_dout[71:64]}};
        p_Result_520_1_i_reg_1701 <= {{bytePlanes_01_dout[95:88]}};
        p_Result_520_i_reg_1696 <= {{bytePlanes_01_dout[87:80]}};
        p_Result_6_1_i_reg_1711 <= {{bytePlanes_01_dout[111:104]}};
        p_Result_6_i_reg_1706 <= {{bytePlanes_01_dout[103:96]}};
        p_Result_7_1_i_reg_1721 <= {{bytePlanes_01_dout[127:120]}};
        p_Result_7_i_reg_1716 <= {{bytePlanes_01_dout[119:112]}};
        p_Val2_s_reg_1638 <= rdUv_V_fu_228;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln740_reg_1470 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        rd1_V_fu_220 <= bytePlanes_01_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln742_reg_1474 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        rd2_V_fu_224 <= bytePlanes_01_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (demorgan_reg_1593 == 1'd0) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        rdUv_V_fu_228 <= bytePlanes_12_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln759_2_reg_1486 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln733_reg_1466 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_8_i_reg_1515 <= {{bytePlanes_01_dout[127:96]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln1_reg_1380 <= {{grp_fu_1332_p2[23:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        x_2_reg_1597 <= x_2_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_3_reg_1461 <= x_3_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        y_2_reg_1584 <= y_2_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_reg_1401 == 1'd0) & (6'd21 == VideoFormat_read_reg_1346)) | ((icmp_ln725_reg_1401 == 1'd0) & (6'd20 == VideoFormat_read_reg_1346))))) begin
        y_3_reg_1452 <= y_3_fu_507_p2;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_blk_n = Height_empty_n;
    end else begin
        Height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_blk_n = Height_out_full_n;
    end else begin
        Height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_write = 1'b1;
    end else begin
        Height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_read = 1'b1;
    end else begin
        Height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        VideoFormat_blk_n = VideoFormat_empty_n;
    end else begin
        VideoFormat_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        VideoFormat_read = 1'b1;
    end else begin
        VideoFormat_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthInBytes_blk_n = WidthInBytes_empty_n;
    end else begin
        WidthInBytes_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthInBytes_read = 1'b1;
    end else begin
        WidthInBytes_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Width_blk_n = Width_empty_n;
    end else begin
        Width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Width_out_blk_n = Width_out_full_n;
    end else begin
        Width_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        Width_out_write = 1'b1;
    end else begin
        Width_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1))) begin
        Width_read = 1'b1;
    end else begin
        Width_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln733_fu_524_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln460_fu_854_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd1) | (icmp_ln725_reg_1401 == 1'd1)) | (~(6'd21 == VideoFormat_read_reg_1346) & ~(6'd20 == VideoFormat_read_reg_1346))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln733_reg_1466 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_x_1_phi_fu_306_p4 = x_3_reg_1461;
    end else begin
        ap_phi_mux_x_1_phi_fu_306_p4 = x_1_reg_302;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_x_phi_fu_328_p4 = x_2_reg_1597;
    end else begin
        ap_phi_mux_x_phi_fu_328_p4 = x_reg_324;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd1) | (icmp_ln725_reg_1401 == 1'd1)) | (~(6'd21 == VideoFormat_read_reg_1346) & ~(6'd20 == VideoFormat_read_reg_1346))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln742_reg_1474 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln740_reg_1470 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        bytePlanes_01_blk_n = bytePlanes_01_empty_n;
    end else begin
        bytePlanes_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op163_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op158_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        bytePlanes_01_read = 1'b1;
    end else begin
        bytePlanes_01_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (demorgan_reg_1593 == 1'd0) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        bytePlanes_12_blk_n = bytePlanes_12_empty_n;
    end else begin
        bytePlanes_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op254_read_state32 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        bytePlanes_12_read = 1'b1;
    end else begin
        bytePlanes_12_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_395_ap_start = 1'b1;
    end else begin
        grp_fu_395_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((or_ln759_6_reg_1502 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7)) | ((or_ln759_5_reg_1498 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6)) | ((or_ln759_4_reg_1494 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5)) | ((or_ln759_3_reg_1490 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4)) | ((or_ln759_2_reg_1486 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3)) | ((or_ln759_1_reg_1482 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2)) | ((or_ln759_reg_1478 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln733_reg_1466 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1)) | ((or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1)) | ((or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((or_ln478_5_reg_1626 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage7) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((or_ln478_4_reg_1622 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage6) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((or_ln478_3_reg_1618 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage5) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((or_ln478_2_reg_1614 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage3) & (or_ln478_1_reg_1610 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (or_ln478_reg_1606 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0) & (1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        img_blk_n = img_full_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        img_din = or_ln174_4_7_i_fu_1317_p7;
    end else if (((or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        img_din = or_ln174_4_6_i_fu_1284_p7;
    end else if (((ap_predicate_op305_write_state38 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_5_i_fu_1251_p7;
    end else if (((ap_predicate_op300_write_state37 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_4_i_fu_1218_p7;
    end else if (((ap_predicate_op295_write_state36 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_3_i_fu_1185_p7;
    end else if (((ap_predicate_op290_write_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_2_i_fu_1152_p7;
    end else if (((ap_predicate_op285_write_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_1_i_fu_1119_p7;
    end else if (((ap_predicate_op266_write_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_01001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        img_din = or_ln174_4_i_fu_944_p7;
    end else if (((or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        img_din = {{rd2_V_fu_224[127:80]}};
    end else if (((ap_predicate_op188_write_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_01001))) begin
        img_din = {{rd2_V_fu_224[79:32]}};
    end else if (((ap_predicate_op184_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_01001))) begin
        img_din = or_ln174_9_5_i_fu_671_p3;
    end else if (((ap_predicate_op177_write_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001))) begin
        img_din = {{rd1_V_fu_220[111:64]}};
    end else if (((ap_predicate_op173_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_01001))) begin
        img_din = {{rd1_V_fu_220[63:16]}};
    end else if (((ap_predicate_op169_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001))) begin
        img_din = or_ln174_9_2_i_fu_627_p3;
    end else if (((ap_predicate_op161_write_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001))) begin
        img_din = or_ln174_9_1_i_reg_1510;
    end else if (((ap_predicate_op154_write_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        img_din = trunc_ln174_fu_588_p1;
    end else begin
        img_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op300_write_state37 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op295_write_state36 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op290_write_state35 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op285_write_state34 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op184_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op177_write_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op173_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op169_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op161_write_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op305_write_state38 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op188_write_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_predicate_op266_write_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op154_write_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        img_write = 1'b1;
    end else begin
        img_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1) & ((6'd18 == VideoFormat_read_read_fu_260_p2) | (6'd19 == VideoFormat_read_read_fu_260_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & ~(6'd21 == VideoFormat_read_read_fu_260_p2) & ~(6'd20 == VideoFormat_read_read_fu_260_p2) & ~(6'd19 == VideoFormat_read_read_fu_260_p2) & ~(6'd18 == VideoFormat_read_read_fu_260_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n)) & (1'b1 == ap_CS_fsm_state1) & ((6'd21 == VideoFormat_read_read_fu_260_p2) | (6'd20 == VideoFormat_read_read_fu_260_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (((icmp_ln725_1_fu_513_p2 == 1'd1) | (icmp_ln725_reg_1401 == 1'd1)) | (~(6'd21 == VideoFormat_read_reg_1346) & ~(6'd20 == VideoFormat_read_reg_1346))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln733_fu_524_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln733_fu_524_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_fu_335_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln453_1_fu_838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln460_fu_854_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln460_fu_854_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Height_out_din = Height_dout;

assign VideoFormat_read_read_fu_260_p2 = VideoFormat_dout;

assign Width_out_din = Width_dout;

assign add_ln447_fu_708_p2 = (zext_ln447_fu_705_p1 + 16'd15);

assign add_ln717_fu_369_p2 = (zext_ln717_fu_366_p1 + 16'd15);

assign add_ln718_fu_385_p2 = (trunc_ln_fu_375_p4 + 12'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((img_full_n == 1'b0) & (or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_full_n == 1'b0) & (or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_full_n == 1'b0) & (or_ln759_7_reg_1506 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln733_reg_1466 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op154_write_state20 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln733_reg_1466 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op154_write_state20 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln733_reg_1466 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op154_write_state20 == 1'b1))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op158_read_state21 == 1'b1) & (bytePlanes_01_empty_n == 1'b0)) | ((img_full_n == 1'b0) & (ap_predicate_op161_write_state21 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op158_read_state21 == 1'b1) & (bytePlanes_01_empty_n == 1'b0)) | ((img_full_n == 1'b0) & (ap_predicate_op161_write_state21 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op158_read_state21 == 1'b1) & (bytePlanes_01_empty_n == 1'b0)) | ((img_full_n == 1'b0) & (ap_predicate_op161_write_state21 == 1'b1))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op169_write_state22 == 1'b1) & (img_full_n == 1'b0)) | ((ap_predicate_op163_read_state22 == 1'b1) & (bytePlanes_01_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op169_write_state22 == 1'b1) & (img_full_n == 1'b0)) | ((ap_predicate_op163_read_state22 == 1'b1) & (bytePlanes_01_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((ap_predicate_op169_write_state22 == 1'b1) & (img_full_n == 1'b0)) | ((ap_predicate_op163_read_state22 == 1'b1) & (bytePlanes_01_empty_n == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((ap_predicate_op173_write_state23 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_predicate_op173_write_state23 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_predicate_op173_write_state23 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_predicate_op177_write_state24 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_predicate_op177_write_state24 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_predicate_op177_write_state24 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((ap_predicate_op184_write_state25 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_predicate_op184_write_state25 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_predicate_op184_write_state25 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((img_full_n == 1'b0) & (ap_predicate_op188_write_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((img_full_n == 1'b0) & (ap_predicate_op188_write_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((img_full_n == 1'b0) & (ap_predicate_op188_write_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((img_full_n == 1'b0) & (or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((img_full_n == 1'b0) & (or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((img_full_n == 1'b0) & (or_ln478_6_reg_1630 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = (((bytePlanes_12_empty_n == 1'b0) & (ap_predicate_op254_read_state32 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((img_full_n == 1'b0) & (or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((bytePlanes_12_empty_n == 1'b0) & (ap_predicate_op254_read_state32 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((img_full_n == 1'b0) & (or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((bytePlanes_12_empty_n == 1'b0) & (ap_predicate_op254_read_state32 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((img_full_n == 1'b0) & (or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_01001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln460_reg_1602 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op266_write_state33 == 1'b1))));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln460_reg_1602 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op266_write_state33 == 1'b1))));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln460_reg_1602 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op266_write_state33 == 1'b1))));
end

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_01001 = ((ap_predicate_op285_write_state34 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_11001 = ((ap_predicate_op285_write_state34 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((ap_predicate_op285_write_state34 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_01001 = ((ap_predicate_op290_write_state35 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_11001 = ((ap_predicate_op290_write_state35 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((ap_predicate_op290_write_state35 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_01001 = ((ap_predicate_op295_write_state36 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_11001 = ((ap_predicate_op295_write_state36 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((ap_predicate_op295_write_state36 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_01001 = ((ap_predicate_op300_write_state37 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_11001 = ((ap_predicate_op300_write_state37 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((ap_predicate_op300_write_state37 == 1'b1) & (img_full_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp1_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_01001 = ((img_full_n == 1'b0) & (ap_predicate_op305_write_state38 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage7_11001 = ((img_full_n == 1'b0) & (ap_predicate_op305_write_state38 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((img_full_n == 1'b0) & (ap_predicate_op305_write_state38 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (1'b0 == Width_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == VideoFormat_empty_n) | (1'b0 == WidthInBytes_empty_n) | (1'b0 == Width_empty_n) | (1'b0 == Height_empty_n));
end

assign ap_block_state19_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage1_iter0 = (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln733_reg_1466 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op154_write_state20 == 1'b1)));
end

always @ (*) begin
    ap_block_state21_pp0_stage2_iter0 = (((ap_predicate_op158_read_state21 == 1'b1) & (bytePlanes_01_empty_n == 1'b0)) | ((img_full_n == 1'b0) & (ap_predicate_op161_write_state21 == 1'b1)));
end

always @ (*) begin
    ap_block_state22_pp0_stage3_iter0 = (((ap_predicate_op169_write_state22 == 1'b1) & (img_full_n == 1'b0)) | ((ap_predicate_op163_read_state22 == 1'b1) & (bytePlanes_01_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state23_pp0_stage4_iter0 = ((ap_predicate_op173_write_state23 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage5_iter0 = ((ap_predicate_op177_write_state24 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage6_iter0 = ((ap_predicate_op184_write_state25 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage7_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op188_write_state26 == 1'b1));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter1 = ((img_full_n == 1'b0) & (or_ln759_7_reg_1506 == 1'd1));
end

assign ap_block_state31_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp1_stage1_iter0 = ((bytePlanes_12_empty_n == 1'b0) & (ap_predicate_op254_read_state32 == 1'b1));
end

always @ (*) begin
    ap_block_state33_pp1_stage2_iter0 = (((bytePlanes_01_empty_n == 1'b0) & (icmp_ln460_reg_1602 == 1'd0)) | ((img_full_n == 1'b0) & (ap_predicate_op266_write_state33 == 1'b1)));
end

always @ (*) begin
    ap_block_state34_pp1_stage3_iter0 = ((ap_predicate_op285_write_state34 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state35_pp1_stage4_iter0 = ((ap_predicate_op290_write_state35 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state36_pp1_stage5_iter0 = ((ap_predicate_op295_write_state36 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state37_pp1_stage6_iter0 = ((ap_predicate_op300_write_state37 == 1'b1) & (img_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state38_pp1_stage7_iter0 = ((img_full_n == 1'b0) & (ap_predicate_op305_write_state38 == 1'b1));
end

always @ (*) begin
    ap_block_state39_pp1_stage0_iter1 = ((img_full_n == 1'b0) & (or_ln478_6_reg_1630 == 1'd1));
end

always @ (*) begin
    ap_block_state40_pp1_stage1_iter1 = ((img_full_n == 1'b0) & (or_ln478_7_reg_1634_pp1_iter1_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op154_write_state20 = ((or_ln759_reg_1478 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op158_read_state21 = ((or_ln740_reg_1470 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_write_state21 = ((or_ln759_1_reg_1482 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_read_state22 = ((or_ln742_reg_1474 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_write_state22 = ((or_ln759_2_reg_1486 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op173_write_state23 = ((or_ln759_3_reg_1490 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_write_state24 = ((or_ln759_4_reg_1494 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_write_state25 = ((or_ln759_5_reg_1498 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op188_write_state26 = ((or_ln759_6_reg_1502 == 1'd1) & (icmp_ln733_reg_1466 == 1'd0));
end

always @ (*) begin
    ap_predicate_op254_read_state32 = ((demorgan_reg_1593 == 1'd0) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_write_state33 = ((or_ln478_reg_1606 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op285_write_state34 = ((or_ln478_1_reg_1610 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op290_write_state35 = ((or_ln478_2_reg_1614 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op295_write_state36 = ((or_ln478_3_reg_1618 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op300_write_state37 = ((or_ln478_4_reg_1622 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

always @ (*) begin
    ap_predicate_op305_write_state38 = ((or_ln478_5_reg_1626 == 1'd1) & (icmp_ln460_reg_1602 == 1'd0));
end

assign brmerge35_not_i_fu_761_p2 = ((VideoFormat_read_reg_1346 == 6'd19) ? 1'b1 : 1'b0);

assign cmp103_i_fu_429_p2 = ((trunc_ln719_fu_413_p1 == 2'd0) ? 1'b1 : 1'b0);

assign cmp47_i_fu_863_p2 = (($signed(zext_ln460_fu_859_p1) < $signed(sub46_cast17_i_reg_1530)) ? 1'b1 : 1'b0);

assign cmp97_i_fu_423_p2 = ((trunc_ln719_fu_413_p1 != 2'd1) ? 1'b1 : 1'b0);

assign demorgan_fu_843_p2 = (trunc_ln453_fu_834_p1 & brmerge35_not_i_reg_1544);

assign div191_i_fu_438_p3 = ((icmp_ln722_reg_1359[0:0] == 1'b1) ? 4'd8 : rem84_op_i_cast_fu_435_p1);

assign div48_i_fu_753_p3 = ((icmp_ln450_fu_724_p2[0:0] == 1'b1) ? 4'd8 : rem_op_i_cast_fu_749_p1);

assign grp_fu_1332_p0 = grp_fu_1332_p00;

assign grp_fu_1332_p00 = add_ln718_fu_385_p2;

assign grp_fu_1332_p1 = 25'd5462;

assign grp_fu_335_p2 = ((Height_read_reg_1339 == 12'd0) ? 1'b1 : 1'b0);

assign grp_fu_395_p0 = {{add_ln717_fu_369_p2[15:4]}};

assign grp_fu_395_p1 = 12'd3;

assign icmp_ln450_fu_724_p2 = ((remainPix_fu_702_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln453_1_fu_838_p2 = ((y_reg_313 == Height_read_reg_1339) ? 1'b1 : 1'b0);

assign icmp_ln460_fu_854_p2 = ((ap_phi_mux_x_phi_fu_328_p4 == trunc_ln447_1_reg_1520) ? 1'b1 : 1'b0);

assign icmp_ln478_1_fu_782_p2 = ((tmp_fu_772_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln478_2_fu_788_p2 = ((div48_i_fu_753_p3 > 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln478_3_fu_804_p2 = ((tmp_1_fu_794_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln478_4_fu_810_p2 = ((div48_i_fu_753_p3 > 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln478_5_fu_816_p2 = ((div48_i_fu_753_p3 > 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln478_6_fu_822_p2 = ((div48_i_fu_753_p3 > 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln478_fu_766_p2 = ((div48_i_fu_753_p3 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln722_fu_350_p2 = ((remainPix_1_fu_346_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln725_1_fu_513_p2 = ((y_1_reg_291 == Height_read_reg_1339) ? 1'b1 : 1'b0);

assign icmp_ln733_fu_524_p2 = ((ap_phi_mux_x_1_phi_fu_306_p4 == trunc_ln1_reg_1380) ? 1'b1 : 1'b0);

assign icmp_ln740_fu_533_p2 = (($signed(zext_ln733_fu_529_p1) < $signed(sub95_i_reg_1386)) ? 1'b1 : 1'b0);

assign icmp_ln759_1_fu_461_p2 = ((tmp_2_fu_451_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln759_2_fu_467_p2 = ((div191_i_fu_438_p3 > 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln759_3_fu_483_p2 = ((tmp_3_fu_473_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln759_4_fu_489_p2 = ((div191_i_fu_438_p3 > 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln759_5_fu_495_p2 = ((div191_i_fu_438_p3 > 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln759_6_fu_501_p2 = ((div191_i_fu_438_p3 > 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln759_fu_445_p2 = ((div191_i_fu_438_p3 != 4'd0) ? 1'b1 : 1'b0);

assign or_ln174_4_1_i_fu_1119_p7 = {{{{{{{{{{8'd0}, {p_Result_5_1_1_i_fu_1110_p4}}}, {p_Result_1_1_i_reg_1661}}}, {8'd0}}}, {p_Result_5_1_i_fu_1101_p4}}}, {p_Result_1_i_reg_1656}};

assign or_ln174_4_2_i_fu_1152_p7 = {{{{{{{{{{8'd0}, {p_Result_5_2_1_i_fu_1143_p4}}}, {p_Result_2_1_i_reg_1671}}}, {8'd0}}}, {p_Result_5_2_i_fu_1134_p4}}}, {p_Result_2_i_reg_1666}};

assign or_ln174_4_3_i_fu_1185_p7 = {{{{{{{{{{8'd0}, {p_Result_5_3_1_i_fu_1176_p4}}}, {p_Result_3_1_i_reg_1681}}}, {8'd0}}}, {p_Result_5_3_i_fu_1167_p4}}}, {p_Result_3_i_reg_1676}};

assign or_ln174_4_4_i_fu_1218_p7 = {{{{{{{{{{8'd0}, {p_Result_5_4_1_i_fu_1209_p4}}}, {p_Result_4_1_i_reg_1691}}}, {8'd0}}}, {p_Result_5_4_i_fu_1200_p4}}}, {p_Result_4_i_reg_1686}};

assign or_ln174_4_5_i_fu_1251_p7 = {{{{{{{{{{8'd0}, {p_Result_5_5_1_i_fu_1242_p4}}}, {p_Result_520_1_i_reg_1701}}}, {8'd0}}}, {p_Result_5_5_i_fu_1233_p4}}}, {p_Result_520_i_reg_1696}};

assign or_ln174_4_6_i_fu_1284_p7 = {{{{{{{{{{8'd0}, {p_Result_5_6_1_i_fu_1275_p4}}}, {p_Result_6_1_i_reg_1711}}}, {8'd0}}}, {p_Result_5_6_i_fu_1266_p4}}}, {p_Result_6_i_reg_1706}};

assign or_ln174_4_7_i_fu_1317_p7 = {{{{{{{{{{8'd0}, {p_Result_5_7_1_i_fu_1308_p4}}}, {p_Result_7_1_i_reg_1721}}}, {8'd0}}}, {p_Result_5_7_i_fu_1299_p4}}}, {p_Result_7_i_reg_1716}};

assign or_ln174_4_i_fu_944_p7 = {{{{{{{{{{8'd0}, {p_Result_5_0_1_i_fu_934_p4}}}, {p_Result_0_1_i_fu_924_p4}}}, {8'd0}}}, {trunc_ln674_1_fu_920_p1}}}, {trunc_ln674_fu_916_p1}};

assign or_ln174_9_2_i_fu_627_p3 = {{trunc_ln174_1_fu_623_p1}, {tmp_8_i_reg_1515}};

assign or_ln174_9_5_i_fu_671_p3 = {{trunc_ln174_2_fu_667_p1}, {tmp_9_i_fu_657_p4}};

assign or_ln478_1_fu_873_p2 = (icmp_ln478_1_reg_1554 | cmp47_i_fu_863_p2);

assign or_ln478_2_fu_878_p2 = (icmp_ln478_2_reg_1559 | cmp47_i_fu_863_p2);

assign or_ln478_3_fu_883_p2 = (icmp_ln478_3_reg_1564 | cmp47_i_fu_863_p2);

assign or_ln478_4_fu_888_p2 = (icmp_ln478_4_reg_1569 | cmp47_i_fu_863_p2);

assign or_ln478_5_fu_893_p2 = (icmp_ln478_5_reg_1574 | cmp47_i_fu_863_p2);

assign or_ln478_6_fu_898_p2 = (icmp_ln478_6_reg_1579 | cmp47_i_fu_863_p2);

assign or_ln478_7_fu_903_p2 = (icmp_ln450_reg_1525 | cmp47_i_fu_863_p2);

assign or_ln478_fu_868_p2 = (icmp_ln478_reg_1549 | cmp47_i_fu_863_p2);

assign or_ln740_fu_538_p2 = (icmp_ln740_fu_533_p2 | cmp97_i_reg_1391);

assign or_ln742_fu_543_p2 = (icmp_ln740_fu_533_p2 | cmp103_i_reg_1396);

assign or_ln759_1_fu_553_p2 = (icmp_ln759_1_reg_1422 | icmp_ln740_fu_533_p2);

assign or_ln759_2_fu_558_p2 = (icmp_ln759_2_reg_1427 | icmp_ln740_fu_533_p2);

assign or_ln759_3_fu_563_p2 = (icmp_ln759_3_reg_1432 | icmp_ln740_fu_533_p2);

assign or_ln759_4_fu_568_p2 = (icmp_ln759_4_reg_1437 | icmp_ln740_fu_533_p2);

assign or_ln759_5_fu_573_p2 = (icmp_ln759_5_reg_1442 | icmp_ln740_fu_533_p2);

assign or_ln759_6_fu_578_p2 = (icmp_ln759_6_reg_1447 | icmp_ln740_fu_533_p2);

assign or_ln759_7_fu_583_p2 = (icmp_ln740_fu_533_p2 | icmp_ln722_reg_1359);

assign or_ln759_fu_548_p2 = (icmp_ln759_reg_1417 | icmp_ln740_fu_533_p2);

assign p_Result_0_1_i_fu_924_p4 = {{bytePlanes_01_dout[15:8]}};

assign p_Result_5_0_1_i_fu_934_p4 = {{rdUv_V_fu_228[15:8]}};

assign p_Result_5_1_1_i_fu_1110_p4 = {{p_Val2_s_reg_1638[31:24]}};

assign p_Result_5_1_i_fu_1101_p4 = {{p_Val2_s_reg_1638[23:16]}};

assign p_Result_5_2_1_i_fu_1143_p4 = {{p_Val2_s_reg_1638[47:40]}};

assign p_Result_5_2_i_fu_1134_p4 = {{p_Val2_s_reg_1638[39:32]}};

assign p_Result_5_3_1_i_fu_1176_p4 = {{p_Val2_s_reg_1638[63:56]}};

assign p_Result_5_3_i_fu_1167_p4 = {{p_Val2_s_reg_1638[55:48]}};

assign p_Result_5_4_1_i_fu_1209_p4 = {{p_Val2_s_reg_1638[79:72]}};

assign p_Result_5_4_i_fu_1200_p4 = {{p_Val2_s_reg_1638[71:64]}};

assign p_Result_5_5_1_i_fu_1242_p4 = {{p_Val2_s_reg_1638[95:88]}};

assign p_Result_5_5_i_fu_1233_p4 = {{p_Val2_s_reg_1638[87:80]}};

assign p_Result_5_6_1_i_fu_1275_p4 = {{p_Val2_s_reg_1638[111:104]}};

assign p_Result_5_6_i_fu_1266_p4 = {{p_Val2_s_reg_1638[103:96]}};

assign p_Result_5_7_1_i_fu_1308_p4 = {{p_Val2_s_reg_1638[127:120]}};

assign p_Result_5_7_i_fu_1299_p4 = {{p_Val2_s_reg_1638[119:112]}};

assign rem84_op_i_cast_fu_435_p1 = rem84_op_i_reg_1365;

assign rem_op_i_cast_fu_749_p1 = rem_op_i_fu_740_p4;

assign rem_op_i_fu_740_p4 = {{widthInPix_reg_1351[3:1]}};

assign remainPix_1_fu_346_p1 = Width_dout[3:0];

assign remainPix_fu_702_p1 = widthInPix_reg_1351[3:0];

assign sub46_cast17_i_fu_736_p1 = $signed(sub46_i_fu_730_p2);

assign sub46_i_fu_730_p2 = ($signed(trunc_ln447_1_fu_714_p4) + $signed(12'd4095));

assign sub95_i_fu_417_p2 = ($signed(zext_ln718_fu_410_p1) + $signed(11'd2047));

assign tmp_1_fu_794_p4 = {{div48_i_fu_753_p3[3:2]}};

assign tmp_2_fu_451_p4 = {{div191_i_fu_438_p3[3:1]}};

assign tmp_3_fu_473_p4 = {{div191_i_fu_438_p3[3:2]}};

assign tmp_9_i_fu_657_p4 = {{rd1_V_fu_220[127:112]}};

assign tmp_fu_772_p4 = {{div48_i_fu_753_p3[3:1]}};

assign trunc_ln174_1_fu_623_p1 = rd1_V_fu_220[15:0];

assign trunc_ln174_2_fu_667_p1 = rd2_V_fu_224[31:0];

assign trunc_ln174_fu_588_p1 = bytePlanes_01_dout[47:0];

assign trunc_ln447_1_fu_714_p4 = {{add_ln447_fu_708_p2[15:4]}};

assign trunc_ln453_fu_834_p1 = y_reg_313[0:0];

assign trunc_ln674_1_fu_920_p1 = rdUv_V_fu_228[7:0];

assign trunc_ln674_fu_916_p1 = bytePlanes_01_dout[7:0];

assign trunc_ln719_fu_413_p1 = grp_fu_395_p2[1:0];

assign trunc_ln_fu_375_p4 = {{add_ln717_fu_369_p2[15:4]}};

assign x_2_fu_848_p2 = (ap_phi_mux_x_phi_fu_328_p4 + 12'd1);

assign x_3_fu_518_p2 = (ap_phi_mux_x_1_phi_fu_306_p4 + 10'd1);

assign y_2_fu_828_p2 = (y_reg_313 + 12'd1);

assign y_3_fu_507_p2 = (y_1_reg_291 + 12'd1);

assign zext_ln447_fu_705_p1 = widthInPix_reg_1351;

assign zext_ln460_fu_859_p1 = ap_phi_mux_x_phi_fu_328_p4;

assign zext_ln717_fu_366_p1 = widthInPix_reg_1351;

assign zext_ln718_fu_410_p1 = trunc_ln1_reg_1380;

assign zext_ln733_fu_529_p1 = ap_phi_mux_x_1_phi_fu_306_p4;

endmodule //bd_v_frmbuf_rd_0_0_Bytes2MultiPixStream
