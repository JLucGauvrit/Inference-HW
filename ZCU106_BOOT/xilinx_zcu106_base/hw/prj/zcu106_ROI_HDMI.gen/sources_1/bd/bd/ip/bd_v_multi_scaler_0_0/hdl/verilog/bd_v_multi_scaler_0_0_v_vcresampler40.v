// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_vcresampler40 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_5_dout,
        stream_5_empty_n,
        stream_5_read,
        stream_out_din,
        stream_out_full_n,
        stream_out_write,
        HeightOut_dout,
        HeightOut_empty_n,
        HeightOut_read,
        WidthOut_dout,
        WidthOut_empty_n,
        WidthOut_read,
        bPassThruVcrDown_loc_dout,
        bPassThruVcrDown_loc_empty_n,
        bPassThruVcrDown_loc_read,
        HeightOut_out_din,
        HeightOut_out_full_n,
        HeightOut_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_5_dout;
input   stream_5_empty_n;
output   stream_5_read;
output  [47:0] stream_out_din;
input   stream_out_full_n;
output   stream_out_write;
input  [15:0] HeightOut_dout;
input   HeightOut_empty_n;
output   HeightOut_read;
input  [15:0] WidthOut_dout;
input   WidthOut_empty_n;
output   WidthOut_read;
input  [0:0] bPassThruVcrDown_loc_dout;
input   bPassThruVcrDown_loc_empty_n;
output   bPassThruVcrDown_loc_read;
output  [15:0] HeightOut_out_din;
input   HeightOut_out_full_n;
output   HeightOut_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_5_read;
reg[47:0] stream_out_din;
reg stream_out_write;
reg HeightOut_read;
reg WidthOut_read;
reg bPassThruVcrDown_loc_read;
reg HeightOut_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_5_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_890;
reg   [0:0] cmp24_i_i_reg_871;
reg    stream_out_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln78_reg_890_pp0_iter1_reg;
reg   [0:0] tmp_reg_881;
reg   [0:0] bPassThruVcrDown_loc_read_reg_767;
reg    ap_enable_reg_pp0_iter3;
reg    HeightOut_blk_n;
reg    WidthOut_blk_n;
reg    bPassThruVcrDown_loc_blk_n;
reg    HeightOut_out_blk_n;
reg   [14:0] x_reg_265;
reg   [14:0] x_reg_265_pp0_iter1_reg;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op72_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op147_write_state6;
reg    ap_block_state6_pp0_stage0_iter2;
reg    ap_predicate_op152_write_state7;
reg    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] HeightOut_read_reg_761;
reg   [14:0] loopWidth_reg_772;
wire   [15:0] zext_ln73_fu_310_p1;
reg   [15:0] zext_ln73_reg_778;
wire    ap_CS_fsm_state2;
wire   [15:0] loopHeight_fu_314_p2;
reg   [15:0] loopHeight_reg_783;
wire   [0:0] icmp_ln75_fu_319_p2;
reg   [0:0] icmp_ln75_reg_788;
wire   [0:0] cmp18582_i_i_fu_325_p2;
reg   [0:0] cmp18582_i_i_reg_852;
wire   [14:0] add_ln75_fu_330_p2;
reg   [14:0] add_ln75_reg_856;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln75_1_fu_340_p2;
wire   [0:0] empty_fu_350_p1;
reg   [0:0] empty_reg_865;
wire   [0:0] cmp24_i_i_fu_354_p2;
wire   [0:0] cmp76_i_i_fu_359_p2;
reg   [0:0] cmp76_i_i_reg_875;
wire   [14:0] add_ln78_fu_373_p2;
reg   [14:0] add_ln78_reg_885;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln78_fu_379_p2;
wire   [63:0] idxprom5_i240_i_i_fu_388_p1;
reg   [63:0] idxprom5_i240_i_i_reg_894;
reg   [10:0] linebuf_c_val_V_0_addr_reg_900;
reg   [10:0] linebuf_c_val_V_0_addr_reg_900_pp0_iter1_reg;
reg   [10:0] linebuf_y_val_V_0_addr_reg_906;
wire   [7:0] pixbuf_c_val_V_2_0_4_fu_497_p1;
reg   [7:0] pixbuf_c_val_V_2_0_4_reg_912;
reg   [7:0] pixbuf_c_val_V_2_1_4_reg_919;
wire   [7:0] outpix_val_V_0_fu_530_p1;
reg   [7:0] outpix_val_V_0_reg_931;
reg   [7:0] outpix_val_V_3_reg_936;
reg   [7:0] outpix_val_V_1_reg_941;
reg   [7:0] outpix_val_V_4_reg_946;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter2_state6;
wire   [10:0] linebuf_y_val_V_0_address0;
reg    linebuf_y_val_V_0_ce0;
reg    linebuf_y_val_V_0_we0;
wire   [15:0] linebuf_y_val_V_0_d0;
wire   [10:0] linebuf_y_val_V_0_address1;
reg    linebuf_y_val_V_0_ce1;
wire   [15:0] linebuf_y_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_0_address0;
reg    linebuf_c_val_V_0_ce0;
reg    linebuf_c_val_V_0_we0;
wire   [15:0] linebuf_c_val_V_0_d0;
wire   [10:0] linebuf_c_val_V_0_address1;
reg    linebuf_c_val_V_0_ce1;
wire   [15:0] linebuf_c_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_1_address0;
reg    linebuf_c_val_V_1_ce0;
reg    linebuf_c_val_V_1_we0;
wire   [15:0] linebuf_c_val_V_1_d0;
wire   [10:0] linebuf_c_val_V_1_address1;
reg    linebuf_c_val_V_1_ce1;
wire   [15:0] linebuf_c_val_V_1_q1;
reg   [14:0] y_reg_254;
wire    ap_CS_fsm_state8;
reg   [14:0] ap_phi_mux_x_phi_fu_269_p4;
reg   [7:0] ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_280_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_277;
wire   [7:0] ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_277;
reg   [7:0] ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_277;
reg   [7:0] ap_phi_mux_PixBufVal_val_V_0_1_phi_fu_289_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_1_reg_286;
wire   [7:0] ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_1_reg_286;
reg   [7:0] ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_1_reg_286;
wire   [63:0] zext_ln78_fu_511_p1;
reg   [7:0] mpix_y_val_V_0_fu_120;
wire   [7:0] pix_val_V_0_fu_393_p1;
reg   [7:0] mpix_c_val_V_0_fu_124;
reg   [7:0] pix_val_V_2_1_fu_128;
reg   [7:0] mpix_y_val_V_1_fu_132;
reg   [7:0] mpix_c_val_V_1_fu_136;
reg   [7:0] pix_val_V_5_1_fu_140;
reg   [7:0] mpix_y_val_V_0_1_fu_144;
reg   [7:0] mpix_y_val_V_1_1_fu_148;
reg   [7:0] pixbuf_c_val_V_2_0_1_fu_152;
reg   [7:0] pixbuf_c_val_V_2_1_fu_156;
reg    ap_block_state1;
wire   [47:0] or_ln174_8_i_i_fu_717_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_i_i_fu_746_p7;
wire   [0:0] xor_ln35_fu_305_p2;
wire   [15:0] zext_ln75_fu_336_p1;
wire   [15:0] out_y_fu_345_p2;
wire   [10:0] empty_113_fu_384_p1;
wire   [7:0] pixbuf_c_val_V_2_1_3_fu_582_p3;
wire   [7:0] pixbuf_c_val_V_2_0_fu_576_p3;
wire   [7:0] pixbuf_c_val_V_1_0_fu_553_p1;
wire   [8:0] shl_ln_fu_597_p3;
wire   [9:0] zext_ln1346_fu_608_p1;
wire   [9:0] zext_ln215_fu_604_p1;
wire   [8:0] zext_ln1346_1_fu_612_p1;
wire   [8:0] add_ln1346_1_fu_622_p2;
wire   [9:0] zext_ln1346_3_fu_628_p1;
wire   [9:0] add_ln1346_fu_616_p2;
wire   [9:0] add_ln1346_2_fu_632_p2;
wire   [7:0] pixbuf_c_val_V_1_1_fu_557_p4;
wire   [8:0] shl_ln1345_1_fu_648_p3;
wire   [9:0] zext_ln1346_2_fu_659_p1;
wire   [9:0] zext_ln215_36_fu_655_p1;
wire   [8:0] zext_ln1346_4_fu_663_p1;
wire   [8:0] add_ln1346_4_fu_673_p2;
wire   [9:0] zext_ln1346_5_fu_679_p1;
wire   [9:0] add_ln1346_3_fu_667_p2;
wire   [9:0] add_ln1346_5_fu_683_p2;
wire   [7:0] outpix_val_V_4_0_i_i_fu_740_p3;
wire   [7:0] outpix_val_V_1_0_i_i_fu_734_p3;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_68;
reg    ap_enable_state4_pp0_iter0_stage0;
reg    ap_enable_operation_92;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_predicate_op113_store_state6;
reg    ap_enable_operation_113;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_91;
reg    ap_enable_operation_104;
reg    ap_enable_operation_108;
reg    ap_enable_operation_96;
reg    ap_enable_operation_109;
reg    ap_enable_operation_121;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_275;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_0_address0),
    .ce0(linebuf_y_val_V_0_ce0),
    .we0(linebuf_y_val_V_0_we0),
    .d0(linebuf_y_val_V_0_d0),
    .address1(linebuf_y_val_V_0_address1),
    .ce1(linebuf_y_val_V_0_ce1),
    .q1(linebuf_y_val_V_0_q1)
);

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_0_address0),
    .ce0(linebuf_c_val_V_0_ce0),
    .we0(linebuf_c_val_V_0_we0),
    .d0(linebuf_c_val_V_0_d0),
    .address1(linebuf_c_val_V_0_address1),
    .ce1(linebuf_c_val_V_0_ce1),
    .q1(linebuf_c_val_V_0_q1)
);

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_1_address0),
    .ce0(linebuf_c_val_V_1_ce0),
    .we0(linebuf_c_val_V_1_we0),
    .d0(linebuf_c_val_V_1_d0),
    .address1(linebuf_c_val_V_1_address1),
    .ce1(linebuf_c_val_V_1_ce1),
    .q1(linebuf_c_val_V_1_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_1_fu_340_p2 == 1'd1) | (icmp_ln75_reg_788 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter2_state6)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state6))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_275)) begin
        if (((cmp24_i_i_reg_871 == 1'd0) & (icmp_ln78_reg_890 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_1_reg_286 <= pixbuf_c_val_V_2_0_4_fu_497_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_1_reg_286 <= ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_1_reg_286;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_275)) begin
        if (((cmp24_i_i_reg_871 == 1'd0) & (icmp_ln78_reg_890 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_277 <= {{linebuf_c_val_V_0_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_277 <= ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_277;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
        x_reg_265 <= 15'd0;
    end else if (((icmp_ln78_reg_890 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_reg_265 <= add_ln78_reg_885;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_reg_254 <= add_ln75_reg_856;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln75_fu_319_p2 == 1'd1))) begin
        y_reg_254 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HeightOut_read_reg_761 <= HeightOut_dout;
        bPassThruVcrDown_loc_read_reg_767 <= bPassThruVcrDown_loc_dout;
        loopWidth_reg_772 <= {{WidthOut_dout[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_reg_788 == 1'd1))) begin
        add_ln75_reg_856 <= add_ln75_fu_330_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln78_reg_885 <= add_ln78_fu_373_p2;
        ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_1_reg_286 <= ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_1_reg_286;
        ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_277 <= ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_277;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln75_fu_319_p2 == 1'd1))) begin
        cmp18582_i_i_reg_852 <= cmp18582_i_i_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
        cmp24_i_i_reg_871 <= cmp24_i_i_fu_354_p2;
        cmp76_i_i_reg_875 <= cmp76_i_i_fu_359_p2;
        empty_reg_865 <= empty_fu_350_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln75_reg_788 <= icmp_ln75_fu_319_p2;
        loopHeight_reg_783 <= loopHeight_fu_314_p2;
        zext_ln73_reg_778[0] <= zext_ln73_fu_310_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_reg_890 <= icmp_ln78_fu_379_p2;
        icmp_ln78_reg_890_pp0_iter1_reg <= icmp_ln78_reg_890;
        linebuf_c_val_V_0_addr_reg_900_pp0_iter1_reg <= linebuf_c_val_V_0_addr_reg_900;
        x_reg_265_pp0_iter1_reg <= x_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln78_fu_379_p2 == 1'd0))) begin
        idxprom5_i240_i_i_reg_894[10 : 0] <= idxprom5_i240_i_i_fu_388_p1[10 : 0];
        linebuf_c_val_V_0_addr_reg_900 <= idxprom5_i240_i_i_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_890 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_y_val_V_0_addr_reg_906 <= idxprom5_i240_i_i_reg_894;
        pixbuf_c_val_V_2_0_4_reg_912 <= pixbuf_c_val_V_2_0_4_fu_497_p1;
        pixbuf_c_val_V_2_1_4_reg_919 <= {{linebuf_c_val_V_0_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp24_i_i_reg_871 == 1'd1) & (icmp_ln78_reg_890 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_c_val_V_0_fu_124 <= {{stream_5_dout[15:8]}};
        mpix_c_val_V_1_fu_136 <= {{stream_5_dout[39:32]}};
        mpix_y_val_V_0_1_fu_144 <= pix_val_V_0_fu_393_p1;
        mpix_y_val_V_0_fu_120 <= pix_val_V_0_fu_393_p1;
        mpix_y_val_V_1_1_fu_148 <= {{stream_5_dout[31:24]}};
        mpix_y_val_V_1_fu_132 <= {{stream_5_dout[31:24]}};
        pix_val_V_2_1_fu_128 <= {{stream_5_dout[23:16]}};
        pix_val_V_5_1_fu_140 <= {{stream_5_dout[47:40]}};
        pixbuf_c_val_V_2_0_1_fu_152 <= {{stream_5_dout[15:8]}};
        pixbuf_c_val_V_2_1_fu_156 <= {{stream_5_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outpix_val_V_0_reg_931 <= outpix_val_V_0_fu_530_p1;
        outpix_val_V_3_reg_936 <= {{linebuf_y_val_V_0_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_865 == 1'd0))) begin
        outpix_val_V_1_reg_941 <= {{add_ln1346_2_fu_632_p2[9:2]}};
        outpix_val_V_4_reg_946 <= {{add_ln1346_5_fu_683_p2[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
        tmp_reg_881 <= out_y_fu_345_p2[32'd15];
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_blk_n = HeightOut_empty_n;
    end else begin
        HeightOut_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_out_blk_n = HeightOut_out_full_n;
    end else begin
        HeightOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_out_write = 1'b1;
    end else begin
        HeightOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_read = 1'b1;
    end else begin
        HeightOut_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_blk_n = WidthOut_empty_n;
    end else begin
        WidthOut_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_read = 1'b1;
    end else begin
        WidthOut_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln78_fu_379_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_1_fu_340_p2 == 1'd1) | (icmp_ln75_reg_788 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_871 == 1'd1))) begin
        ap_phi_mux_PixBufVal_val_V_0_1_phi_fu_289_p4 = pixbuf_c_val_V_2_0_1_fu_152;
    end else begin
        ap_phi_mux_PixBufVal_val_V_0_1_phi_fu_289_p4 = ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_1_reg_286;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_871 == 1'd1))) begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_280_p4 = pixbuf_c_val_V_2_1_fu_156;
    end else begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_280_p4 = ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_277;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_269_p4 = add_ln78_reg_885;
    end else begin
        ap_phi_mux_x_phi_fu_269_p4 = x_reg_265;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_1_fu_340_p2 == 1'd1) | (icmp_ln75_reg_788 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruVcrDown_loc_blk_n = bPassThruVcrDown_loc_empty_n;
    end else begin
        bPassThruVcrDown_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruVcrDown_loc_read = 1'b1;
    end else begin
        bPassThruVcrDown_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (cmp24_i_i_reg_871 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_c_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_y_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp24_i_i_reg_871 == 1'd1) & (icmp_ln78_reg_890 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_5_blk_n = stream_5_empty_n;
    end else begin
        stream_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op72_read_state5 == 1'b1))) begin
        stream_5_read = 1'b1;
    end else begin
        stream_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (bPassThruVcrDown_loc_read_reg_767 == 1'd0) & (tmp_reg_881 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThruVcrDown_loc_read_reg_767 == 1'd1) & (tmp_reg_881 == 1'd0) & (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_blk_n = stream_out_full_n;
    end else begin
        stream_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op152_write_state7 == 1'b1))) begin
            stream_out_din = or_ln174_i_i_fu_746_p7;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op147_write_state6 == 1'b1))) begin
            stream_out_din = or_ln174_8_i_i_fu_717_p7;
        end else begin
            stream_out_din = 'bx;
        end
    end else begin
        stream_out_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op152_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op147_write_state6 == 1'b1)))) begin
        stream_out_write = 1'b1;
    end else begin
        stream_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_1_fu_340_p2 == 1'd1) | (icmp_ln75_reg_788 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_1_fu_340_p2 == 1'd0) & (cmp18582_i_i_reg_852 == 1'd0) & (icmp_ln75_reg_788 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HeightOut_out_din = HeightOut_dout;

assign add_ln1346_1_fu_622_p2 = (zext_ln1346_1_fu_612_p1 + 9'd2);

assign add_ln1346_2_fu_632_p2 = (zext_ln1346_3_fu_628_p1 + add_ln1346_fu_616_p2);

assign add_ln1346_3_fu_667_p2 = (zext_ln1346_2_fu_659_p1 + zext_ln215_36_fu_655_p1);

assign add_ln1346_4_fu_673_p2 = (zext_ln1346_4_fu_663_p1 + 9'd2);

assign add_ln1346_5_fu_683_p2 = (zext_ln1346_5_fu_679_p1 + add_ln1346_3_fu_667_p2);

assign add_ln1346_fu_616_p2 = (zext_ln1346_fu_608_p1 + zext_ln215_fu_604_p1);

assign add_ln75_fu_330_p2 = (y_reg_254 + 15'd1);

assign add_ln78_fu_373_p2 = (ap_phi_mux_x_phi_fu_269_p4 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op152_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op147_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_5_empty_n == 1'b0) & (ap_predicate_op72_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op152_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op147_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_5_empty_n == 1'b0) & (ap_predicate_op72_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op152_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_full_n == 1'b0) & (ap_predicate_op147_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_5_empty_n == 1'b0) & (ap_predicate_op72_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((bPassThruVcrDown_loc_empty_n == 1'b0) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((stream_5_empty_n == 1'b0) & (ap_predicate_op72_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((stream_out_full_n == 1'b0) & (ap_predicate_op147_write_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter3 = ((stream_out_full_n == 1'b0) & (ap_predicate_op152_write_state7 == 1'b1));
end

always @ (*) begin
    ap_condition_275 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_104 = (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_108 = (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_109 = (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_113 = (ap_predicate_op113_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_121 = (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_68 = (icmp_ln78_fu_379_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_91 = (icmp_ln78_reg_890 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_92 = (icmp_ln78_reg_890 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_96 = (icmp_ln78_reg_890 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_1_reg_286 = 'bx;

assign ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_277 = 'bx;

always @ (*) begin
    ap_predicate_op113_store_state6 = ((icmp_ln78_reg_890_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_871 == 1'd1));
end

always @ (*) begin
    ap_predicate_op147_write_state6 = ((bPassThruVcrDown_loc_read_reg_767 == 1'd1) & (tmp_reg_881 == 1'd0) & (icmp_ln78_reg_890_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op152_write_state7 = ((bPassThruVcrDown_loc_read_reg_767 == 1'd0) & (tmp_reg_881 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_read_state5 = ((cmp24_i_i_reg_871 == 1'd1) & (icmp_ln78_reg_890 == 1'd0));
end

assign cmp18582_i_i_fu_325_p2 = ((loopWidth_reg_772 == 15'd0) ? 1'b1 : 1'b0);

assign cmp24_i_i_fu_354_p2 = ((zext_ln75_fu_336_p1 < HeightOut_read_reg_761) ? 1'b1 : 1'b0);

assign cmp76_i_i_fu_359_p2 = ((y_reg_254 != 15'd0) ? 1'b1 : 1'b0);

assign empty_113_fu_384_p1 = ap_phi_mux_x_phi_fu_269_p4[10:0];

assign empty_fu_350_p1 = out_y_fu_345_p2[0:0];

assign icmp_ln75_1_fu_340_p2 = ((zext_ln75_fu_336_p1 == loopHeight_reg_783) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_319_p2 = (($signed(loopHeight_fu_314_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_379_p2 = ((ap_phi_mux_x_phi_fu_269_p4 == loopWidth_reg_772) ? 1'b1 : 1'b0);

assign idxprom5_i240_i_i_fu_388_p1 = empty_113_fu_384_p1;

assign linebuf_c_val_V_0_address0 = linebuf_c_val_V_0_addr_reg_900_pp0_iter1_reg;

assign linebuf_c_val_V_0_address1 = idxprom5_i240_i_i_fu_388_p1;

assign linebuf_c_val_V_0_d0 = {{pixbuf_c_val_V_2_1_fu_156}, {pixbuf_c_val_V_2_0_1_fu_152}};

assign linebuf_c_val_V_1_address0 = zext_ln78_fu_511_p1;

assign linebuf_c_val_V_1_address1 = idxprom5_i240_i_i_reg_894;

assign linebuf_c_val_V_1_d0 = {{pixbuf_c_val_V_2_1_3_fu_582_p3}, {pixbuf_c_val_V_2_0_fu_576_p3}};

assign linebuf_y_val_V_0_address0 = linebuf_y_val_V_0_addr_reg_906;

assign linebuf_y_val_V_0_address1 = idxprom5_i240_i_i_reg_894;

assign linebuf_y_val_V_0_d0 = {{mpix_y_val_V_1_1_fu_148}, {mpix_y_val_V_0_1_fu_144}};

assign loopHeight_fu_314_p2 = (HeightOut_read_reg_761 + zext_ln73_fu_310_p1);

assign or_ln174_8_i_i_fu_717_p7 = {{{{{{pix_val_V_5_1_fu_140}, {mpix_c_val_V_1_fu_136}}, {mpix_y_val_V_1_fu_132}}, {pix_val_V_2_1_fu_128}}, {mpix_c_val_V_0_fu_124}}, {mpix_y_val_V_0_fu_120}};

assign or_ln174_i_i_fu_746_p7 = {{{{{{{{{{8'd0}, {outpix_val_V_4_0_i_i_fu_740_p3}}}, {outpix_val_V_3_reg_936}}}, {8'd0}}}, {outpix_val_V_1_0_i_i_fu_734_p3}}}, {outpix_val_V_0_reg_931}};

assign out_y_fu_345_p2 = (zext_ln75_fu_336_p1 - zext_ln73_reg_778);

assign outpix_val_V_0_fu_530_p1 = linebuf_y_val_V_0_q1[7:0];

assign outpix_val_V_1_0_i_i_fu_734_p3 = ((empty_reg_865[0:0] == 1'b1) ? 8'd0 : outpix_val_V_1_reg_941);

assign outpix_val_V_4_0_i_i_fu_740_p3 = ((empty_reg_865[0:0] == 1'b1) ? 8'd0 : outpix_val_V_4_reg_946);

assign pix_val_V_0_fu_393_p1 = stream_5_dout[7:0];

assign pixbuf_c_val_V_1_0_fu_553_p1 = linebuf_c_val_V_1_q1[7:0];

assign pixbuf_c_val_V_1_1_fu_557_p4 = {{linebuf_c_val_V_1_q1[15:8]}};

assign pixbuf_c_val_V_2_0_4_fu_497_p1 = linebuf_c_val_V_0_q1[7:0];

assign pixbuf_c_val_V_2_0_fu_576_p3 = ((cmp76_i_i_reg_875[0:0] == 1'b1) ? pixbuf_c_val_V_2_0_4_reg_912 : ap_phi_mux_PixBufVal_val_V_0_1_phi_fu_289_p4);

assign pixbuf_c_val_V_2_1_3_fu_582_p3 = ((cmp76_i_i_reg_875[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_4_reg_919 : ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_280_p4);

assign shl_ln1345_1_fu_648_p3 = {{pixbuf_c_val_V_2_1_4_reg_919}, {1'd0}};

assign shl_ln_fu_597_p3 = {{pixbuf_c_val_V_2_0_4_reg_912}, {1'd0}};

assign xor_ln35_fu_305_p2 = (bPassThruVcrDown_loc_read_reg_767 ^ 1'd1);

assign zext_ln1346_1_fu_612_p1 = ap_phi_mux_PixBufVal_val_V_0_1_phi_fu_289_p4;

assign zext_ln1346_2_fu_659_p1 = shl_ln1345_1_fu_648_p3;

assign zext_ln1346_3_fu_628_p1 = add_ln1346_1_fu_622_p2;

assign zext_ln1346_4_fu_663_p1 = ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_280_p4;

assign zext_ln1346_5_fu_679_p1 = add_ln1346_4_fu_673_p2;

assign zext_ln1346_fu_608_p1 = shl_ln_fu_597_p3;

assign zext_ln215_36_fu_655_p1 = pixbuf_c_val_V_1_1_fu_557_p4;

assign zext_ln215_fu_604_p1 = pixbuf_c_val_V_1_0_fu_553_p1;

assign zext_ln73_fu_310_p1 = xor_ln35_fu_305_p2;

assign zext_ln75_fu_336_p1 = y_reg_254;

assign zext_ln78_fu_511_p1 = x_reg_265_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    zext_ln73_reg_778[15:1] <= 15'b000000000000000;
    idxprom5_i240_i_i_reg_894[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //bd_v_multi_scaler_0_0_v_vcresampler40
