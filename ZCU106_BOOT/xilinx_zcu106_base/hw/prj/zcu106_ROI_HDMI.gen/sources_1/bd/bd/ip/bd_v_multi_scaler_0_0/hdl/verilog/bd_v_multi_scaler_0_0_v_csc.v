// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_csc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        srcImg_dout,
        srcImg_empty_n,
        srcImg_read,
        outImg_din,
        outImg_full_n,
        outImg_write,
        HeightOut_cast_loc_dout,
        HeightOut_cast_loc_empty_n,
        HeightOut_cast_loc_read,
        WidthOut_cast_loc_dout,
        WidthOut_cast_loc_empty_n,
        WidthOut_cast_loc_read,
        ColorModeIn_loc_dout,
        ColorModeIn_loc_empty_n,
        ColorModeIn_loc_read,
        bPassThruCsc_loc_dout,
        bPassThruCsc_loc_empty_n,
        bPassThruCsc_loc_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state14 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] srcImg_dout;
input   srcImg_empty_n;
output   srcImg_read;
output  [47:0] outImg_din;
input   outImg_full_n;
output   outImg_write;
input  [11:0] HeightOut_cast_loc_dout;
input   HeightOut_cast_loc_empty_n;
output   HeightOut_cast_loc_read;
input  [11:0] WidthOut_cast_loc_dout;
input   WidthOut_cast_loc_empty_n;
output   WidthOut_cast_loc_read;
input  [2:0] ColorModeIn_loc_dout;
input   ColorModeIn_loc_empty_n;
output   ColorModeIn_loc_read;
input  [0:0] bPassThruCsc_loc_dout;
input   bPassThruCsc_loc_empty_n;
output   bPassThruCsc_loc_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg srcImg_read;
reg[47:0] outImg_din;
reg outImg_write;
reg HeightOut_cast_loc_read;
reg WidthOut_cast_loc_read;
reg ColorModeIn_loc_read;
reg bPassThruCsc_loc_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    srcImg_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    outImg_blk_n;
reg   [0:0] bPassThruCsc_loc_read_reg_1112;
reg    ap_enable_reg_pp0_iter10;
reg    HeightOut_cast_loc_blk_n;
reg    WidthOut_cast_loc_blk_n;
reg    ColorModeIn_loc_blk_n;
reg    bPassThruCsc_loc_blk_n;
reg   [10:0] x_reg_203;
reg   [11:0] HeightOut_cast_loc_read_reg_1107;
wire   [0:0] cmp69_i_i_fu_214_p2;
reg   [0:0] cmp69_i_i_reg_1116;
reg   [10:0] div_i_i_cast_reg_1126;
wire   [11:0] y_4_fu_230_p2;
reg   [11:0] y_4_reg_1131;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln34_fu_236_p2;
wire   [10:0] x_5_fu_241_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
reg    ap_block_state13_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln36_fu_247_p2;
wire   [7:0] trunc_ln145_fu_252_p1;
reg   [7:0] trunc_ln145_reg_1149;
reg   [7:0] trunc_ln145_reg_1149_pp0_iter2_reg;
reg   [7:0] trunc_ln145_reg_1149_pp0_iter3_reg;
reg   [7:0] trunc_ln145_reg_1149_pp0_iter4_reg;
reg   [7:0] trunc_ln145_1_reg_1158;
wire   [7:0] trunc_ln145_2_fu_266_p4;
reg   [7:0] trunc_ln145_2_reg_1164;
reg   [7:0] trunc_ln145_2_reg_1164_pp0_iter2_reg;
reg   [7:0] trunc_ln145_2_reg_1164_pp0_iter3_reg;
reg   [7:0] trunc_ln145_2_reg_1164_pp0_iter4_reg;
reg   [7:0] trunc_ln145_3_reg_1169;
wire   [7:0] trunc_ln1_fu_304_p4;
reg   [7:0] trunc_ln1_reg_1190;
reg   [7:0] trunc_ln1_reg_1190_pp0_iter2_reg;
reg   [7:0] trunc_ln1_reg_1190_pp0_iter3_reg;
reg   [7:0] trunc_ln1_reg_1190_pp0_iter4_reg;
reg   [7:0] tmp_reg_1210;
reg   [7:0] tmp_reg_1210_pp0_iter2_reg;
reg   [7:0] tmp_reg_1210_pp0_iter3_reg;
reg   [7:0] tmp_reg_1210_pp0_iter4_reg;
wire   [16:0] mul_ln60_fu_361_p2;
reg   [16:0] mul_ln60_reg_1234;
wire   [16:0] mul_ln60_3_fu_386_p2;
reg   [16:0] mul_ln60_3_reg_1254;
reg   [9:0] trunc_ln_reg_1259;
wire  signed [17:0] grp_fu_1008_p2;
reg   [9:0] trunc_ln55_6_reg_1274;
wire  signed [17:0] grp_fu_1029_p2;
wire   [9:0] sub_ln56_fu_453_p2;
reg   [9:0] sub_ln56_reg_1289;
wire   [11:0] add_ln57_fu_472_p2;
reg   [11:0] add_ln57_reg_1294;
reg   [11:0] add_ln57_reg_1294_pp0_iter6_reg;
reg   [11:0] add_ln57_reg_1294_pp0_iter7_reg;
reg   [8:0] trunc_ln61_2_reg_1299;
wire   [9:0] trunc_ln64_fu_558_p1;
reg   [9:0] trunc_ln64_reg_1309;
wire   [0:0] icmp_ln64_fu_562_p2;
reg   [0:0] icmp_ln64_reg_1314;
wire   [9:0] sub_ln56_1_fu_605_p2;
reg   [9:0] sub_ln56_1_reg_1319;
wire   [11:0] add_ln57_1_fu_624_p2;
reg   [11:0] add_ln57_1_reg_1324;
reg   [11:0] add_ln57_1_reg_1324_pp0_iter6_reg;
reg   [11:0] add_ln57_1_reg_1324_pp0_iter7_reg;
reg   [8:0] trunc_ln61_5_reg_1329;
wire   [9:0] trunc_ln64_1_fu_710_p1;
reg   [9:0] trunc_ln64_1_reg_1339;
wire   [0:0] icmp_ln64_2_fu_714_p2;
reg   [0:0] icmp_ln64_2_reg_1344;
wire   [7:0] select_ln301_fu_745_p3;
reg   [7:0] select_ln301_reg_1349;
reg   [7:0] select_ln301_reg_1349_pp0_iter7_reg;
reg   [7:0] select_ln301_reg_1349_pp0_iter8_reg;
reg   [7:0] select_ln301_reg_1349_pp0_iter9_reg;
wire   [8:0] trunc_ln65_fu_759_p1;
reg   [8:0] trunc_ln65_reg_1354;
wire   [0:0] icmp_ln65_fu_763_p2;
reg   [0:0] icmp_ln65_reg_1359;
wire   [7:0] select_ln301_8_fu_794_p3;
reg   [7:0] select_ln301_8_reg_1364;
reg   [7:0] select_ln301_8_reg_1364_pp0_iter7_reg;
reg   [7:0] select_ln301_8_reg_1364_pp0_iter8_reg;
reg   [7:0] select_ln301_8_reg_1364_pp0_iter9_reg;
wire   [8:0] trunc_ln65_1_fu_808_p1;
reg   [8:0] trunc_ln65_1_reg_1369;
wire   [0:0] icmp_ln65_2_fu_812_p2;
reg   [0:0] icmp_ln65_2_reg_1374;
wire   [7:0] select_ln301_6_fu_834_p3;
reg   [7:0] select_ln301_6_reg_1379;
reg   [7:0] select_ln301_6_reg_1379_pp0_iter8_reg;
reg   [7:0] select_ln301_6_reg_1379_pp0_iter9_reg;
wire   [7:0] select_ln301_9_fu_858_p3;
reg   [7:0] select_ln301_9_reg_1384;
reg   [7:0] select_ln301_9_reg_1384_pp0_iter8_reg;
reg   [7:0] select_ln301_9_reg_1384_pp0_iter9_reg;
wire   [11:0] select_ln66_fu_889_p3;
reg   [11:0] select_ln66_reg_1389;
wire   [10:0] trunc_ln66_fu_895_p1;
reg   [10:0] trunc_ln66_reg_1394;
wire   [11:0] select_ln66_2_fu_922_p3;
reg   [11:0] select_ln66_2_reg_1399;
wire   [10:0] trunc_ln66_1_fu_928_p1;
reg   [10:0] trunc_ln66_1_reg_1404;
wire   [0:0] icmp_ln66_1_fu_944_p2;
reg   [0:0] icmp_ln66_1_reg_1409;
wire   [7:0] trunc_ln301_2_fu_950_p1;
reg   [7:0] trunc_ln301_2_reg_1414;
wire   [0:0] icmp_ln66_3_fu_966_p2;
reg   [0:0] icmp_ln66_3_reg_1419;
wire   [7:0] trunc_ln301_5_fu_972_p1;
reg   [7:0] trunc_ln301_5_reg_1424;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg   [11:0] y_reg_192;
wire    ap_CS_fsm_state14;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_i_i_fu_988_p7;
wire  signed [7:0] xor_ln53_fu_290_p2;
wire  signed [7:0] xor_ln53_1_fu_318_p2;
wire  signed [7:0] xor_ln54_fu_345_p2;
wire   [7:0] mul_ln60_fu_361_p0;
wire   [9:0] mul_ln60_fu_361_p1;
wire  signed [7:0] xor_ln54_1_fu_370_p2;
wire   [7:0] mul_ln60_3_fu_386_p0;
wire   [9:0] mul_ln60_3_fu_386_p1;
wire  signed [19:0] grp_fu_1001_p2;
wire   [16:0] grp_fu_1014_p3;
wire  signed [19:0] grp_fu_1022_p2;
wire   [16:0] grp_fu_1035_p3;
wire  signed [10:0] sext_ln55_2_fu_431_p1;
wire   [10:0] zext_ln55_4_fu_428_p1;
wire  signed [17:0] grp_fu_1043_p3;
wire   [7:0] trunc_ln6_fu_440_p4;
wire   [9:0] zext_ln55_3_fu_425_p1;
wire  signed [9:0] sext_ln56_1_fu_449_p1;
wire  signed [20:0] grp_fu_1052_p2;
wire   [10:0] trunc_ln7_fu_459_p4;
wire  signed [11:0] sext_ln57_fu_468_p1;
wire   [11:0] zext_ln55_2_fu_422_p1;
wire   [17:0] grp_fu_1059_p3;
wire   [7:0] trunc_ln8_fu_478_p4;
wire   [8:0] zext_ln53_fu_416_p1;
wire   [8:0] zext_ln61_1_fu_491_p1;
wire   [8:0] sub_ln61_fu_495_p2;
wire   [17:0] shl_ln_fu_501_p3;
wire   [11:0] shl_ln61_1_fu_513_p3;
wire  signed [18:0] sext_ln61_fu_509_p1;
wire  signed [18:0] sext_ln61_1_fu_521_p1;
wire   [18:0] sub_ln61_1_fu_525_p2;
wire   [8:0] zext_ln55_fu_419_p1;
wire  signed [8:0] sub_ln62_fu_541_p2;
wire   [10:0] add_ln55_fu_434_p2;
wire   [10:0] zext_ln61_fu_487_p1;
wire   [10:0] select_ln64_fu_551_p3;
wire   [10:0] zext_ln55_9_fu_580_p1;
wire  signed [10:0] sext_ln55_5_fu_583_p1;
wire  signed [17:0] grp_fu_1068_p3;
wire   [7:0] trunc_ln56_1_fu_592_p4;
wire   [9:0] zext_ln55_8_fu_577_p1;
wire  signed [9:0] sext_ln56_3_fu_601_p1;
wire  signed [20:0] grp_fu_1077_p2;
wire   [10:0] trunc_ln57_1_fu_611_p4;
wire   [11:0] zext_ln55_7_fu_574_p1;
wire  signed [11:0] sext_ln57_1_fu_620_p1;
wire   [17:0] grp_fu_1084_p3;
wire   [7:0] trunc_ln61_3_fu_630_p4;
wire   [8:0] zext_ln53_2_fu_568_p1;
wire   [8:0] zext_ln61_3_fu_643_p1;
wire   [8:0] sub_ln61_2_fu_647_p2;
wire   [17:0] shl_ln61_2_fu_653_p3;
wire   [11:0] shl_ln61_3_fu_665_p3;
wire  signed [18:0] sext_ln61_3_fu_661_p1;
wire  signed [18:0] sext_ln61_4_fu_673_p1;
wire   [18:0] sub_ln61_3_fu_677_p2;
wire   [8:0] zext_ln55_5_fu_571_p1;
wire  signed [8:0] sub_ln62_1_fu_693_p2;
wire   [10:0] add_ln55_1_fu_586_p2;
wire   [10:0] zext_ln61_2_fu_639_p1;
wire   [10:0] select_ln64_2_fu_703_p3;
wire  signed [9:0] sext_ln61_2_fu_720_p1;
wire   [9:0] select_ln64_1_fu_729_p3;
wire   [0:0] icmp_ln64_1_fu_735_p2;
wire   [7:0] trunc_ln301_fu_741_p1;
wire   [9:0] add_ln61_fu_723_p2;
wire   [9:0] select_ln65_fu_753_p3;
wire  signed [9:0] sext_ln61_5_fu_769_p1;
wire   [9:0] select_ln64_3_fu_778_p3;
wire   [0:0] icmp_ln64_3_fu_784_p2;
wire   [7:0] trunc_ln301_3_fu_790_p1;
wire   [9:0] add_ln61_1_fu_772_p2;
wire   [9:0] select_ln65_2_fu_802_p3;
wire   [8:0] select_ln65_1_fu_818_p3;
wire   [0:0] icmp_ln65_1_fu_824_p2;
wire   [7:0] trunc_ln301_1_fu_830_p1;
wire   [8:0] select_ln65_3_fu_842_p3;
wire   [0:0] icmp_ln65_3_fu_848_p2;
wire   [7:0] trunc_ln301_4_fu_854_p1;
wire  signed [19:0] grp_fu_1093_p2;
wire   [9:0] trunc_ln9_fu_866_p4;
wire  signed [10:0] sext_ln62_1_fu_875_p1;
wire   [10:0] add_ln62_fu_879_p2;
wire  signed [11:0] sext_ln64_fu_885_p1;
wire  signed [19:0] grp_fu_1100_p2;
wire   [9:0] trunc_ln62_1_fu_899_p4;
wire  signed [10:0] sext_ln62_3_fu_908_p1;
wire   [10:0] add_ln62_1_fu_912_p2;
wire  signed [11:0] sext_ln64_1_fu_918_p1;
wire   [0:0] icmp_ln66_fu_932_p2;
wire   [10:0] select_ln66_1_fu_937_p3;
wire   [0:0] icmp_ln66_2_fu_954_p2;
wire   [10:0] select_ln66_3_fu_959_p3;
wire   [7:0] select_ln301_10_fu_982_p3;
wire   [7:0] select_ln301_7_fu_976_p3;
wire   [11:0] grp_fu_1001_p1;
wire   [10:0] grp_fu_1008_p1;
wire   [7:0] grp_fu_1014_p0;
wire   [7:0] grp_fu_1014_p1;
wire   [11:0] grp_fu_1022_p1;
wire   [10:0] grp_fu_1029_p1;
wire   [7:0] grp_fu_1035_p0;
wire   [7:0] grp_fu_1035_p1;
wire   [9:0] grp_fu_1043_p1;
wire   [12:0] grp_fu_1052_p1;
wire   [7:0] grp_fu_1059_p0;
wire   [10:0] grp_fu_1059_p1;
wire   [16:0] grp_fu_1059_p2;
wire   [9:0] grp_fu_1068_p1;
wire   [12:0] grp_fu_1077_p1;
wire   [7:0] grp_fu_1084_p0;
wire   [10:0] grp_fu_1084_p1;
wire   [16:0] grp_fu_1084_p2;
wire   [10:0] grp_fu_1093_p1;
wire   [10:0] grp_fu_1100_p1;
reg    grp_fu_1001_ce;
reg    grp_fu_1008_ce;
reg    grp_fu_1014_ce;
reg    grp_fu_1022_ce;
reg    grp_fu_1029_ce;
reg    grp_fu_1035_ce;
reg    grp_fu_1043_ce;
reg    grp_fu_1052_ce;
reg    grp_fu_1059_ce;
reg    grp_fu_1068_ce;
reg    grp_fu_1077_ce;
reg    grp_fu_1084_ce;
reg    grp_fu_1093_ce;
reg    grp_fu_1100_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [14:0] grp_fu_1014_p00;
wire   [14:0] grp_fu_1035_p00;
wire   [17:0] grp_fu_1059_p00;
wire   [17:0] grp_fu_1059_p20;
wire   [17:0] grp_fu_1084_p00;
wire   [17:0] grp_fu_1084_p20;
wire   [16:0] mul_ln60_3_fu_386_p00;
wire   [16:0] mul_ln60_fu_361_p00;
reg    ap_condition_1052;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

bd_v_multi_scaler_0_0_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U254(
    .din0(mul_ln60_fu_361_p0),
    .din1(mul_ln60_fu_361_p1),
    .dout(mul_ln60_fu_361_p2)
);

bd_v_multi_scaler_0_0_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U255(
    .din0(mul_ln60_3_fu_386_p0),
    .din1(mul_ln60_3_fu_386_p1),
    .dout(mul_ln60_3_fu_386_p2)
);

bd_v_multi_scaler_0_0_mul_mul_8s_12ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
mul_mul_8s_12ns_20_4_1_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln53_fu_290_p2),
    .din1(grp_fu_1001_p1),
    .ce(grp_fu_1001_ce),
    .dout(grp_fu_1001_p2)
);

bd_v_multi_scaler_0_0_mul_mul_8s_11ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
mul_mul_8s_11ns_18_4_1_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln53_fu_290_p2),
    .din1(grp_fu_1008_p1),
    .ce(grp_fu_1008_ce),
    .dout(grp_fu_1008_p2)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_8ns_17ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_17ns_17_4_1_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1014_p0),
    .din1(grp_fu_1014_p1),
    .din2(mul_ln60_reg_1234),
    .ce(grp_fu_1014_ce),
    .dout(grp_fu_1014_p3)
);

bd_v_multi_scaler_0_0_mul_mul_8s_12ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 20 ))
mul_mul_8s_12ns_20_4_1_U259(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln53_1_fu_318_p2),
    .din1(grp_fu_1022_p1),
    .ce(grp_fu_1022_ce),
    .dout(grp_fu_1022_p2)
);

bd_v_multi_scaler_0_0_mul_mul_8s_11ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 18 ))
mul_mul_8s_11ns_18_4_1_U260(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln53_1_fu_318_p2),
    .din1(grp_fu_1029_p1),
    .ce(grp_fu_1029_ce),
    .dout(grp_fu_1029_p2)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_8ns_17ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
mac_muladd_8ns_8ns_17ns_17_4_1_U261(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1035_p0),
    .din1(grp_fu_1035_p1),
    .din2(mul_ln60_3_reg_1254),
    .ce(grp_fu_1035_ce),
    .dout(grp_fu_1035_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8s_10ns_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_8s_10ns_18s_18_4_1_U262(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln54_fu_345_p2),
    .din1(grp_fu_1043_p1),
    .din2(grp_fu_1008_p2),
    .ce(grp_fu_1043_ce),
    .dout(grp_fu_1043_p3)
);

bd_v_multi_scaler_0_0_mul_mul_8s_13ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
mul_mul_8s_13ns_21_4_1_U263(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln54_fu_345_p2),
    .din1(grp_fu_1052_p1),
    .ce(grp_fu_1052_ce),
    .dout(grp_fu_1052_p2)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_11ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_11ns_17ns_18_4_1_U264(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1059_p0),
    .din1(grp_fu_1059_p1),
    .din2(grp_fu_1059_p2),
    .ce(grp_fu_1059_ce),
    .dout(grp_fu_1059_p3)
);

bd_v_multi_scaler_0_0_mac_muladd_8s_10ns_18s_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
mac_muladd_8s_10ns_18s_18_4_1_U265(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln54_1_fu_370_p2),
    .din1(grp_fu_1068_p1),
    .din2(grp_fu_1029_p2),
    .ce(grp_fu_1068_ce),
    .dout(grp_fu_1068_p3)
);

bd_v_multi_scaler_0_0_mul_mul_8s_13ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
mul_mul_8s_13ns_21_4_1_U266(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xor_ln54_1_fu_370_p2),
    .din1(grp_fu_1077_p1),
    .ce(grp_fu_1077_ce),
    .dout(grp_fu_1077_p2)
);

bd_v_multi_scaler_0_0_mac_muladd_8ns_11ns_17ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 18 ))
mac_muladd_8ns_11ns_17ns_18_4_1_U267(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1084_p0),
    .din1(grp_fu_1084_p1),
    .din2(grp_fu_1084_p2),
    .ce(grp_fu_1084_ce),
    .dout(grp_fu_1084_p3)
);

bd_v_multi_scaler_0_0_mul_mul_9s_11ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
mul_mul_9s_11ns_20_4_1_U268(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln62_fu_541_p2),
    .din1(grp_fu_1093_p1),
    .ce(grp_fu_1093_ce),
    .dout(grp_fu_1093_p2)
);

bd_v_multi_scaler_0_0_mul_mul_9s_11ns_20_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
mul_mul_9s_11ns_20_4_1_U269(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln62_1_fu_693_p2),
    .din1(grp_fu_1100_p1),
    .ce(grp_fu_1100_ce),
    .dout(grp_fu_1100_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln36_fu_247_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_reg_203 <= x_5_fu_241_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd0))) begin
        x_reg_203 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_reg_192 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        y_reg_192 <= y_4_reg_1131;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HeightOut_cast_loc_read_reg_1107 <= HeightOut_cast_loc_dout;
        bPassThruCsc_loc_read_reg_1112 <= bPassThruCsc_loc_dout;
        cmp69_i_i_reg_1116 <= cmp69_i_i_fu_214_p2;
        div_i_i_cast_reg_1126 <= {{WidthOut_cast_loc_dout[11:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp69_i_i_reg_1116 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln57_1_reg_1324 <= add_ln57_1_fu_624_p2;
        add_ln57_reg_1294 <= add_ln57_fu_472_p2;
        sub_ln56_1_reg_1319 <= sub_ln56_1_fu_605_p2;
        sub_ln56_reg_1289 <= sub_ln56_fu_453_p2;
        trunc_ln55_6_reg_1274 <= {{grp_fu_1022_p2[19:10]}};
        trunc_ln_reg_1259 <= {{grp_fu_1001_p2[19:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln57_1_reg_1324_pp0_iter6_reg <= add_ln57_1_reg_1324;
        add_ln57_1_reg_1324_pp0_iter7_reg <= add_ln57_1_reg_1324_pp0_iter6_reg;
        add_ln57_reg_1294_pp0_iter6_reg <= add_ln57_reg_1294;
        add_ln57_reg_1294_pp0_iter7_reg <= add_ln57_reg_1294_pp0_iter6_reg;
        icmp_ln64_2_reg_1344 <= icmp_ln64_2_fu_714_p2;
        icmp_ln64_reg_1314 <= icmp_ln64_fu_562_p2;
        icmp_ln65_2_reg_1374 <= icmp_ln65_2_fu_812_p2;
        icmp_ln65_reg_1359 <= icmp_ln65_fu_763_p2;
        icmp_ln66_1_reg_1409 <= icmp_ln66_1_fu_944_p2;
        icmp_ln66_3_reg_1419 <= icmp_ln66_3_fu_966_p2;
        mul_ln60_3_reg_1254 <= mul_ln60_3_fu_386_p2;
        mul_ln60_reg_1234 <= mul_ln60_fu_361_p2;
        select_ln301_6_reg_1379 <= select_ln301_6_fu_834_p3;
        select_ln301_6_reg_1379_pp0_iter8_reg <= select_ln301_6_reg_1379;
        select_ln301_6_reg_1379_pp0_iter9_reg <= select_ln301_6_reg_1379_pp0_iter8_reg;
        select_ln301_8_reg_1364 <= select_ln301_8_fu_794_p3;
        select_ln301_8_reg_1364_pp0_iter7_reg <= select_ln301_8_reg_1364;
        select_ln301_8_reg_1364_pp0_iter8_reg <= select_ln301_8_reg_1364_pp0_iter7_reg;
        select_ln301_8_reg_1364_pp0_iter9_reg <= select_ln301_8_reg_1364_pp0_iter8_reg;
        select_ln301_9_reg_1384 <= select_ln301_9_fu_858_p3;
        select_ln301_9_reg_1384_pp0_iter8_reg <= select_ln301_9_reg_1384;
        select_ln301_9_reg_1384_pp0_iter9_reg <= select_ln301_9_reg_1384_pp0_iter8_reg;
        select_ln301_reg_1349 <= select_ln301_fu_745_p3;
        select_ln301_reg_1349_pp0_iter7_reg <= select_ln301_reg_1349;
        select_ln301_reg_1349_pp0_iter8_reg <= select_ln301_reg_1349_pp0_iter7_reg;
        select_ln301_reg_1349_pp0_iter9_reg <= select_ln301_reg_1349_pp0_iter8_reg;
        select_ln66_2_reg_1399 <= select_ln66_2_fu_922_p3;
        select_ln66_reg_1389 <= select_ln66_fu_889_p3;
        tmp_reg_1210_pp0_iter2_reg <= tmp_reg_1210;
        tmp_reg_1210_pp0_iter3_reg <= tmp_reg_1210_pp0_iter2_reg;
        tmp_reg_1210_pp0_iter4_reg <= tmp_reg_1210_pp0_iter3_reg;
        trunc_ln145_2_reg_1164_pp0_iter2_reg <= trunc_ln145_2_reg_1164;
        trunc_ln145_2_reg_1164_pp0_iter3_reg <= trunc_ln145_2_reg_1164_pp0_iter2_reg;
        trunc_ln145_2_reg_1164_pp0_iter4_reg <= trunc_ln145_2_reg_1164_pp0_iter3_reg;
        trunc_ln145_reg_1149_pp0_iter2_reg <= trunc_ln145_reg_1149;
        trunc_ln145_reg_1149_pp0_iter3_reg <= trunc_ln145_reg_1149_pp0_iter2_reg;
        trunc_ln145_reg_1149_pp0_iter4_reg <= trunc_ln145_reg_1149_pp0_iter3_reg;
        trunc_ln1_reg_1190_pp0_iter2_reg <= trunc_ln1_reg_1190;
        trunc_ln1_reg_1190_pp0_iter3_reg <= trunc_ln1_reg_1190_pp0_iter2_reg;
        trunc_ln1_reg_1190_pp0_iter4_reg <= trunc_ln1_reg_1190_pp0_iter3_reg;
        trunc_ln301_2_reg_1414 <= trunc_ln301_2_fu_950_p1;
        trunc_ln301_5_reg_1424 <= trunc_ln301_5_fu_972_p1;
        trunc_ln64_1_reg_1339 <= trunc_ln64_1_fu_710_p1;
        trunc_ln64_reg_1309 <= trunc_ln64_fu_558_p1;
        trunc_ln65_1_reg_1369 <= trunc_ln65_1_fu_808_p1;
        trunc_ln65_reg_1354 <= trunc_ln65_fu_759_p1;
        trunc_ln66_1_reg_1404 <= trunc_ln66_1_fu_928_p1;
        trunc_ln66_reg_1394 <= trunc_ln66_fu_895_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_1210 <= {{srcImg_dout[31:24]}};
        trunc_ln145_1_reg_1158 <= {{srcImg_dout[15:8]}};
        trunc_ln145_2_reg_1164 <= {{srcImg_dout[23:16]}};
        trunc_ln145_3_reg_1169 <= {{srcImg_dout[39:32]}};
        trunc_ln145_reg_1149 <= trunc_ln145_fu_252_p1;
        trunc_ln1_reg_1190 <= {{srcImg_dout[47:40]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp69_i_i_reg_1116 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln61_2_reg_1299 <= {{sub_ln61_1_fu_525_p2[18:10]}};
        trunc_ln61_5_reg_1329 <= {{sub_ln61_3_fu_677_p2[18:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_4_reg_1131 <= y_4_fu_230_p2;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ColorModeIn_loc_blk_n = ColorModeIn_loc_empty_n;
    end else begin
        ColorModeIn_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ColorModeIn_loc_read = 1'b1;
    end else begin
        ColorModeIn_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_blk_n = HeightOut_cast_loc_empty_n;
    end else begin
        HeightOut_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_cast_loc_read = 1'b1;
    end else begin
        HeightOut_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_cast_loc_blk_n = WidthOut_cast_loc_empty_n;
    end else begin
        WidthOut_cast_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_cast_loc_read = 1'b1;
    end else begin
        WidthOut_cast_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln36_fu_247_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruCsc_loc_blk_n = bPassThruCsc_loc_empty_n;
    end else begin
        bPassThruCsc_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruCsc_loc_read = 1'b1;
    end else begin
        bPassThruCsc_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1001_ce = 1'b1;
    end else begin
        grp_fu_1001_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1008_ce = 1'b1;
    end else begin
        grp_fu_1008_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1014_ce = 1'b1;
    end else begin
        grp_fu_1014_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1022_ce = 1'b1;
    end else begin
        grp_fu_1022_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1029_ce = 1'b1;
    end else begin
        grp_fu_1029_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1035_ce = 1'b1;
    end else begin
        grp_fu_1035_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1043_ce = 1'b1;
    end else begin
        grp_fu_1043_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1052_ce = 1'b1;
    end else begin
        grp_fu_1052_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1059_ce = 1'b1;
    end else begin
        grp_fu_1059_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1068_ce = 1'b1;
    end else begin
        grp_fu_1068_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1077_ce = 1'b1;
    end else begin
        grp_fu_1077_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1084_ce = 1'b1;
    end else begin
        grp_fu_1084_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1093_ce = 1'b1;
    end else begin
        grp_fu_1093_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1100_ce = 1'b1;
    end else begin
        grp_fu_1100_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outImg_blk_n = outImg_full_n;
    end else begin
        outImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0))) begin
            outImg_din = or_ln174_i_i_fu_988_p7;
        end else if ((1'b1 == ap_condition_1052)) begin
            outImg_din = srcImg_dout;
        end else begin
            outImg_din = 'bx;
        end
    end else begin
        outImg_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        outImg_write = 1'b1;
    end else begin
        outImg_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_blk_n = srcImg_empty_n;
    end else begin
        srcImg_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcImg_read = 1'b1;
    end else begin
        srcImg_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln34_fu_236_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln36_fu_247_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln36_fu_247_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_586_p2 = ($signed(zext_ln55_9_fu_580_p1) + $signed(sext_ln55_5_fu_583_p1));

assign add_ln55_fu_434_p2 = ($signed(sext_ln55_2_fu_431_p1) + $signed(zext_ln55_4_fu_428_p1));

assign add_ln57_1_fu_624_p2 = ($signed(zext_ln55_7_fu_574_p1) + $signed(sext_ln57_1_fu_620_p1));

assign add_ln57_fu_472_p2 = ($signed(sext_ln57_fu_468_p1) + $signed(zext_ln55_2_fu_422_p1));

assign add_ln61_1_fu_772_p2 = ($signed(sext_ln61_5_fu_769_p1) + $signed(10'd128));

assign add_ln61_fu_723_p2 = ($signed(sext_ln61_2_fu_720_p1) + $signed(10'd128));

assign add_ln62_1_fu_912_p2 = ($signed(sext_ln62_3_fu_908_p1) + $signed(11'd128));

assign add_ln62_fu_879_p2 = ($signed(sext_ln62_1_fu_875_p1) + $signed(11'd128));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter10 == 1'b1) & (bPassThruCsc_loc_read_reg_1112 == 1'd0) & (outImg_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((srcImg_empty_n == 1'b0) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (outImg_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (bPassThruCsc_loc_empty_n == 1'b0) | (1'b0 == ColorModeIn_loc_empty_n) | (1'b0 == WidthOut_cast_loc_empty_n) | (1'b0 == HeightOut_cast_loc_empty_n) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter10 = ((bPassThruCsc_loc_read_reg_1112 == 1'd0) & (outImg_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((srcImg_empty_n == 1'b0) | ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (outImg_full_n == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1052 = ((bPassThruCsc_loc_read_reg_1112 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign cmp69_i_i_fu_214_p2 = ((ColorModeIn_loc_dout != 3'd0) ? 1'b1 : 1'b0);

assign grp_fu_1001_p1 = 20'd1733;

assign grp_fu_1008_p1 = 18'd595;

assign grp_fu_1014_p0 = grp_fu_1014_p00;

assign grp_fu_1014_p00 = trunc_ln145_2_fu_266_p4;

assign grp_fu_1014_p1 = 15'd117;

assign grp_fu_1022_p1 = 20'd1733;

assign grp_fu_1029_p1 = 18'd595;

assign grp_fu_1035_p0 = grp_fu_1035_p00;

assign grp_fu_1035_p00 = trunc_ln1_fu_304_p4;

assign grp_fu_1035_p1 = 15'd117;

assign grp_fu_1043_p1 = 18'd404;

assign grp_fu_1052_p1 = 21'd2081;

assign grp_fu_1059_p0 = grp_fu_1059_p00;

assign grp_fu_1059_p00 = trunc_ln145_1_reg_1158;

assign grp_fu_1059_p1 = 18'd601;

assign grp_fu_1059_p2 = grp_fu_1059_p20;

assign grp_fu_1059_p20 = grp_fu_1014_p3;

assign grp_fu_1068_p1 = 18'd404;

assign grp_fu_1077_p1 = 21'd2081;

assign grp_fu_1084_p0 = grp_fu_1084_p00;

assign grp_fu_1084_p00 = trunc_ln145_3_reg_1169;

assign grp_fu_1084_p1 = 18'd601;

assign grp_fu_1084_p2 = grp_fu_1084_p20;

assign grp_fu_1084_p20 = grp_fu_1035_p3;

assign grp_fu_1093_p1 = 20'd898;

assign grp_fu_1100_p1 = 20'd898;

assign icmp_ln34_fu_236_p2 = ((y_reg_192 == HeightOut_cast_loc_read_reg_1107) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_247_p2 = ((x_reg_203 == div_i_i_cast_reg_1126) ? 1'b1 : 1'b0);

assign icmp_ln64_1_fu_735_p2 = (($signed(select_ln64_1_fu_729_p3) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign icmp_ln64_2_fu_714_p2 = (($signed(select_ln64_2_fu_703_p3) < $signed(11'd255)) ? 1'b1 : 1'b0);

assign icmp_ln64_3_fu_784_p2 = (($signed(select_ln64_3_fu_778_p3) > $signed(10'd0)) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_562_p2 = (($signed(select_ln64_fu_551_p3) < $signed(11'd255)) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_824_p2 = (($signed(select_ln65_1_fu_818_p3) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_812_p2 = (($signed(select_ln65_2_fu_802_p3) < $signed(10'd255)) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_848_p2 = (($signed(select_ln65_3_fu_842_p3) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_763_p2 = (($signed(select_ln65_fu_753_p3) < $signed(10'd255)) ? 1'b1 : 1'b0);

assign icmp_ln66_1_fu_944_p2 = (($signed(select_ln66_1_fu_937_p3) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln66_2_fu_954_p2 = (($signed(select_ln66_2_reg_1399) < $signed(12'd255)) ? 1'b1 : 1'b0);

assign icmp_ln66_3_fu_966_p2 = (($signed(select_ln66_3_fu_959_p3) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_932_p2 = (($signed(select_ln66_reg_1389) < $signed(12'd255)) ? 1'b1 : 1'b0);

assign mul_ln60_3_fu_386_p0 = mul_ln60_3_fu_386_p00;

assign mul_ln60_3_fu_386_p00 = tmp_reg_1210;

assign mul_ln60_3_fu_386_p1 = 17'd306;

assign mul_ln60_fu_361_p0 = mul_ln60_fu_361_p00;

assign mul_ln60_fu_361_p00 = trunc_ln145_reg_1149;

assign mul_ln60_fu_361_p1 = 17'd306;

assign or_ln174_i_i_fu_988_p7 = {{{{{{select_ln301_10_fu_982_p3}, {select_ln301_9_reg_1384_pp0_iter9_reg}}, {select_ln301_8_reg_1364_pp0_iter9_reg}}, {select_ln301_7_fu_976_p3}}, {select_ln301_6_reg_1379_pp0_iter9_reg}}, {select_ln301_reg_1349_pp0_iter9_reg}};

assign select_ln301_10_fu_982_p3 = ((icmp_ln66_3_reg_1419[0:0] == 1'b1) ? trunc_ln301_5_reg_1424 : 8'd0);

assign select_ln301_6_fu_834_p3 = ((icmp_ln65_1_fu_824_p2[0:0] == 1'b1) ? trunc_ln301_1_fu_830_p1 : 8'd0);

assign select_ln301_7_fu_976_p3 = ((icmp_ln66_1_reg_1409[0:0] == 1'b1) ? trunc_ln301_2_reg_1414 : 8'd0);

assign select_ln301_8_fu_794_p3 = ((icmp_ln64_3_fu_784_p2[0:0] == 1'b1) ? trunc_ln301_3_fu_790_p1 : 8'd0);

assign select_ln301_9_fu_858_p3 = ((icmp_ln65_3_fu_848_p2[0:0] == 1'b1) ? trunc_ln301_4_fu_854_p1 : 8'd0);

assign select_ln301_fu_745_p3 = ((icmp_ln64_1_fu_735_p2[0:0] == 1'b1) ? trunc_ln301_fu_741_p1 : 8'd0);

assign select_ln64_1_fu_729_p3 = ((icmp_ln64_reg_1314[0:0] == 1'b1) ? trunc_ln64_reg_1309 : 10'd255);

assign select_ln64_2_fu_703_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? add_ln55_1_fu_586_p2 : zext_ln61_2_fu_639_p1);

assign select_ln64_3_fu_778_p3 = ((icmp_ln64_2_reg_1344[0:0] == 1'b1) ? trunc_ln64_1_reg_1339 : 10'd255);

assign select_ln64_fu_551_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? add_ln55_fu_434_p2 : zext_ln61_fu_487_p1);

assign select_ln65_1_fu_818_p3 = ((icmp_ln65_reg_1359[0:0] == 1'b1) ? trunc_ln65_reg_1354 : 9'd255);

assign select_ln65_2_fu_802_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? sub_ln56_1_reg_1319 : add_ln61_1_fu_772_p2);

assign select_ln65_3_fu_842_p3 = ((icmp_ln65_2_reg_1374[0:0] == 1'b1) ? trunc_ln65_1_reg_1369 : 9'd255);

assign select_ln65_fu_753_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? sub_ln56_reg_1289 : add_ln61_fu_723_p2);

assign select_ln66_1_fu_937_p3 = ((icmp_ln66_fu_932_p2[0:0] == 1'b1) ? trunc_ln66_reg_1394 : 11'd255);

assign select_ln66_2_fu_922_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? add_ln57_1_reg_1324_pp0_iter7_reg : sext_ln64_1_fu_918_p1);

assign select_ln66_3_fu_959_p3 = ((icmp_ln66_2_fu_954_p2[0:0] == 1'b1) ? trunc_ln66_1_reg_1404 : 11'd255);

assign select_ln66_fu_889_p3 = ((cmp69_i_i_reg_1116[0:0] == 1'b1) ? add_ln57_reg_1294_pp0_iter7_reg : sext_ln64_fu_885_p1);

assign sext_ln55_2_fu_431_p1 = $signed(trunc_ln_reg_1259);

assign sext_ln55_5_fu_583_p1 = $signed(trunc_ln55_6_reg_1274);

assign sext_ln56_1_fu_449_p1 = $signed(trunc_ln6_fu_440_p4);

assign sext_ln56_3_fu_601_p1 = $signed(trunc_ln56_1_fu_592_p4);

assign sext_ln57_1_fu_620_p1 = $signed(trunc_ln57_1_fu_611_p4);

assign sext_ln57_fu_468_p1 = $signed(trunc_ln7_fu_459_p4);

assign sext_ln61_1_fu_521_p1 = $signed(shl_ln61_1_fu_513_p3);

assign sext_ln61_2_fu_720_p1 = $signed(trunc_ln61_2_reg_1299);

assign sext_ln61_3_fu_661_p1 = $signed(shl_ln61_2_fu_653_p3);

assign sext_ln61_4_fu_673_p1 = $signed(shl_ln61_3_fu_665_p3);

assign sext_ln61_5_fu_769_p1 = $signed(trunc_ln61_5_reg_1329);

assign sext_ln61_fu_509_p1 = $signed(shl_ln_fu_501_p3);

assign sext_ln62_1_fu_875_p1 = $signed(trunc_ln9_fu_866_p4);

assign sext_ln62_3_fu_908_p1 = $signed(trunc_ln62_1_fu_899_p4);

assign sext_ln64_1_fu_918_p1 = $signed(add_ln62_1_fu_912_p2);

assign sext_ln64_fu_885_p1 = $signed(add_ln62_fu_879_p2);

assign shl_ln61_1_fu_513_p3 = {{sub_ln61_fu_495_p2}, {3'd0}};

assign shl_ln61_2_fu_653_p3 = {{sub_ln61_2_fu_647_p2}, {9'd0}};

assign shl_ln61_3_fu_665_p3 = {{sub_ln61_2_fu_647_p2}, {3'd0}};

assign shl_ln_fu_501_p3 = {{sub_ln61_fu_495_p2}, {9'd0}};

assign sub_ln56_1_fu_605_p2 = ($signed(zext_ln55_8_fu_577_p1) - $signed(sext_ln56_3_fu_601_p1));

assign sub_ln56_fu_453_p2 = ($signed(zext_ln55_3_fu_425_p1) - $signed(sext_ln56_1_fu_449_p1));

assign sub_ln61_1_fu_525_p2 = ($signed(sext_ln61_fu_509_p1) - $signed(sext_ln61_1_fu_521_p1));

assign sub_ln61_2_fu_647_p2 = (zext_ln53_2_fu_568_p1 - zext_ln61_3_fu_643_p1);

assign sub_ln61_3_fu_677_p2 = ($signed(sext_ln61_3_fu_661_p1) - $signed(sext_ln61_4_fu_673_p1));

assign sub_ln61_fu_495_p2 = (zext_ln53_fu_416_p1 - zext_ln61_1_fu_491_p1);

assign sub_ln62_1_fu_693_p2 = (zext_ln55_5_fu_571_p1 - zext_ln61_3_fu_643_p1);

assign sub_ln62_fu_541_p2 = (zext_ln55_fu_419_p1 - zext_ln61_1_fu_491_p1);

assign trunc_ln145_2_fu_266_p4 = {{srcImg_dout[23:16]}};

assign trunc_ln145_fu_252_p1 = srcImg_dout[7:0];

assign trunc_ln1_fu_304_p4 = {{srcImg_dout[47:40]}};

assign trunc_ln301_1_fu_830_p1 = select_ln65_1_fu_818_p3[7:0];

assign trunc_ln301_2_fu_950_p1 = select_ln66_1_fu_937_p3[7:0];

assign trunc_ln301_3_fu_790_p1 = select_ln64_3_fu_778_p3[7:0];

assign trunc_ln301_4_fu_854_p1 = select_ln65_3_fu_842_p3[7:0];

assign trunc_ln301_5_fu_972_p1 = select_ln66_3_fu_959_p3[7:0];

assign trunc_ln301_fu_741_p1 = select_ln64_1_fu_729_p3[7:0];

assign trunc_ln56_1_fu_592_p4 = {{grp_fu_1068_p3[17:10]}};

assign trunc_ln57_1_fu_611_p4 = {{grp_fu_1077_p2[20:10]}};

assign trunc_ln61_3_fu_630_p4 = {{grp_fu_1084_p3[17:10]}};

assign trunc_ln62_1_fu_899_p4 = {{grp_fu_1100_p2[19:10]}};

assign trunc_ln64_1_fu_710_p1 = select_ln64_2_fu_703_p3[9:0];

assign trunc_ln64_fu_558_p1 = select_ln64_fu_551_p3[9:0];

assign trunc_ln65_1_fu_808_p1 = select_ln65_2_fu_802_p3[8:0];

assign trunc_ln65_fu_759_p1 = select_ln65_fu_753_p3[8:0];

assign trunc_ln66_1_fu_928_p1 = select_ln66_2_fu_922_p3[10:0];

assign trunc_ln66_fu_895_p1 = select_ln66_fu_889_p3[10:0];

assign trunc_ln6_fu_440_p4 = {{grp_fu_1043_p3[17:10]}};

assign trunc_ln7_fu_459_p4 = {{grp_fu_1052_p2[20:10]}};

assign trunc_ln8_fu_478_p4 = {{grp_fu_1059_p3[17:10]}};

assign trunc_ln9_fu_866_p4 = {{grp_fu_1093_p2[19:10]}};

assign x_5_fu_241_p2 = (x_reg_203 + 11'd1);

assign xor_ln53_1_fu_318_p2 = (trunc_ln1_fu_304_p4 ^ 8'd128);

assign xor_ln53_fu_290_p2 = (trunc_ln145_2_fu_266_p4 ^ 8'd128);

assign xor_ln54_1_fu_370_p2 = (trunc_ln145_3_reg_1169 ^ 8'd128);

assign xor_ln54_fu_345_p2 = (trunc_ln145_1_reg_1158 ^ 8'd128);

assign y_4_fu_230_p2 = (y_reg_192 + 12'd1);

assign zext_ln53_2_fu_568_p1 = trunc_ln1_reg_1190_pp0_iter4_reg;

assign zext_ln53_fu_416_p1 = trunc_ln145_2_reg_1164_pp0_iter4_reg;

assign zext_ln55_2_fu_422_p1 = trunc_ln145_reg_1149_pp0_iter4_reg;

assign zext_ln55_3_fu_425_p1 = trunc_ln145_reg_1149_pp0_iter4_reg;

assign zext_ln55_4_fu_428_p1 = trunc_ln145_reg_1149_pp0_iter4_reg;

assign zext_ln55_5_fu_571_p1 = tmp_reg_1210_pp0_iter4_reg;

assign zext_ln55_7_fu_574_p1 = tmp_reg_1210_pp0_iter4_reg;

assign zext_ln55_8_fu_577_p1 = tmp_reg_1210_pp0_iter4_reg;

assign zext_ln55_9_fu_580_p1 = tmp_reg_1210_pp0_iter4_reg;

assign zext_ln55_fu_419_p1 = trunc_ln145_reg_1149_pp0_iter4_reg;

assign zext_ln61_1_fu_491_p1 = trunc_ln8_fu_478_p4;

assign zext_ln61_2_fu_639_p1 = trunc_ln61_3_fu_630_p4;

assign zext_ln61_3_fu_643_p1 = trunc_ln61_3_fu_630_p4;

assign zext_ln61_fu_487_p1 = trunc_ln8_fu_478_p4;

endmodule //bd_v_multi_scaler_0_0_v_csc
