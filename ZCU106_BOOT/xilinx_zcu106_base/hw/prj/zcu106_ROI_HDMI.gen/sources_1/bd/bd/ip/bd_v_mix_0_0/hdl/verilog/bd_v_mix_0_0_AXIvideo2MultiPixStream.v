// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_mix_0_0_AXIvideo2MultiPixStream (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        srcLayer0_din,
        srcLayer0_full_n,
        srcLayer0_write,
        s_axis_video_TDATA,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        Height_dout,
        Height_empty_n,
        Height_read,
        WidthIn_dout,
        WidthIn_empty_n,
        WidthIn_read,
        layerEnableFlag_dout,
        layerEnableFlag_empty_n,
        layerEnableFlag_read,
        layerEnableFlag_out_din,
        layerEnableFlag_out_full_n,
        layerEnableFlag_out_write,
        Height_out_din,
        Height_out_full_n,
        Height_out_write,
        WidthIn_out_din,
        WidthIn_out_full_n,
        WidthIn_out_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_pp1_stage0 = 9'd32;
parameter    ap_ST_fsm_state8 = 9'd64;
parameter    ap_ST_fsm_state9 = 9'd128;
parameter    ap_ST_fsm_state10 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [47:0] srcLayer0_din;
input   srcLayer0_full_n;
output   srcLayer0_write;
input  [47:0] s_axis_video_TDATA;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
input  [5:0] s_axis_video_TKEEP;
input  [5:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
input  [11:0] Height_dout;
input   Height_empty_n;
output   Height_read;
input  [11:0] WidthIn_dout;
input   WidthIn_empty_n;
output   WidthIn_read;
input  [0:0] layerEnableFlag_dout;
input   layerEnableFlag_empty_n;
output   layerEnableFlag_read;
output  [0:0] layerEnableFlag_out_din;
input   layerEnableFlag_out_full_n;
output   layerEnableFlag_out_write;
output  [11:0] Height_out_din;
input   Height_out_full_n;
output   Height_out_write;
output  [11:0] WidthIn_out_din;
input   WidthIn_out_full_n;
output   WidthIn_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg srcLayer0_write;
reg s_axis_video_TREADY;
reg Height_read;
reg WidthIn_read;
reg layerEnableFlag_read;
reg layerEnableFlag_out_write;
reg Height_out_write;
reg WidthIn_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    srcLayer0_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln3094_reg_613;
reg    s_axis_video_TDATA_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] ap_phi_mux_sof_phi_fu_223_p4;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln3094_fu_490_p2;
wire   [0:0] or_ln3098_fu_495_p2;
wire    ap_CS_fsm_state9;
wire   [0:0] ap_phi_mux_eol_3_phi_fu_406_p4;
reg    Height_blk_n;
reg    WidthIn_blk_n;
reg    layerEnableFlag_blk_n;
reg    layerEnableFlag_out_blk_n;
reg    Height_out_blk_n;
reg    WidthIn_out_blk_n;
reg   [10:0] j_reg_263;
reg   [0:0] eol_reg_274;
reg   [0:0] sof_7_reg_286;
reg   [0:0] axi_last_V_3_reg_296;
reg   [47:0] axi_data_V_3_reg_306;
reg   [47:0] axi_data_V_6_reg_317;
reg   [0:0] axi_last_V_9_reg_329;
reg    ap_block_state3;
reg    ap_block_state9;
reg   [0:0] layerEnableFlag_read_reg_549;
wire   [11:0] grp_reg_unsigned_short_s_fu_429_ap_return;
reg   [11:0] rows_reg_553;
wire    ap_CS_fsm_state2;
wire   [11:0] grp_reg_unsigned_short_s_fu_435_ap_return;
reg   [11:0] cols_reg_559;
wire   [10:0] trunc_ln_i_fu_445_p4;
reg   [10:0] trunc_ln_i_reg_574;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln3091_fu_454_p2;
reg   [0:0] icmp_ln3091_reg_579;
wire   [0:0] cmp7284_i_i_fu_459_p2;
reg   [0:0] cmp7284_i_i_reg_590;
wire   [11:0] i_2_fu_470_p2;
reg   [11:0] i_2_reg_594;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln3091_1_fu_479_p2;
wire   [10:0] j_2_fu_484_p2;
reg    ap_predicate_op144_read_state6;
reg    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] p_Result_0_i_i_reg_621;
reg   [7:0] p_Result_1_i_i_reg_626;
reg   [15:0] tmp_1_i_i_reg_631;
wire   [15:0] trunc_ln174_fu_531_p1;
reg   [15:0] trunc_ln174_reg_636;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg   [47:0] axi_data_V_reg_195;
reg   [0:0] axi_last_V_reg_207;
reg   [0:0] sof_reg_219;
reg   [11:0] i_reg_230;
wire    ap_CS_fsm_state10;
reg   [0:0] axi_last_V_2_reg_241;
reg   [0:0] axi_last_V_6_reg_391;
reg   [47:0] axi_data_V_2_reg_252;
reg   [47:0] axi_data_V_7_reg_379;
reg   [0:0] ap_phi_mux_eol_phi_fu_278_p4;
reg   [0:0] ap_phi_mux_sof_7_phi_fu_289_p4;
reg   [0:0] ap_phi_mux_axi_last_V_3_phi_fu_299_p4;
reg   [47:0] ap_phi_mux_axi_data_V_3_phi_fu_309_p4;
reg   [47:0] ap_phi_mux_axi_data_V_6_phi_fu_321_p4;
wire   [47:0] ap_phi_reg_pp1_iter0_axi_data_V_6_reg_317;
wire   [0:0] ap_phi_reg_pp1_iter0_axi_last_V_9_reg_329;
reg   [47:0] ap_phi_mux_axi_data_V_5_i_ph_phi_fu_345_p4;
reg   [47:0] axi_data_V_5_i_ph_reg_342;
wire    ap_CS_fsm_state8;
reg   [0:0] ap_phi_mux_axi_last_V_5_i_ph_phi_fu_357_p4;
reg   [0:0] axi_last_V_5_i_ph_reg_354;
reg   [0:0] ap_phi_mux_eol_2_i_ph_phi_fu_370_p4;
reg   [0:0] eol_2_i_ph_reg_366;
reg   [0:0] eol_3_reg_403;
reg   [0:0] sof_5_fu_124;
reg    ap_block_state1;
reg    ap_block_pp1_stage0_01001;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_226;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

bd_v_mix_0_0_reg_unsigned_short_s grp_reg_unsigned_short_s_fu_429(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(Height_dout),
    .ap_return(grp_reg_unsigned_short_s_fu_429_ap_return)
);

bd_v_mix_0_0_reg_unsigned_short_s grp_reg_unsigned_short_s_fu_435(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .d(WidthIn_dout),
    .ap_return(grp_reg_unsigned_short_s_fu_435_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & ((layerEnableFlag_read_reg_549 == 1'd0) | ((icmp_ln3091_1_fu_479_p2 == 1'd1) | (icmp_ln3091_reg_579 == 1'd1))))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        axi_data_V_2_reg_252 <= axi_data_V_7_reg_379;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln3091_fu_454_p2 == 1'd0))) begin
        axi_data_V_2_reg_252 <= axi_data_V_reg_195;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        axi_data_V_3_reg_306 <= axi_data_V_2_reg_252;
    end else if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        axi_data_V_3_reg_306 <= axi_data_V_6_reg_317;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        axi_data_V_5_i_ph_reg_342 <= axi_data_V_3_reg_306;
    end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd1) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        axi_data_V_5_i_ph_reg_342 <= axi_data_V_2_reg_252;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if (((or_ln3098_fu_495_p2 == 1'd1) & (icmp_ln3094_fu_490_p2 == 1'd0))) begin
            axi_data_V_6_reg_317 <= ap_phi_mux_axi_data_V_3_phi_fu_309_p4;
        end else if (((or_ln3098_fu_495_p2 == 1'd0) & (icmp_ln3094_fu_490_p2 == 1'd0))) begin
            axi_data_V_6_reg_317 <= s_axis_video_TDATA;
        end else if ((1'b1 == 1'b1)) begin
            axi_data_V_6_reg_317 <= ap_phi_reg_pp1_iter0_axi_data_V_6_reg_317;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        axi_data_V_7_reg_379 <= ap_phi_mux_axi_data_V_5_i_ph_phi_fu_345_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0))) begin
        axi_data_V_7_reg_379 <= s_axis_video_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        axi_last_V_2_reg_241 <= axi_last_V_6_reg_391;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln3091_fu_454_p2 == 1'd0))) begin
        axi_last_V_2_reg_241 <= axi_last_V_reg_207;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        axi_last_V_3_reg_296 <= axi_last_V_2_reg_241;
    end else if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        axi_last_V_3_reg_296 <= axi_last_V_9_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        axi_last_V_5_i_ph_reg_354 <= eol_reg_274;
    end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd1) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        axi_last_V_5_i_ph_reg_354 <= axi_last_V_2_reg_241;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        axi_last_V_6_reg_391 <= ap_phi_mux_axi_last_V_5_i_ph_phi_fu_357_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0))) begin
        axi_last_V_6_reg_391 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if (((or_ln3098_fu_495_p2 == 1'd1) & (icmp_ln3094_fu_490_p2 == 1'd0))) begin
            axi_last_V_9_reg_329 <= ap_phi_mux_axi_last_V_3_phi_fu_299_p4;
        end else if (((or_ln3098_fu_495_p2 == 1'd0) & (icmp_ln3094_fu_490_p2 == 1'd0))) begin
            axi_last_V_9_reg_329 <= s_axis_video_TLAST;
        end else if ((1'b1 == 1'b1)) begin
            axi_last_V_9_reg_329 <= ap_phi_reg_pp1_iter0_axi_last_V_9_reg_329;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        eol_2_i_ph_reg_366 <= eol_reg_274;
    end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd1) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        eol_2_i_ph_reg_366 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        eol_3_reg_403 <= ap_phi_mux_eol_2_i_ph_phi_fu_370_p4;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0))) begin
        eol_3_reg_403 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        eol_reg_274 <= 1'd0;
    end else if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        eol_reg_274 <= axi_last_V_9_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_230 <= i_2_reg_594;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln3091_fu_454_p2 == 1'd0))) begin
        i_reg_230 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        j_reg_263 <= 11'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3094_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        j_reg_263 <= j_2_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln3091_fu_454_p2 == 1'd0))) begin
        sof_5_fu_124 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        sof_5_fu_124 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        sof_7_reg_286 <= sof_5_fu_124;
    end else if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        sof_7_reg_286 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        sof_reg_219 <= 1'd0;
    end else if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_219 == 1'd0))) begin
        sof_reg_219 <= s_axis_video_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_219 == 1'd0))) begin
        axi_data_V_reg_195 <= s_axis_video_TDATA;
        axi_last_V_reg_207 <= s_axis_video_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln3091_fu_454_p2 == 1'd0))) begin
        cmp7284_i_i_reg_590 <= cmp7284_i_i_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cols_reg_559 <= grp_reg_unsigned_short_s_fu_435_ap_return;
        rows_reg_553 <= grp_reg_unsigned_short_s_fu_429_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
        i_2_reg_594 <= i_2_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln3091_reg_579 <= icmp_ln3091_fu_454_p2;
        trunc_ln_i_reg_574 <= {{cols_reg_559[11:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln3094_reg_613 <= icmp_ln3094_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        layerEnableFlag_read_reg_549 <= layerEnableFlag_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln3094_fu_490_p2 == 1'd0))) begin
        p_Result_0_i_i_reg_621 <= {{ap_phi_mux_axi_data_V_6_phi_fu_321_p4[23:16]}};
        p_Result_1_i_i_reg_626 <= {{ap_phi_mux_axi_data_V_6_phi_fu_321_p4[47:40]}};
        tmp_1_i_i_reg_631 <= {{ap_phi_mux_axi_data_V_6_phi_fu_321_p4[39:24]}};
        trunc_ln174_reg_636 <= trunc_ln174_fu_531_p1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_blk_n = Height_empty_n;
    end else begin
        Height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_blk_n = Height_out_full_n;
    end else begin
        Height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_out_write = 1'b1;
    end else begin
        Height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        Height_read = 1'b1;
    end else begin
        Height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_blk_n = WidthIn_empty_n;
    end else begin
        WidthIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_blk_n = WidthIn_out_full_n;
    end else begin
        WidthIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_write = 1'b1;
    end else begin
        WidthIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_read = 1'b1;
    end else begin
        WidthIn_read = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln3094_fu_490_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((layerEnableFlag_read_reg_549 == 1'd0) | ((icmp_ln3091_1_fu_479_p2 == 1'd1) | (icmp_ln3091_reg_579 == 1'd1))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_axi_data_V_3_phi_fu_309_p4 = axi_data_V_6_reg_317;
    end else begin
        ap_phi_mux_axi_data_V_3_phi_fu_309_p4 = axi_data_V_3_reg_306;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        ap_phi_mux_axi_data_V_5_i_ph_phi_fu_345_p4 = axi_data_V_3_reg_306;
    end else begin
        ap_phi_mux_axi_data_V_5_i_ph_phi_fu_345_p4 = axi_data_V_5_i_ph_reg_342;
    end
end

always @ (*) begin
    if ((icmp_ln3094_fu_490_p2 == 1'd0)) begin
        if ((or_ln3098_fu_495_p2 == 1'd1)) begin
            ap_phi_mux_axi_data_V_6_phi_fu_321_p4 = ap_phi_mux_axi_data_V_3_phi_fu_309_p4;
        end else if ((or_ln3098_fu_495_p2 == 1'd0)) begin
            ap_phi_mux_axi_data_V_6_phi_fu_321_p4 = s_axis_video_TDATA;
        end else begin
            ap_phi_mux_axi_data_V_6_phi_fu_321_p4 = ap_phi_reg_pp1_iter0_axi_data_V_6_reg_317;
        end
    end else begin
        ap_phi_mux_axi_data_V_6_phi_fu_321_p4 = ap_phi_reg_pp1_iter0_axi_data_V_6_reg_317;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_axi_last_V_3_phi_fu_299_p4 = axi_last_V_9_reg_329;
    end else begin
        ap_phi_mux_axi_last_V_3_phi_fu_299_p4 = axi_last_V_3_reg_296;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        ap_phi_mux_axi_last_V_5_i_ph_phi_fu_357_p4 = eol_reg_274;
    end else begin
        ap_phi_mux_axi_last_V_5_i_ph_phi_fu_357_p4 = axi_last_V_5_i_ph_reg_354;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (cmp7284_i_i_reg_590 == 1'd0))) begin
        ap_phi_mux_eol_2_i_ph_phi_fu_370_p4 = eol_reg_274;
    end else begin
        ap_phi_mux_eol_2_i_ph_phi_fu_370_p4 = eol_2_i_ph_reg_366;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_eol_phi_fu_278_p4 = axi_last_V_9_reg_329;
    end else begin
        ap_phi_mux_eol_phi_fu_278_p4 = eol_reg_274;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_sof_7_phi_fu_289_p4 = 1'd0;
    end else begin
        ap_phi_mux_sof_7_phi_fu_289_p4 = sof_7_reg_286;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & ((layerEnableFlag_read_reg_549 == 1'd0) | ((icmp_ln3091_1_fu_479_p2 == 1'd1) | (icmp_ln3091_reg_579 == 1'd1))))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layerEnableFlag_blk_n = layerEnableFlag_empty_n;
    end else begin
        layerEnableFlag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layerEnableFlag_out_blk_n = layerEnableFlag_out_full_n;
    end else begin
        layerEnableFlag_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layerEnableFlag_out_write = 1'b1;
    end else begin
        layerEnableFlag_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layerEnableFlag_read = 1'b1;
    end else begin
        layerEnableFlag_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (or_ln3098_fu_495_p2 == 1'd0) & (icmp_ln3094_fu_490_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (sof_reg_219 == 1'd0)))) begin
        s_axis_video_TDATA_blk_n = s_axis_video_TVALID;
    end else begin
        s_axis_video_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op144_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | (~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0)) | (~((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_219 == 1'd0)))) begin
        s_axis_video_TREADY = 1'b1;
    end else begin
        s_axis_video_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        srcLayer0_blk_n = srcLayer0_full_n;
    end else begin
        srcLayer0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln3094_reg_613 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        srcLayer0_write = 1'b1;
    end else begin
        srcLayer0_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (sof_reg_219 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_sof_phi_fu_223_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & ((layerEnableFlag_read_reg_549 == 1'd0) | ((icmp_ln3091_1_fu_479_p2 == 1'd1) | (icmp_ln3091_reg_579 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln3091_1_fu_479_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5) & (cmp7284_i_i_reg_590 == 1'd0) & (icmp_ln3091_reg_579 == 1'd0) & (layerEnableFlag_read_reg_549 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln3094_fu_490_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln3094_fu_490_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (eol_3_reg_403 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (ap_phi_mux_eol_3_phi_fu_406_p4 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Height_out_din = Height_dout;

assign WidthIn_out_din = WidthIn_dout;

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((icmp_ln3094_reg_613 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (srcLayer0_full_n == 1'b0)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op144_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((icmp_ln3094_reg_613 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (srcLayer0_full_n == 1'b0)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op144_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((icmp_ln3094_reg_613 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (srcLayer0_full_n == 1'b0)) | ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op144_read_state6 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((layerEnableFlag_out_full_n == 1'b0) | (layerEnableFlag_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == Height_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == Height_empty_n) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((s_axis_video_TVALID == 1'b0) & (sof_reg_219 == 1'd0));
end

always @ (*) begin
    ap_block_state6_pp1_stage0_iter0 = ((s_axis_video_TVALID == 1'b0) & (ap_predicate_op144_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((icmp_ln3094_reg_613 == 1'd0) & (srcLayer0_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((s_axis_video_TVALID == 1'b0) & (eol_3_reg_403 == 1'd0));
end

always @ (*) begin
    ap_condition_226 = ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_eol_3_phi_fu_406_p4 = eol_3_reg_403;

assign ap_phi_mux_sof_phi_fu_223_p4 = sof_reg_219;

assign ap_phi_reg_pp1_iter0_axi_data_V_6_reg_317 = 'bx;

assign ap_phi_reg_pp1_iter0_axi_last_V_9_reg_329 = 'bx;

always @ (*) begin
    ap_predicate_op144_read_state6 = ((or_ln3098_fu_495_p2 == 1'd0) & (icmp_ln3094_fu_490_p2 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cmp7284_i_i_fu_459_p2 = ((trunc_ln_i_fu_445_p4 == 11'd0) ? 1'b1 : 1'b0);

assign i_2_fu_470_p2 = (i_reg_230 + 12'd1);

assign icmp_ln3091_1_fu_479_p2 = ((i_reg_230 == rows_reg_553) ? 1'b1 : 1'b0);

assign icmp_ln3091_fu_454_p2 = ((rows_reg_553 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln3094_fu_490_p2 = ((j_reg_263 == trunc_ln_i_reg_574) ? 1'b1 : 1'b0);

assign j_2_fu_484_p2 = (j_reg_263 + 11'd1);

assign layerEnableFlag_out_din = layerEnableFlag_dout;

assign or_ln3098_fu_495_p2 = (ap_phi_mux_sof_7_phi_fu_289_p4 | ap_phi_mux_eol_phi_fu_278_p4);

assign srcLayer0_din = {{{{tmp_1_i_i_reg_631}, {p_Result_1_i_i_reg_626}}, {trunc_ln174_reg_636}}, {p_Result_0_i_i_reg_621}};

assign start_out = real_start;

assign trunc_ln174_fu_531_p1 = ap_phi_mux_axi_data_V_6_phi_fu_321_p4[15:0];

assign trunc_ln_i_fu_445_p4 = {{cols_reg_559[11:1]}};

endmodule //bd_v_mix_0_0_AXIvideo2MultiPixStream
