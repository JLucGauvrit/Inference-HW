// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_hcresampler38 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_1_dout,
        stream_1_empty_n,
        stream_1_read,
        stream_2_din,
        stream_2_full_n,
        stream_2_write,
        HeightIn_dout,
        HeightIn_empty_n,
        HeightIn_read,
        WidthIn_dout,
        WidthIn_empty_n,
        WidthIn_read,
        bPassThruHcrUp_loc_dout,
        bPassThruHcrUp_loc_empty_n,
        bPassThruHcrUp_loc_read,
        HeightIn_out_din,
        HeightIn_out_full_n,
        HeightIn_out_write,
        WidthIn_out_din,
        WidthIn_out_full_n,
        WidthIn_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_1_dout;
input   stream_1_empty_n;
output   stream_1_read;
output  [47:0] stream_2_din;
input   stream_2_full_n;
output   stream_2_write;
input  [15:0] HeightIn_dout;
input   HeightIn_empty_n;
output   HeightIn_read;
input  [15:0] WidthIn_dout;
input   WidthIn_empty_n;
output   WidthIn_read;
input  [0:0] bPassThruHcrUp_loc_dout;
input   bPassThruHcrUp_loc_empty_n;
output   bPassThruHcrUp_loc_read;
output  [15:0] HeightIn_out_din;
input   HeightIn_out_full_n;
output   HeightIn_out_write;
output  [15:0] WidthIn_out_din;
input   WidthIn_out_full_n;
output   WidthIn_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_1_read;
reg[47:0] stream_2_din;
reg stream_2_write;
reg HeightIn_read;
reg WidthIn_read;
reg bPassThruHcrUp_loc_read;
reg HeightIn_out_write;
reg WidthIn_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_1_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln67_reg_865;
reg   [0:0] icmp_ln77_reg_869;
reg    stream_2_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln67_reg_865_pp0_iter1_reg;
reg   [0:0] tmp_reg_883;
reg   [0:0] tmp_reg_883_pp0_iter1_reg;
reg   [0:0] bPassThruHcrUp_loc_read_reg_832;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] tmp_reg_883_pp0_iter2_reg;
reg    HeightIn_blk_n;
reg    WidthIn_blk_n;
reg    bPassThruHcrUp_loc_blk_n;
reg    HeightIn_out_blk_n;
reg    WidthIn_out_blk_n;
reg   [14:0] x_reg_242;
reg   [15:0] loopHeight_reg_827;
wire   [15:0] select_ln62_fu_253_p3;
reg   [15:0] select_ln62_reg_836;
wire   [14:0] lshr_ln_fu_261_p4;
reg   [14:0] lshr_ln_reg_841;
wire   [15:0] loopWidth_fu_275_p2;
reg   [15:0] loopWidth_reg_846;
wire   [14:0] y_fu_281_p2;
reg   [14:0] y_reg_851;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln64_fu_291_p2;
wire   [14:0] x_4_fu_296_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op72_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op128_write_state5;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_predicate_op146_write_state6;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_306_p2;
wire   [0:0] icmp_ln77_fu_316_p2;
wire   [0:0] cmp119_i_i_fu_321_p2;
reg   [0:0] cmp119_i_i_reg_873;
reg   [0:0] cmp119_i_i_reg_873_pp0_iter1_reg;
wire   [7:0] outpix_val_V_1_fu_489_p3;
reg   [7:0] outpix_val_V_1_reg_887;
wire   [7:0] outpix_val_V_2_fu_496_p3;
reg   [7:0] outpix_val_V_2_reg_892;
reg   [7:0] outpix_val_V_4_reg_897;
reg   [7:0] outpix_val_V_5_reg_902;
reg   [7:0] pixbuf_y_val_V_2_0_0381_i_i_load_reg_907;
reg   [7:0] pixbuf_y_val_V_3_0_0382_i_i_load_reg_912;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter2_state5;
reg   [14:0] y_3_reg_231;
reg    ap_block_state1;
wire    ap_CS_fsm_state7;
reg   [7:0] mpix_y_val_V_0_fu_96;
wire   [7:0] inpix_val_V_0_fu_335_p1;
reg   [7:0] inpix_val_V_1_fu_100;
reg   [7:0] inpix_val_V_2_fu_104;
reg   [7:0] mpix_y_val_V_1_fu_108;
reg   [7:0] inpix_val_V_4_fu_112;
reg   [7:0] inpix_val_V_5_fu_116;
reg   [7:0] pixbuf_cr_val_V_4_0_0_i_i_fu_120;
reg   [7:0] pixbuf_cr_val_V_3_0_0_i_i_fu_124;
wire   [7:0] select_ln158_12_fu_510_p3;
reg   [7:0] mpix_y_val_V_0_8_fu_128;
reg   [7:0] mpix_y_val_V_1_8_fu_132;
reg   [7:0] inpix_val_V_1_3_fu_136;
reg   [7:0] inpix_val_V_4_4_fu_140;
reg   [7:0] pixbuf_cr_val_V_2_0_0_i_i_fu_144;
wire   [7:0] select_ln158_11_fu_503_p3;
reg   [7:0] pixbuf_y_val_V_2_0_0381_i_i_fu_148;
reg   [7:0] pixbuf_y_val_V_3_0_0382_i_i_fu_152;
reg   [7:0] pixbuf_y_val_V_4_0_0383_i_i_fu_156;
reg   [7:0] pixbuf_y_val_V_5_0_0384_i_i_fu_160;
reg   [7:0] mpix_y_val_V_0_9_fu_164;
reg   [7:0] mpix_y_val_V_1_9_fu_168;
reg   [7:0] pixbuf_cb_val_V_2_0_0_i_i_fu_172;
wire   [7:0] select_ln158_8_fu_482_p3;
reg   [7:0] pixbuf_cb_val_V_3_0_0_i_i_fu_176;
wire   [7:0] select_ln158_fu_475_p3;
reg   [7:0] inpix_val_V_1_4_fu_180;
wire   [47:0] or_ln174_i_i_fu_601_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_1_i_i_fu_684_p7;
wire   [15:0] zext_ln62_fu_271_p1;
wire   [15:0] zext_ln64_fu_287_p1;
wire   [15:0] zext_ln187_fu_302_p1;
wire   [15:0] out_x_fu_311_p2;
wire   [8:0] zext_ln215_fu_517_p1;
wire   [8:0] add_ln1346_fu_525_p2;
wire   [8:0] zext_ln215_43_fu_521_p1;
wire   [8:0] add_ln1346_14_fu_531_p2;
wire   [8:0] zext_ln215_44_fu_547_p1;
wire   [8:0] add_ln1346_15_fu_555_p2;
wire   [8:0] zext_ln215_45_fu_551_p1;
wire   [8:0] add_ln1346_16_fu_561_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter2_state5)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_306_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_reg_242 <= x_4_fu_296_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd1))) begin
        x_reg_242 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_3_reg_231 <= y_reg_851;
    end else if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_3_reg_231 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bPassThruHcrUp_loc_read_reg_832 <= bPassThruHcrUp_loc_dout;
        loopHeight_reg_827 <= HeightIn_dout;
        loopWidth_reg_846 <= loopWidth_fu_275_p2;
        lshr_ln_reg_841 <= {{WidthIn_dout[15:1]}};
        select_ln62_reg_836[1 : 0] <= select_ln62_fu_253_p3[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_306_p2 == 1'd1))) begin
        cmp119_i_i_reg_873 <= cmp119_i_i_fu_321_p2;
        icmp_ln77_reg_869 <= icmp_ln77_fu_316_p2;
        tmp_reg_883 <= out_x_fu_311_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp119_i_i_reg_873_pp0_iter1_reg <= cmp119_i_i_reg_873;
        icmp_ln67_reg_865 <= icmp_ln67_fu_306_p2;
        icmp_ln67_reg_865_pp0_iter1_reg <= icmp_ln67_reg_865;
        tmp_reg_883_pp0_iter1_reg <= tmp_reg_883;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_869 == 1'd1) & (icmp_ln67_reg_865 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_val_V_1_3_fu_136 <= {{stream_1_dout[15:8]}};
        inpix_val_V_1_fu_100 <= {{stream_1_dout[15:8]}};
        inpix_val_V_2_fu_104 <= {{stream_1_dout[23:16]}};
        inpix_val_V_4_4_fu_140 <= {{stream_1_dout[39:32]}};
        inpix_val_V_4_fu_112 <= {{stream_1_dout[39:32]}};
        inpix_val_V_5_fu_116 <= {{stream_1_dout[47:40]}};
        mpix_y_val_V_0_8_fu_128 <= inpix_val_V_0_fu_335_p1;
        mpix_y_val_V_0_fu_96 <= inpix_val_V_0_fu_335_p1;
        mpix_y_val_V_1_8_fu_132 <= {{stream_1_dout[31:24]}};
        mpix_y_val_V_1_fu_108 <= {{stream_1_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_865_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inpix_val_V_1_4_fu_180 <= inpix_val_V_1_3_fu_136;
        mpix_y_val_V_0_9_fu_164 <= mpix_y_val_V_0_8_fu_128;
        mpix_y_val_V_1_9_fu_168 <= mpix_y_val_V_1_8_fu_132;
        pixbuf_cb_val_V_2_0_0_i_i_fu_172 <= select_ln158_8_fu_482_p3;
        pixbuf_cb_val_V_3_0_0_i_i_fu_176 <= select_ln158_fu_475_p3;
        pixbuf_cr_val_V_2_0_0_i_i_fu_144 <= select_ln158_11_fu_503_p3;
        pixbuf_cr_val_V_3_0_0_i_i_fu_124 <= select_ln158_12_fu_510_p3;
        pixbuf_cr_val_V_4_0_0_i_i_fu_120 <= inpix_val_V_4_4_fu_140;
        pixbuf_y_val_V_2_0_0381_i_i_fu_148 <= pixbuf_y_val_V_4_0_0383_i_i_fu_156;
        pixbuf_y_val_V_3_0_0382_i_i_fu_152 <= pixbuf_y_val_V_5_0_0384_i_i_fu_160;
        pixbuf_y_val_V_4_0_0383_i_i_fu_156 <= mpix_y_val_V_0_9_fu_164;
        pixbuf_y_val_V_5_0_0384_i_i_fu_160 <= mpix_y_val_V_1_9_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_865_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outpix_val_V_1_reg_887 <= outpix_val_V_1_fu_489_p3;
        outpix_val_V_2_reg_892 <= outpix_val_V_2_fu_496_p3;
        outpix_val_V_4_reg_897 <= {{add_ln1346_14_fu_531_p2[8:1]}};
        outpix_val_V_5_reg_902 <= {{add_ln1346_16_fu_561_p2[8:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((bPassThruHcrUp_loc_read_reg_832 == 1'd0) & (tmp_reg_883_pp0_iter1_reg == 1'd0) & (icmp_ln67_reg_865_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pixbuf_y_val_V_2_0_0381_i_i_load_reg_907 <= pixbuf_y_val_V_2_0_0381_i_i_fu_148;
        pixbuf_y_val_V_3_0_0382_i_i_load_reg_912 <= pixbuf_y_val_V_3_0_0382_i_i_fu_152;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_reg_883_pp0_iter2_reg <= tmp_reg_883_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_851 <= y_fu_281_p2;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_blk_n = HeightIn_empty_n;
    end else begin
        HeightIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_out_blk_n = HeightIn_out_full_n;
    end else begin
        HeightIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_out_write = 1'b1;
    end else begin
        HeightIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_read = 1'b1;
    end else begin
        HeightIn_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_blk_n = WidthIn_empty_n;
    end else begin
        WidthIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_blk_n = WidthIn_out_full_n;
    end else begin
        WidthIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_write = 1'b1;
    end else begin
        WidthIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_read = 1'b1;
    end else begin
        WidthIn_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_306_p2 == 1'd0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruHcrUp_loc_blk_n = bPassThruHcrUp_loc_empty_n;
    end else begin
        bPassThruHcrUp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruHcrUp_loc_read = 1'b1;
    end else begin
        bPassThruHcrUp_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_869 == 1'd1) & (icmp_ln67_reg_865 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_1_blk_n = stream_1_empty_n;
    end else begin
        stream_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op72_read_state4 == 1'b1))) begin
        stream_1_read = 1'b1;
    end else begin
        stream_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_883_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (bPassThruHcrUp_loc_read_reg_832 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThruHcrUp_loc_read_reg_832 == 1'd1) & (tmp_reg_883_pp0_iter1_reg == 1'd0) & (icmp_ln67_reg_865_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_2_blk_n = stream_2_full_n;
    end else begin
        stream_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op146_write_state6 == 1'b1))) begin
            stream_2_din = or_ln174_1_i_i_fu_684_p7;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op128_write_state5 == 1'b1))) begin
            stream_2_din = or_ln174_i_i_fu_601_p7;
        end else begin
            stream_2_din = 'bx;
        end
    end else begin
        stream_2_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op146_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op128_write_state5 == 1'b1)))) begin
        stream_2_write = 1'b1;
    end else begin
        stream_2_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_291_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HeightIn_out_din = HeightIn_dout;

assign WidthIn_out_din = WidthIn_dout;

assign add_ln1346_14_fu_531_p2 = (add_ln1346_fu_525_p2 + zext_ln215_43_fu_521_p1);

assign add_ln1346_15_fu_555_p2 = (zext_ln215_44_fu_547_p1 + 9'd1);

assign add_ln1346_16_fu_561_p2 = (add_ln1346_15_fu_555_p2 + zext_ln215_45_fu_551_p1);

assign add_ln1346_fu_525_p2 = (zext_ln215_fu_517_p1 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op146_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op128_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_1_empty_n == 1'b0) & (ap_predicate_op72_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op146_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op128_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_1_empty_n == 1'b0) & (ap_predicate_op72_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op146_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_2_full_n == 1'b0) & (ap_predicate_op128_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_1_empty_n == 1'b0) & (ap_predicate_op72_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (bPassThruHcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((stream_1_empty_n == 1'b0) & (ap_predicate_op72_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((stream_2_full_n == 1'b0) & (ap_predicate_op128_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = ((stream_2_full_n == 1'b0) & (ap_predicate_op146_write_state6 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op128_write_state5 = ((bPassThruHcrUp_loc_read_reg_832 == 1'd1) & (tmp_reg_883_pp0_iter1_reg == 1'd0) & (icmp_ln67_reg_865_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op146_write_state6 = ((tmp_reg_883_pp0_iter2_reg == 1'd0) & (bPassThruHcrUp_loc_read_reg_832 == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_read_state4 = ((icmp_ln77_reg_869 == 1'd1) & (icmp_ln67_reg_865 == 1'd1));
end

assign cmp119_i_i_fu_321_p2 = ((x_reg_242 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_291_p2 = (($signed(zext_ln64_fu_287_p1) < $signed(loopHeight_reg_827)) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_306_p2 = (($signed(zext_ln187_fu_302_p1) < $signed(loopWidth_reg_846)) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_316_p2 = ((x_reg_242 < lshr_ln_reg_841) ? 1'b1 : 1'b0);

assign inpix_val_V_0_fu_335_p1 = stream_1_dout[7:0];

assign loopWidth_fu_275_p2 = (select_ln62_fu_253_p3 + zext_ln62_fu_271_p1);

assign lshr_ln_fu_261_p4 = {{WidthIn_dout[15:1]}};

assign or_ln174_1_i_i_fu_684_p7 = {{{{{{outpix_val_V_5_reg_902}, {outpix_val_V_4_reg_897}}, {pixbuf_y_val_V_3_0_0382_i_i_load_reg_912}}, {outpix_val_V_2_reg_892}}, {outpix_val_V_1_reg_887}}, {pixbuf_y_val_V_2_0_0381_i_i_load_reg_907}};

assign or_ln174_i_i_fu_601_p7 = {{{{{{inpix_val_V_5_fu_116}, {inpix_val_V_4_fu_112}}, {mpix_y_val_V_1_fu_108}}, {inpix_val_V_2_fu_104}}, {inpix_val_V_1_fu_100}}, {mpix_y_val_V_0_fu_96}};

assign out_x_fu_311_p2 = (zext_ln187_fu_302_p1 - select_ln62_reg_836);

assign outpix_val_V_1_fu_489_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_3_fu_136 : pixbuf_cb_val_V_2_0_0_i_i_fu_172);

assign outpix_val_V_2_fu_496_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_4_4_fu_140 : pixbuf_cr_val_V_2_0_0_i_i_fu_144);

assign select_ln158_11_fu_503_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_4_4_fu_140 : pixbuf_cr_val_V_3_0_0_i_i_fu_124);

assign select_ln158_12_fu_510_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_4_4_fu_140 : pixbuf_cr_val_V_4_0_0_i_i_fu_120);

assign select_ln158_8_fu_482_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_3_fu_136 : pixbuf_cb_val_V_3_0_0_i_i_fu_176);

assign select_ln158_fu_475_p3 = ((cmp119_i_i_reg_873_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_3_fu_136 : inpix_val_V_1_4_fu_180);

assign select_ln62_fu_253_p3 = ((bPassThruHcrUp_loc_dout[0:0] == 1'b1) ? 16'd0 : 16'd3);

assign x_4_fu_296_p2 = (x_reg_242 + 15'd1);

assign y_fu_281_p2 = (y_3_reg_231 + 15'd1);

assign zext_ln187_fu_302_p1 = x_reg_242;

assign zext_ln215_43_fu_521_p1 = outpix_val_V_1_fu_489_p3;

assign zext_ln215_44_fu_547_p1 = select_ln158_11_fu_503_p3;

assign zext_ln215_45_fu_551_p1 = outpix_val_V_2_fu_496_p3;

assign zext_ln215_fu_517_p1 = select_ln158_8_fu_482_p3;

assign zext_ln62_fu_271_p1 = lshr_ln_fu_261_p4;

assign zext_ln64_fu_287_p1 = y_3_reg_231;

always @ (posedge ap_clk) begin
    select_ln62_reg_836[15:2] <= 14'b00000000000000;
end

endmodule //bd_v_multi_scaler_0_0_v_hcresampler38
