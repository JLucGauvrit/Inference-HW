// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_hcresampler39 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_4_csc_dout,
        stream_4_csc_empty_n,
        stream_4_csc_read,
        stream_5_din,
        stream_5_full_n,
        stream_5_write,
        HeightOut_dout,
        HeightOut_empty_n,
        HeightOut_read,
        WidthOut_dout,
        WidthOut_empty_n,
        WidthOut_read,
        bPassThruHcrDown_loc_dout,
        bPassThruHcrDown_loc_empty_n,
        bPassThruHcrDown_loc_read,
        HeightOut_out_din,
        HeightOut_out_full_n,
        HeightOut_out_write,
        WidthOut_out_din,
        WidthOut_out_full_n,
        WidthOut_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state7 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_4_csc_dout;
input   stream_4_csc_empty_n;
output   stream_4_csc_read;
output  [47:0] stream_5_din;
input   stream_5_full_n;
output   stream_5_write;
input  [15:0] HeightOut_dout;
input   HeightOut_empty_n;
output   HeightOut_read;
input  [15:0] WidthOut_dout;
input   WidthOut_empty_n;
output   WidthOut_read;
input  [0:0] bPassThruHcrDown_loc_dout;
input   bPassThruHcrDown_loc_empty_n;
output   bPassThruHcrDown_loc_read;
output  [15:0] HeightOut_out_din;
input   HeightOut_out_full_n;
output   HeightOut_out_write;
output  [15:0] WidthOut_out_din;
input   WidthOut_out_full_n;
output   WidthOut_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_4_csc_read;
reg[47:0] stream_5_din;
reg stream_5_write;
reg HeightOut_read;
reg WidthOut_read;
reg bPassThruHcrDown_loc_read;
reg HeightOut_out_write;
reg WidthOut_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_4_csc_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln67_reg_1021;
reg   [0:0] icmp_ln77_reg_1025;
reg    stream_5_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln67_reg_1021_pp0_iter1_reg;
reg   [0:0] tmp_reg_1043;
reg   [0:0] tmp_reg_1043_pp0_iter1_reg;
reg   [0:0] bPassThruHcrDown_loc_read_reg_986;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] tmp_reg_1043_pp0_iter2_reg;
reg    HeightOut_blk_n;
reg    WidthOut_blk_n;
reg    bPassThruHcrDown_loc_blk_n;
reg    HeightOut_out_blk_n;
reg    WidthOut_out_blk_n;
reg   [14:0] x_reg_262;
reg   [15:0] loopHeight_reg_981;
wire   [15:0] zext_ln30_fu_295_p1;
reg   [15:0] zext_ln30_reg_992;
wire   [14:0] lshr_ln_fu_299_p4;
reg   [14:0] lshr_ln_reg_997;
wire   [15:0] loopWidth_fu_313_p2;
reg   [15:0] loopWidth_reg_1002;
wire   [14:0] y_fu_319_p2;
reg   [14:0] y_reg_1007;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln64_fu_329_p2;
wire   [14:0] x_3_fu_334_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op77_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op151_write_state5;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_predicate_op169_write_state6;
reg    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_344_p2;
wire   [0:0] icmp_ln77_fu_354_p2;
reg   [0:0] icmp_ln77_reg_1025_pp0_iter1_reg;
wire   [0:0] cmp119_i_i_fu_359_p2;
reg   [0:0] cmp119_i_i_reg_1031;
reg   [0:0] cmp119_i_i_reg_1031_pp0_iter1_reg;
wire   [7:0] pixbuf_y_val_V_load_4_0_phi_i_i_fu_591_p3;
reg   [7:0] pixbuf_y_val_V_load_4_0_phi_i_i_reg_1047;
reg   [7:0] outpix_val_V_1_reg_1052;
wire   [7:0] pixbuf_y_val_V_load_4_1_phi_i_i_fu_706_p3;
reg   [7:0] pixbuf_y_val_V_load_4_1_phi_i_i_reg_1057;
reg   [7:0] outpix_val_V_4_reg_1062;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter2_state5;
reg   [14:0] y_2_reg_251;
reg    ap_block_state1;
wire    ap_CS_fsm_state7;
reg   [7:0] mpix_y_val_V_0_fu_108;
wire   [7:0] inpix_val_V_0_fu_373_p1;
reg   [7:0] inpix_val_V_1_fu_112;
reg   [7:0] inpix_val_V_2_fu_116;
reg   [7:0] mpix_y_val_V_1_fu_120;
reg   [7:0] inpix_val_V_4_fu_124;
reg   [7:0] inpix_val_V_5_fu_128;
reg   [7:0] pixbuf_cr_val_V_4_0_0_i_i_fu_132;
reg   [7:0] pixbuf_cr_val_V_3_0_0_i_i_fu_136;
wire   [7:0] select_ln158_5_fu_584_p3;
reg   [7:0] mpix_y_val_V_0_5_fu_140;
reg   [7:0] mpix_y_val_V_1_5_fu_144;
reg   [7:0] inpix_val_V_1_1_fu_148;
reg   [7:0] inpix_val_V_4_1_fu_152;
reg   [7:0] inpix_val_V_2_1_fu_156;
reg   [7:0] inpix_val_V_5_1_fu_160;
reg   [7:0] pixbuf_cr_val_V_2_0_0_i_i_fu_164;
wire   [7:0] select_ln158_4_fu_577_p3;
reg   [7:0] pixbuf_y_val_V_2_0_0381_i_i_fu_168;
reg   [7:0] pixbuf_y_val_V_3_0_0382_i_i_fu_172;
reg   [7:0] pixbuf_y_val_V_4_0_0383_i_i_fu_176;
reg   [7:0] pixbuf_y_val_V_5_0_0384_i_i_fu_180;
reg   [7:0] mpix_y_val_V_0_6_fu_184;
reg   [7:0] mpix_y_val_V_1_6_fu_188;
reg   [7:0] pixbuf_cb_val_V_2_0_0_i_i_fu_192;
wire   [7:0] select_ln158_2_fu_563_p3;
reg   [7:0] pixbuf_cb_val_V_3_0_0_i_i_fu_196;
wire   [7:0] select_ln158_1_fu_556_p3;
reg   [7:0] inpix_val_V_4_2_fu_200;
wire   [47:0] or_ln174_i_i_fu_741_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_1_i_i_fu_824_p7;
wire   [0:0] xor_ln46_fu_273_p2;
wire   [1:0] select_ln46_fu_279_p3;
wire   [1:0] xOffset_fu_287_p3;
wire   [15:0] zext_ln62_fu_309_p1;
wire   [15:0] zext_ln64_fu_325_p1;
wire   [15:0] zext_ln187_fu_340_p1;
wire   [15:0] out_x_fu_349_p2;
wire   [7:0] select_ln146_fu_535_p3;
wire   [7:0] select_ln146_1_fu_542_p3;
wire   [7:0] select_ln158_6_fu_598_p3;
wire   [7:0] select_ln158_3_fu_570_p3;
wire   [8:0] shl_ln_fu_605_p3;
wire   [9:0] zext_ln1346_fu_617_p1;
wire   [9:0] zext_ln215_fu_613_p1;
wire   [8:0] zext_ln1346_6_fu_621_p1;
wire   [8:0] add_ln1346_9_fu_631_p2;
wire   [9:0] zext_ln1346_7_fu_637_p1;
wire   [9:0] add_ln1346_fu_625_p2;
wire   [7:0] select_ln158_7_fu_647_p3;
wire   [7:0] select_ln158_fu_549_p3;
wire   [8:0] shl_ln1345_2_fu_654_p3;
wire   [9:0] zext_ln1346_5_fu_666_p1;
wire   [9:0] zext_ln215_42_fu_662_p1;
wire   [8:0] zext_ln1346_8_fu_670_p1;
wire   [8:0] add_ln1346_12_fu_680_p2;
wire   [9:0] zext_ln1346_9_fu_686_p1;
wire   [9:0] add_ln1346_11_fu_674_p2;
wire   [9:0] add_ln1346_10_fu_641_p2;
wire   [9:0] add_ln1346_13_fu_690_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter2_state5)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state5))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_344_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        x_reg_262 <= x_3_fu_334_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd1))) begin
        x_reg_262 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_2_reg_251 <= y_reg_1007;
    end else if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_2_reg_251 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bPassThruHcrDown_loc_read_reg_986 <= bPassThruHcrDown_loc_dout;
        loopHeight_reg_981 <= HeightOut_dout;
        loopWidth_reg_1002 <= loopWidth_fu_313_p2;
        lshr_ln_reg_997 <= {{WidthOut_dout[15:1]}};
        zext_ln30_reg_992[1 : 0] <= zext_ln30_fu_295_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_344_p2 == 1'd1))) begin
        cmp119_i_i_reg_1031 <= cmp119_i_i_fu_359_p2;
        icmp_ln77_reg_1025 <= icmp_ln77_fu_354_p2;
        tmp_reg_1043 <= out_x_fu_349_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp119_i_i_reg_1031_pp0_iter1_reg <= cmp119_i_i_reg_1031;
        icmp_ln67_reg_1021 <= icmp_ln67_fu_344_p2;
        icmp_ln67_reg_1021_pp0_iter1_reg <= icmp_ln67_reg_1021;
        icmp_ln77_reg_1025_pp0_iter1_reg <= icmp_ln77_reg_1025;
        tmp_reg_1043_pp0_iter1_reg <= tmp_reg_1043;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_reg_1025 == 1'd1) & (icmp_ln67_reg_1021 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inpix_val_V_1_1_fu_148 <= {{stream_4_csc_dout[15:8]}};
        inpix_val_V_1_fu_112 <= {{stream_4_csc_dout[15:8]}};
        inpix_val_V_2_1_fu_156 <= {{stream_4_csc_dout[23:16]}};
        inpix_val_V_2_fu_116 <= {{stream_4_csc_dout[23:16]}};
        inpix_val_V_4_1_fu_152 <= {{stream_4_csc_dout[39:32]}};
        inpix_val_V_4_fu_124 <= {{stream_4_csc_dout[39:32]}};
        inpix_val_V_5_1_fu_160 <= {{stream_4_csc_dout[47:40]}};
        inpix_val_V_5_fu_128 <= {{stream_4_csc_dout[47:40]}};
        mpix_y_val_V_0_5_fu_140 <= inpix_val_V_0_fu_373_p1;
        mpix_y_val_V_0_fu_108 <= inpix_val_V_0_fu_373_p1;
        mpix_y_val_V_1_5_fu_144 <= {{stream_4_csc_dout[31:24]}};
        mpix_y_val_V_1_fu_120 <= {{stream_4_csc_dout[31:24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_1021_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inpix_val_V_4_2_fu_200 <= inpix_val_V_4_1_fu_152;
        mpix_y_val_V_0_6_fu_184 <= mpix_y_val_V_0_5_fu_140;
        mpix_y_val_V_1_6_fu_188 <= mpix_y_val_V_1_5_fu_144;
        pixbuf_cb_val_V_2_0_0_i_i_fu_192 <= select_ln158_2_fu_563_p3;
        pixbuf_cb_val_V_3_0_0_i_i_fu_196 <= select_ln158_1_fu_556_p3;
        pixbuf_cr_val_V_2_0_0_i_i_fu_164 <= select_ln158_4_fu_577_p3;
        pixbuf_cr_val_V_3_0_0_i_i_fu_136 <= select_ln158_5_fu_584_p3;
        pixbuf_cr_val_V_4_0_0_i_i_fu_132 <= inpix_val_V_5_1_fu_160;
        pixbuf_y_val_V_2_0_0381_i_i_fu_168 <= pixbuf_y_val_V_4_0_0383_i_i_fu_176;
        pixbuf_y_val_V_3_0_0382_i_i_fu_172 <= pixbuf_y_val_V_5_0_0384_i_i_fu_180;
        pixbuf_y_val_V_4_0_0383_i_i_fu_176 <= mpix_y_val_V_0_6_fu_184;
        pixbuf_y_val_V_5_0_0384_i_i_fu_180 <= mpix_y_val_V_1_6_fu_188;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_reg_1021_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outpix_val_V_1_reg_1052 <= {{add_ln1346_10_fu_641_p2[9:2]}};
        outpix_val_V_4_reg_1062 <= {{add_ln1346_13_fu_690_p2[9:2]}};
        pixbuf_y_val_V_load_4_0_phi_i_i_reg_1047 <= pixbuf_y_val_V_load_4_0_phi_i_i_fu_591_p3;
        pixbuf_y_val_V_load_4_1_phi_i_i_reg_1057 <= pixbuf_y_val_V_load_4_1_phi_i_i_fu_706_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_reg_1043_pp0_iter2_reg <= tmp_reg_1043_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_reg_1007 <= y_fu_319_p2;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_blk_n = HeightOut_empty_n;
    end else begin
        HeightOut_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_out_blk_n = HeightOut_out_full_n;
    end else begin
        HeightOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_out_write = 1'b1;
    end else begin
        HeightOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightOut_read = 1'b1;
    end else begin
        HeightOut_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_blk_n = WidthOut_empty_n;
    end else begin
        WidthOut_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_out_blk_n = WidthOut_out_full_n;
    end else begin
        WidthOut_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_out_write = 1'b1;
    end else begin
        WidthOut_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthOut_read = 1'b1;
    end else begin
        WidthOut_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln67_fu_344_p2 == 1'd0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruHcrDown_loc_blk_n = bPassThruHcrDown_loc_empty_n;
    end else begin
        bPassThruHcrDown_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruHcrDown_loc_read = 1'b1;
    end else begin
        bPassThruHcrDown_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_reg_1025 == 1'd1) & (icmp_ln67_reg_1021 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_4_csc_blk_n = stream_4_csc_empty_n;
    end else begin
        stream_4_csc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op77_read_state4 == 1'b1))) begin
        stream_4_csc_read = 1'b1;
    end else begin
        stream_4_csc_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_reg_1043_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (bPassThruHcrDown_loc_read_reg_986 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThruHcrDown_loc_read_reg_986 == 1'd1) & (tmp_reg_1043_pp0_iter1_reg == 1'd0) & (icmp_ln67_reg_1021_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_5_blk_n = stream_5_full_n;
    end else begin
        stream_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op169_write_state6 == 1'b1))) begin
            stream_5_din = or_ln174_1_i_i_fu_824_p7;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op151_write_state5 == 1'b1))) begin
            stream_5_din = or_ln174_i_i_fu_741_p7;
        end else begin
            stream_5_din = 'bx;
        end
    end else begin
        stream_5_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op169_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op151_write_state5 == 1'b1)))) begin
        stream_5_write = 1'b1;
    end else begin
        stream_5_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln64_fu_329_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HeightOut_out_din = HeightOut_dout;

assign WidthOut_out_din = WidthOut_dout;

assign add_ln1346_10_fu_641_p2 = (zext_ln1346_7_fu_637_p1 + add_ln1346_fu_625_p2);

assign add_ln1346_11_fu_674_p2 = (zext_ln1346_5_fu_666_p1 + zext_ln215_42_fu_662_p1);

assign add_ln1346_12_fu_680_p2 = (zext_ln1346_8_fu_670_p1 + 9'd2);

assign add_ln1346_13_fu_690_p2 = (zext_ln1346_9_fu_686_p1 + add_ln1346_11_fu_674_p2);

assign add_ln1346_9_fu_631_p2 = (zext_ln1346_6_fu_621_p1 + 9'd2);

assign add_ln1346_fu_625_p2 = (zext_ln1346_fu_617_p1 + zext_ln215_fu_613_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op169_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op151_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_4_csc_empty_n == 1'b0) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op169_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op151_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_4_csc_empty_n == 1'b0) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op169_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_5_full_n == 1'b0) & (ap_predicate_op151_write_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_4_csc_empty_n == 1'b0) & (ap_predicate_op77_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (bPassThruHcrDown_loc_empty_n == 1'b0) | (1'b0 == WidthOut_out_full_n) | (1'b0 == HeightOut_out_full_n) | (1'b0 == WidthOut_empty_n) | (1'b0 == HeightOut_empty_n) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((stream_4_csc_empty_n == 1'b0) & (ap_predicate_op77_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((stream_5_full_n == 1'b0) & (ap_predicate_op151_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter3 = ((stream_5_full_n == 1'b0) & (ap_predicate_op169_write_state6 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op151_write_state5 = ((bPassThruHcrDown_loc_read_reg_986 == 1'd1) & (tmp_reg_1043_pp0_iter1_reg == 1'd0) & (icmp_ln67_reg_1021_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op169_write_state6 = ((tmp_reg_1043_pp0_iter2_reg == 1'd0) & (bPassThruHcrDown_loc_read_reg_986 == 1'd0));
end

always @ (*) begin
    ap_predicate_op77_read_state4 = ((icmp_ln77_reg_1025 == 1'd1) & (icmp_ln67_reg_1021 == 1'd1));
end

assign cmp119_i_i_fu_359_p2 = ((x_reg_262 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_329_p2 = (($signed(zext_ln64_fu_325_p1) < $signed(loopHeight_reg_981)) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_344_p2 = (($signed(zext_ln187_fu_340_p1) < $signed(loopWidth_reg_1002)) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_354_p2 = ((x_reg_262 < lshr_ln_reg_997) ? 1'b1 : 1'b0);

assign inpix_val_V_0_fu_373_p1 = stream_4_csc_dout[7:0];

assign loopWidth_fu_313_p2 = (zext_ln62_fu_309_p1 + zext_ln30_fu_295_p1);

assign lshr_ln_fu_299_p4 = {{WidthOut_dout[15:1]}};

assign or_ln174_1_i_i_fu_824_p7 = {{{{{{{{{{8'd0}, {outpix_val_V_4_reg_1062}}}, {pixbuf_y_val_V_load_4_1_phi_i_i_reg_1057}}}, {8'd0}}}, {outpix_val_V_1_reg_1052}}}, {pixbuf_y_val_V_load_4_0_phi_i_i_reg_1047}};

assign or_ln174_i_i_fu_741_p7 = {{{{{{inpix_val_V_5_fu_128}, {inpix_val_V_4_fu_124}}, {mpix_y_val_V_1_fu_120}}, {inpix_val_V_2_fu_116}}, {inpix_val_V_1_fu_112}}, {mpix_y_val_V_0_fu_108}};

assign out_x_fu_349_p2 = (zext_ln187_fu_340_p1 - zext_ln30_reg_992);

assign pixbuf_y_val_V_load_4_0_phi_i_i_fu_591_p3 = ((bPassThruHcrDown_loc_read_reg_986[0:0] == 1'b1) ? pixbuf_y_val_V_2_0_0381_i_i_fu_168 : mpix_y_val_V_0_6_fu_184);

assign pixbuf_y_val_V_load_4_1_phi_i_i_fu_706_p3 = ((bPassThruHcrDown_loc_read_reg_986[0:0] == 1'b1) ? pixbuf_y_val_V_3_0_0382_i_i_fu_172 : mpix_y_val_V_1_6_fu_188);

assign select_ln146_1_fu_542_p3 = ((icmp_ln77_reg_1025_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_2_1_fu_156 : inpix_val_V_5_1_fu_160);

assign select_ln146_fu_535_p3 = ((icmp_ln77_reg_1025_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_1_fu_148 : inpix_val_V_4_1_fu_152);

assign select_ln158_1_fu_556_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_1_fu_148 : select_ln146_fu_535_p3);

assign select_ln158_2_fu_563_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_1_fu_148 : inpix_val_V_4_2_fu_200);

assign select_ln158_3_fu_570_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_1_fu_148 : pixbuf_cb_val_V_2_0_0_i_i_fu_192);

assign select_ln158_4_fu_577_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_2_1_fu_156 : pixbuf_cr_val_V_4_0_0_i_i_fu_132);

assign select_ln158_5_fu_584_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_2_1_fu_156 : select_ln146_1_fu_542_p3);

assign select_ln158_6_fu_598_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_1_1_fu_148 : pixbuf_cb_val_V_3_0_0_i_i_fu_196);

assign select_ln158_7_fu_647_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_2_1_fu_156 : pixbuf_cr_val_V_3_0_0_i_i_fu_136);

assign select_ln158_fu_549_p3 = ((cmp119_i_i_reg_1031_pp0_iter1_reg[0:0] == 1'b1) ? inpix_val_V_2_1_fu_156 : pixbuf_cr_val_V_2_0_0_i_i_fu_164);

assign select_ln46_fu_279_p3 = ((xor_ln46_fu_273_p2[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign shl_ln1345_2_fu_654_p3 = {{select_ln158_7_fu_647_p3}, {1'd0}};

assign shl_ln_fu_605_p3 = {{select_ln158_6_fu_598_p3}, {1'd0}};

assign xOffset_fu_287_p3 = ((bPassThruHcrDown_loc_dout[0:0] == 1'b1) ? select_ln46_fu_279_p3 : 2'd1);

assign x_3_fu_334_p2 = (x_reg_262 + 15'd1);

assign xor_ln46_fu_273_p2 = (bPassThruHcrDown_loc_dout ^ 1'd1);

assign y_fu_319_p2 = (y_2_reg_251 + 15'd1);

assign zext_ln1346_5_fu_666_p1 = shl_ln1345_2_fu_654_p3;

assign zext_ln1346_6_fu_621_p1 = select_ln158_2_fu_563_p3;

assign zext_ln1346_7_fu_637_p1 = add_ln1346_9_fu_631_p2;

assign zext_ln1346_8_fu_670_p1 = select_ln158_4_fu_577_p3;

assign zext_ln1346_9_fu_686_p1 = add_ln1346_12_fu_680_p2;

assign zext_ln1346_fu_617_p1 = shl_ln_fu_605_p3;

assign zext_ln187_fu_340_p1 = x_reg_262;

assign zext_ln215_42_fu_662_p1 = select_ln158_fu_549_p3;

assign zext_ln215_fu_613_p1 = select_ln158_3_fu_570_p3;

assign zext_ln30_fu_295_p1 = xOffset_fu_287_p3;

assign zext_ln62_fu_309_p1 = lshr_ln_fu_299_p4;

assign zext_ln64_fu_325_p1 = y_2_reg_251;

always @ (posedge ap_clk) begin
    zext_ln30_reg_992[15:2] <= 14'b00000000000000;
end

endmodule //bd_v_multi_scaler_0_0_v_hcresampler39
