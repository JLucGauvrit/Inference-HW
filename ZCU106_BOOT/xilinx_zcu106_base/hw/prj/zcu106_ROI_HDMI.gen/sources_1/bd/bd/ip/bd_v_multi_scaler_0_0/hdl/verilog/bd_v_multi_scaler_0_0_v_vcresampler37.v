// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_v_multi_scaler_0_0_v_vcresampler37 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_dout,
        stream_in_empty_n,
        stream_in_read,
        stream_1_din,
        stream_1_full_n,
        stream_1_write,
        HeightIn_dout,
        HeightIn_empty_n,
        HeightIn_read,
        WidthIn_dout,
        WidthIn_empty_n,
        WidthIn_read,
        bPassThruVcrUp_loc_dout,
        bPassThruVcrUp_loc_empty_n,
        bPassThruVcrUp_loc_read,
        HeightIn_out_din,
        HeightIn_out_full_n,
        HeightIn_out_write,
        WidthIn_out_din,
        WidthIn_out_full_n,
        WidthIn_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [47:0] stream_in_dout;
input   stream_in_empty_n;
output   stream_in_read;
output  [47:0] stream_1_din;
input   stream_1_full_n;
output   stream_1_write;
input  [15:0] HeightIn_dout;
input   HeightIn_empty_n;
output   HeightIn_read;
input  [15:0] WidthIn_dout;
input   WidthIn_empty_n;
output   WidthIn_read;
input  [0:0] bPassThruVcrUp_loc_dout;
input   bPassThruVcrUp_loc_empty_n;
output   bPassThruVcrUp_loc_read;
output  [15:0] HeightIn_out_din;
input   HeightIn_out_full_n;
output   HeightIn_out_write;
output  [15:0] WidthIn_out_din;
input   WidthIn_out_full_n;
output   WidthIn_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_read;
reg[47:0] stream_1_din;
reg stream_1_write;
reg HeightIn_read;
reg WidthIn_read;
reg bPassThruVcrUp_loc_read;
reg HeightIn_out_write;
reg WidthIn_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    stream_in_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_1007;
reg   [0:0] cmp24_i_i_reg_986;
reg    stream_1_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln78_reg_1007_pp0_iter1_reg;
reg   [0:0] tmp_reg_998;
reg   [0:0] bPassThruVcrUp_loc_read_reg_858;
reg    ap_enable_reg_pp0_iter4;
reg    HeightIn_blk_n;
reg    WidthIn_blk_n;
reg    bPassThruVcrUp_loc_blk_n;
reg    HeightIn_out_blk_n;
reg    WidthIn_out_blk_n;
reg   [14:0] x_reg_304;
reg   [14:0] x_reg_304_pp0_iter1_reg;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op83_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op155_write_state6;
reg    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_predicate_op175_write_state8;
reg    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [15:0] HeightIn_read_reg_852;
reg   [14:0] loopWidth_reg_863;
wire   [15:0] select_ln73_fu_344_p3;
reg   [15:0] select_ln73_reg_869;
wire    ap_CS_fsm_state2;
wire   [15:0] loopHeight_fu_351_p2;
reg   [15:0] loopHeight_reg_874;
wire   [0:0] icmp_ln75_fu_356_p2;
reg   [0:0] icmp_ln75_reg_879;
wire   [0:0] cmp18582_i_i_fu_362_p2;
reg   [0:0] cmp18582_i_i_reg_959;
wire   [14:0] add_ln75_fu_367_p2;
reg   [14:0] add_ln75_reg_963;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln75_2_fu_377_p2;
wire   [0:0] empty_fu_382_p1;
reg   [0:0] empty_reg_972;
wire   [0:0] empty_114_fu_391_p1;
reg   [0:0] empty_114_reg_980;
wire   [0:0] cmp24_i_i_fu_395_p2;
wire   [0:0] cmp76_i_i_fu_400_p2;
reg   [0:0] cmp76_i_i_reg_990;
wire   [14:0] add_ln78_fu_414_p2;
reg   [14:0] add_ln78_reg_1002;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln78_fu_420_p2;
reg   [0:0] icmp_ln78_reg_1007_pp0_iter2_reg;
wire   [63:0] idxprom5_i240_i_i_fu_429_p1;
reg   [63:0] idxprom5_i240_i_i_reg_1011;
reg   [63:0] idxprom5_i240_i_i_reg_1011_pp0_iter1_reg;
reg   [10:0] linebuf_y_val_V_0_addr_reg_1016;
reg   [10:0] linebuf_y_val_V_0_addr_reg_1016_pp0_iter1_reg;
reg   [10:0] linebuf_c_val_V_0_addr_reg_1022;
reg   [10:0] linebuf_c_val_V_0_addr_reg_1022_pp0_iter1_reg;
wire   [7:0] trunc_ln674_fu_540_p1;
reg   [7:0] trunc_ln674_reg_1033;
reg   [7:0] outpix_val_V_3_i_i_reg_1038;
wire   [7:0] pixbuf_c_val_V_2_0_9_fu_554_p1;
reg   [7:0] pixbuf_c_val_V_2_0_9_reg_1043;
wire   [7:0] pixbuf_c_val_V_2_1_11_fu_558_p4;
reg   [7:0] pixbuf_c_val_V_2_1_11_reg_1048;
wire   [7:0] outpix_val_V_4_4_fu_582_p3;
reg   [7:0] outpix_val_V_4_4_reg_1053;
reg   [7:0] outpix_val_V_4_4_reg_1053_pp0_iter2_reg;
wire   [7:0] outpix_val_V_1_4_fu_589_p3;
reg   [7:0] outpix_val_V_1_4_reg_1061;
reg   [7:0] outpix_val_V_1_4_reg_1061_pp0_iter2_reg;
wire   [7:0] outpix_val_V_0_fu_749_p1;
reg   [7:0] outpix_val_V_0_reg_1074;
reg   [7:0] outpix_val_V_3_reg_1079;
wire   [7:0] outpix_val_V_1_3_fu_798_p3;
reg   [7:0] outpix_val_V_1_3_reg_1084;
wire   [7:0] outpix_val_V_4_3_fu_833_p3;
reg   [7:0] outpix_val_V_4_3_reg_1089;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state6;
wire   [10:0] linebuf_y_val_V_0_address0;
reg    linebuf_y_val_V_0_ce0;
reg    linebuf_y_val_V_0_we0;
wire   [15:0] linebuf_y_val_V_0_d0;
wire   [10:0] linebuf_y_val_V_0_address1;
reg    linebuf_y_val_V_0_ce1;
wire   [15:0] linebuf_y_val_V_0_q1;
wire   [10:0] linebuf_y_val_V_1_address0;
reg    linebuf_y_val_V_1_ce0;
reg    linebuf_y_val_V_1_we0;
wire   [15:0] linebuf_y_val_V_1_d0;
wire   [10:0] linebuf_y_val_V_1_address1;
reg    linebuf_y_val_V_1_ce1;
wire   [15:0] linebuf_y_val_V_1_q1;
wire   [10:0] linebuf_c_val_V_0_address0;
reg    linebuf_c_val_V_0_ce0;
reg    linebuf_c_val_V_0_we0;
wire   [15:0] linebuf_c_val_V_0_d0;
wire   [10:0] linebuf_c_val_V_0_address1;
reg    linebuf_c_val_V_0_ce1;
wire   [15:0] linebuf_c_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_1_address0;
reg    linebuf_c_val_V_1_ce0;
reg    linebuf_c_val_V_1_we0;
wire   [15:0] linebuf_c_val_V_1_d0;
wire   [10:0] linebuf_c_val_V_1_address1;
reg    linebuf_c_val_V_1_ce1;
wire   [15:0] linebuf_c_val_V_1_q1;
reg   [14:0] y_reg_293;
wire    ap_CS_fsm_state9;
reg   [14:0] ap_phi_mux_x_phi_fu_308_p4;
reg   [7:0] ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_319_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_316;
wire   [7:0] ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_316;
reg   [7:0] ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_316;
reg   [7:0] ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_328_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_325;
wire   [7:0] ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_325;
reg   [7:0] ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_325;
wire   [63:0] zext_ln78_fu_596_p1;
reg   [7:0] mpix_y_val_V_0_fu_120;
wire   [7:0] pix_val_V_0_fu_436_p1;
reg   [7:0] mpix_c_val_V_0_fu_124;
reg   [7:0] pix_val_V_2_2_fu_128;
reg   [7:0] mpix_y_val_V_1_fu_132;
reg   [7:0] mpix_c_val_V_1_fu_136;
reg   [7:0] pix_val_V_5_2_fu_140;
reg   [7:0] mpix_y_val_V_0_3_fu_144;
reg   [7:0] mpix_y_val_V_1_3_fu_148;
reg   [7:0] pixbuf_c_val_V_2_0_5_fu_152;
reg   [7:0] pixbuf_c_val_V_2_1_fu_156;
reg   [7:0] PixBufVal_val_V_0_fu_160;
wire   [7:0] select_ln151_1_fu_658_p3;
reg   [7:0] pixbuf_c_val_V_2_1_7_fu_164;
wire   [7:0] select_ln151_fu_652_p3;
reg    ap_block_state1;
wire   [47:0] or_ln174_8_i_i_fu_732_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_i_i_fu_839_p7;
wire   [15:0] zext_ln75_fu_373_p1;
wire   [15:0] out_y_fu_386_p2;
wire   [10:0] empty_115_fu_425_p1;
wire   [7:0] pixbuf_c_val_V_1_1_fu_572_p4;
wire   [7:0] pixbuf_c_val_V_1_0_fu_568_p1;
wire   [7:0] select_ln126_1_fu_637_p3;
wire   [7:0] select_ln126_fu_631_p3;
wire   [7:0] pixbuf_c_val_V_2_1_10_fu_679_p3;
wire   [7:0] pixbuf_c_val_V_2_0_fu_673_p3;
wire   [8:0] zext_ln215_fu_769_p1;
wire   [8:0] add_ln1346_fu_776_p2;
wire   [8:0] zext_ln215_37_fu_772_p1;
wire   [8:0] add_ln1346_6_fu_782_p2;
wire   [7:0] outpix_val_V_1_fu_788_p4;
wire   [8:0] zext_ln215_38_fu_804_p1;
wire   [8:0] add_ln1346_7_fu_811_p2;
wire   [8:0] zext_ln215_39_fu_807_p1;
wire   [8:0] add_ln1346_8_fu_817_p2;
wire   [7:0] outpix_val_V_4_fu_823_p4;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_74;
reg    ap_enable_state4_pp0_iter0_stage0;
reg    ap_enable_operation_101;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_enable_operation_124;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_76;
reg    ap_enable_operation_104;
reg    ap_predicate_op133_store_state6;
reg    ap_enable_operation_133;
reg    ap_enable_operation_78;
reg    ap_enable_operation_107;
reg    ap_predicate_op141_store_state6;
reg    ap_enable_operation_141;
reg    ap_enable_operation_129;
reg    ap_enable_operation_122;
reg    ap_enable_operation_157;
reg    ap_enable_state7_pp0_iter3_stage0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_431;
reg    ap_condition_332;
reg    ap_condition_316;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_0_address0),
    .ce0(linebuf_y_val_V_0_ce0),
    .we0(linebuf_y_val_V_0_we0),
    .d0(linebuf_y_val_V_0_d0),
    .address1(linebuf_y_val_V_0_address1),
    .ce1(linebuf_y_val_V_0_ce1),
    .q1(linebuf_y_val_V_0_q1)
);

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_1_address0),
    .ce0(linebuf_y_val_V_1_ce0),
    .we0(linebuf_y_val_V_1_we0),
    .d0(linebuf_y_val_V_1_d0),
    .address1(linebuf_y_val_V_1_address1),
    .ce1(linebuf_y_val_V_1_ce1),
    .q1(linebuf_y_val_V_1_q1)
);

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_0_address0),
    .ce0(linebuf_c_val_V_0_ce0),
    .we0(linebuf_c_val_V_0_we0),
    .d0(linebuf_c_val_V_0_d0),
    .address1(linebuf_c_val_V_0_address1),
    .ce1(linebuf_c_val_V_0_ce1),
    .q1(linebuf_c_val_V_0_q1)
);

bd_v_multi_scaler_0_0_v_vcresampler37_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_1_address0),
    .ce0(linebuf_c_val_V_1_ce0),
    .we0(linebuf_c_val_V_1_we0),
    .d0(linebuf_c_val_V_1_d0),
    .address1(linebuf_c_val_V_1_address1),
    .ce1(linebuf_c_val_V_1_ce1),
    .q1(linebuf_c_val_V_1_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_2_fu_377_p2 == 1'd1) | (icmp_ln75_reg_879 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (cmp18582_i_i_reg_959 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state6)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (cmp18582_i_i_reg_959 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_431)) begin
        if ((empty_reg_972 == 1'd1)) begin
            PixBufVal_val_V_0_fu_160 <= select_ln151_1_fu_658_p3;
        end else if ((empty_reg_972 == 1'd0)) begin
            PixBufVal_val_V_0_fu_160 <= ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_328_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((1'b1 == ap_condition_332)) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_325 <= outpix_val_V_1_4_fu_589_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_325 <= ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_325;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_316)) begin
        if ((1'b1 == ap_condition_332)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_316 <= outpix_val_V_4_4_fu_582_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_316 <= ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_316;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_431)) begin
        if ((empty_reg_972 == 1'd1)) begin
            pixbuf_c_val_V_2_1_7_fu_164 <= select_ln151_fu_652_p3;
        end else if ((empty_reg_972 == 1'd0)) begin
            pixbuf_c_val_V_2_1_7_fu_164 <= ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_319_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (cmp18582_i_i_reg_959 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
        x_reg_304 <= 15'd0;
    end else if (((icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_reg_304 <= add_ln78_reg_1002;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        y_reg_293 <= add_ln75_reg_963;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln75_fu_356_p2 == 1'd1))) begin
        y_reg_293 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HeightIn_read_reg_852 <= HeightIn_dout;
        bPassThruVcrUp_loc_read_reg_858 <= bPassThruVcrUp_loc_dout;
        loopWidth_reg_863 <= {{WidthIn_dout[15:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_reg_879 == 1'd1))) begin
        add_ln75_reg_963 <= add_ln75_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln78_reg_1002 <= add_ln78_fu_414_p2;
        ap_phi_reg_pp0_iter1_PixBufVal_val_V_0_2_reg_325 <= ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_325;
        ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_3_i_i_reg_316 <= ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln75_fu_356_p2 == 1'd1))) begin
        cmp18582_i_i_reg_959 <= cmp18582_i_i_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
        cmp24_i_i_reg_986 <= cmp24_i_i_fu_395_p2;
        cmp76_i_i_reg_990 <= cmp76_i_i_fu_400_p2;
        empty_114_reg_980 <= empty_114_fu_391_p1;
        empty_reg_972 <= empty_fu_382_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln75_reg_879 <= icmp_ln75_fu_356_p2;
        loopHeight_reg_874 <= loopHeight_fu_351_p2;
        select_ln73_reg_869[1] <= select_ln73_fu_344_p3[1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_reg_1007 <= icmp_ln78_fu_420_p2;
        icmp_ln78_reg_1007_pp0_iter1_reg <= icmp_ln78_reg_1007;
        idxprom5_i240_i_i_reg_1011_pp0_iter1_reg[10 : 0] <= idxprom5_i240_i_i_reg_1011[10 : 0];
        linebuf_c_val_V_0_addr_reg_1022_pp0_iter1_reg <= linebuf_c_val_V_0_addr_reg_1022;
        linebuf_y_val_V_0_addr_reg_1016_pp0_iter1_reg <= linebuf_y_val_V_0_addr_reg_1016;
        x_reg_304_pp0_iter1_reg <= x_reg_304;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln78_reg_1007_pp0_iter2_reg <= icmp_ln78_reg_1007_pp0_iter1_reg;
        outpix_val_V_1_3_reg_1084 <= outpix_val_V_1_3_fu_798_p3;
        outpix_val_V_1_4_reg_1061_pp0_iter2_reg <= outpix_val_V_1_4_reg_1061;
        outpix_val_V_4_3_reg_1089 <= outpix_val_V_4_3_fu_833_p3;
        outpix_val_V_4_4_reg_1053_pp0_iter2_reg <= outpix_val_V_4_4_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln78_fu_420_p2 == 1'd0))) begin
        idxprom5_i240_i_i_reg_1011[10 : 0] <= idxprom5_i240_i_i_fu_429_p1[10 : 0];
        linebuf_c_val_V_0_addr_reg_1022 <= idxprom5_i240_i_i_fu_429_p1;
        linebuf_y_val_V_0_addr_reg_1016 <= idxprom5_i240_i_i_fu_429_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp24_i_i_reg_986 == 1'd1) & (icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_c_val_V_0_fu_124 <= {{stream_in_dout[15:8]}};
        mpix_c_val_V_1_fu_136 <= {{stream_in_dout[39:32]}};
        mpix_y_val_V_0_3_fu_144 <= pix_val_V_0_fu_436_p1;
        mpix_y_val_V_0_fu_120 <= pix_val_V_0_fu_436_p1;
        mpix_y_val_V_1_3_fu_148 <= {{stream_in_dout[31:24]}};
        mpix_y_val_V_1_fu_132 <= {{stream_in_dout[31:24]}};
        pix_val_V_2_2_fu_128 <= {{stream_in_dout[23:16]}};
        pix_val_V_5_2_fu_140 <= {{stream_in_dout[47:40]}};
        pixbuf_c_val_V_2_0_5_fu_152 <= {{stream_in_dout[15:8]}};
        pixbuf_c_val_V_2_1_fu_156 <= {{stream_in_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_reg_1007_pp0_iter2_reg == 1'd0))) begin
        outpix_val_V_0_reg_1074 <= outpix_val_V_0_fu_749_p1;
        outpix_val_V_3_reg_1079 <= {{linebuf_y_val_V_1_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        outpix_val_V_1_4_reg_1061 <= outpix_val_V_1_4_fu_589_p3;
        outpix_val_V_4_4_reg_1053 <= outpix_val_V_4_4_fu_582_p3;
        pixbuf_c_val_V_2_0_9_reg_1043 <= pixbuf_c_val_V_2_0_9_fu_554_p1;
        pixbuf_c_val_V_2_1_11_reg_1048 <= {{linebuf_c_val_V_0_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (cmp76_i_i_reg_990 == 1'd1))) begin
        outpix_val_V_3_i_i_reg_1038 <= {{linebuf_y_val_V_0_q1[15:8]}};
        trunc_ln674_reg_1033 <= trunc_ln674_fu_540_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (cmp18582_i_i_reg_959 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
        tmp_reg_998 <= out_y_fu_386_p2[32'd15];
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_blk_n = HeightIn_empty_n;
    end else begin
        HeightIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_out_blk_n = HeightIn_out_full_n;
    end else begin
        HeightIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_out_write = 1'b1;
    end else begin
        HeightIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        HeightIn_read = 1'b1;
    end else begin
        HeightIn_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_blk_n = WidthIn_empty_n;
    end else begin
        WidthIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_blk_n = WidthIn_out_full_n;
    end else begin
        WidthIn_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_out_write = 1'b1;
    end else begin
        WidthIn_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        WidthIn_read = 1'b1;
    end else begin
        WidthIn_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln78_fu_420_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_2_fu_377_p2 == 1'd1) | (icmp_ln75_reg_879 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_986 == 1'd1) & (empty_reg_972 == 1'd0))) begin
        ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_328_p4 = pixbuf_c_val_V_2_0_5_fu_152;
    end else begin
        ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_328_p4 = ap_phi_reg_pp0_iter2_PixBufVal_val_V_0_2_reg_325;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_986 == 1'd1) & (empty_reg_972 == 1'd0))) begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_319_p4 = pixbuf_c_val_V_2_1_fu_156;
    end else begin
        ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_319_p4 = ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_3_i_i_reg_316;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_308_p4 = add_ln78_reg_1002;
    end else begin
        ap_phi_mux_x_phi_fu_308_p4 = x_reg_304;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_2_fu_377_p2 == 1'd1) | (icmp_ln75_reg_879 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruVcrUp_loc_blk_n = bPassThruVcrUp_loc_empty_n;
    end else begin
        bPassThruVcrUp_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThruVcrUp_loc_read = 1'b1;
    end else begin
        bPassThruVcrUp_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (cmp24_i_i_reg_986 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_972 == 1'd0))) begin
        linebuf_c_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_972 == 1'd0))) begin
        linebuf_c_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_y_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (bPassThruVcrUp_loc_read_reg_858 == 1'd0) & (tmp_reg_998 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThruVcrUp_loc_read_reg_858 == 1'd1) & (tmp_reg_998 == 1'd0) & (icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_1_blk_n = stream_1_full_n;
    end else begin
        stream_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter4 == 1'b1) & (ap_predicate_op175_write_state8 == 1'b1))) begin
            stream_1_din = or_ln174_i_i_fu_839_p7;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op155_write_state6 == 1'b1))) begin
            stream_1_din = or_ln174_8_i_i_fu_732_p7;
        end else begin
            stream_1_din = 'bx;
        end
    end else begin
        stream_1_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op175_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op155_write_state6 == 1'b1)))) begin
        stream_1_write = 1'b1;
    end else begin
        stream_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((cmp24_i_i_reg_986 == 1'd1) & (icmp_ln78_reg_1007 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_blk_n = stream_in_empty_n;
    end else begin
        stream_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op83_read_state5 == 1'b1))) begin
        stream_in_read = 1'b1;
    end else begin
        stream_in_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln75_2_fu_377_p2 == 1'd1) | (icmp_ln75_reg_879 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln75_2_fu_377_p2 == 1'd0) & (cmp18582_i_i_reg_959 == 1'd0) & (icmp_ln75_reg_879 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HeightIn_out_din = HeightIn_dout;

assign WidthIn_out_din = WidthIn_dout;

assign add_ln1346_6_fu_782_p2 = (add_ln1346_fu_776_p2 + zext_ln215_37_fu_772_p1);

assign add_ln1346_7_fu_811_p2 = (zext_ln215_38_fu_804_p1 + 9'd1);

assign add_ln1346_8_fu_817_p2 = (add_ln1346_7_fu_811_p2 + zext_ln215_39_fu_807_p1);

assign add_ln1346_fu_776_p2 = (zext_ln215_fu_769_p1 + 9'd1);

assign add_ln75_fu_367_p2 = (y_reg_293 + 15'd1);

assign add_ln78_fu_414_p2 = (ap_phi_mux_x_phi_fu_308_p4 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op175_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op155_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op175_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op155_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op175_write_state8 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_1_full_n == 1'b0) & (ap_predicate_op155_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((bPassThruVcrUp_loc_empty_n == 1'b0) | (1'b0 == WidthIn_out_full_n) | (1'b0 == HeightIn_out_full_n) | (1'b0 == WidthIn_empty_n) | (1'b0 == HeightIn_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((stream_in_empty_n == 1'b0) & (ap_predicate_op83_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((stream_1_full_n == 1'b0) & (ap_predicate_op155_write_state6 == 1'b1));
end

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter4 = ((stream_1_full_n == 1'b0) & (ap_predicate_op175_write_state8 == 1'b1));
end

always @ (*) begin
    ap_condition_316 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_332 = ((cmp24_i_i_reg_986 == 1'd0) & (icmp_ln78_reg_1007 == 1'd0) & (empty_reg_972 == 1'd0));
end

always @ (*) begin
    ap_condition_431 = ((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_enable_operation_101 = (icmp_ln78_reg_1007 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_104 = (icmp_ln78_reg_1007 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_107 = (icmp_ln78_reg_1007 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_122 = (icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_124 = (icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_129 = (icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_133 = (ap_predicate_op133_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_141 = (ap_predicate_op141_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_157 = (icmp_ln78_reg_1007_pp0_iter2_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_74 = (icmp_ln78_fu_420_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_76 = (icmp_ln78_fu_420_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_78 = (icmp_ln78_fu_420_p2 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter0_PixBufVal_val_V_0_2_reg_325 = 'bx;

assign ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_3_i_i_reg_316 = 'bx;

always @ (*) begin
    ap_predicate_op133_store_state6 = ((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (cmp24_i_i_reg_986 == 1'd1) & (empty_reg_972 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_store_state6 = ((icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0) & (empty_reg_972 == 1'd0));
end

always @ (*) begin
    ap_predicate_op155_write_state6 = ((bPassThruVcrUp_loc_read_reg_858 == 1'd1) & (tmp_reg_998 == 1'd0) & (icmp_ln78_reg_1007_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op175_write_state8 = ((bPassThruVcrUp_loc_read_reg_858 == 1'd0) & (tmp_reg_998 == 1'd0));
end

always @ (*) begin
    ap_predicate_op83_read_state5 = ((cmp24_i_i_reg_986 == 1'd1) & (icmp_ln78_reg_1007 == 1'd0));
end

assign cmp18582_i_i_fu_362_p2 = ((loopWidth_reg_863 == 15'd0) ? 1'b1 : 1'b0);

assign cmp24_i_i_fu_395_p2 = ((zext_ln75_fu_373_p1 < HeightIn_read_reg_852) ? 1'b1 : 1'b0);

assign cmp76_i_i_fu_400_p2 = ((y_reg_293 != 15'd0) ? 1'b1 : 1'b0);

assign empty_114_fu_391_p1 = out_y_fu_386_p2[0:0];

assign empty_115_fu_425_p1 = ap_phi_mux_x_phi_fu_308_p4[10:0];

assign empty_fu_382_p1 = y_reg_293[0:0];

assign icmp_ln75_2_fu_377_p2 = ((zext_ln75_fu_373_p1 == loopHeight_reg_874) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_356_p2 = (($signed(loopHeight_fu_351_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_420_p2 = ((ap_phi_mux_x_phi_fu_308_p4 == loopWidth_reg_863) ? 1'b1 : 1'b0);

assign idxprom5_i240_i_i_fu_429_p1 = empty_115_fu_425_p1;

assign linebuf_c_val_V_0_address0 = linebuf_c_val_V_0_addr_reg_1022_pp0_iter1_reg;

assign linebuf_c_val_V_0_address1 = idxprom5_i240_i_i_fu_429_p1;

assign linebuf_c_val_V_0_d0 = {{pixbuf_c_val_V_2_1_fu_156}, {pixbuf_c_val_V_2_0_5_fu_152}};

assign linebuf_c_val_V_1_address0 = zext_ln78_fu_596_p1;

assign linebuf_c_val_V_1_address1 = idxprom5_i240_i_i_fu_429_p1;

assign linebuf_c_val_V_1_d0 = {{pixbuf_c_val_V_2_1_10_fu_679_p3}, {pixbuf_c_val_V_2_0_fu_673_p3}};

assign linebuf_y_val_V_0_address0 = linebuf_y_val_V_0_addr_reg_1016_pp0_iter1_reg;

assign linebuf_y_val_V_0_address1 = idxprom5_i240_i_i_fu_429_p1;

assign linebuf_y_val_V_0_d0 = {{mpix_y_val_V_1_3_fu_148}, {mpix_y_val_V_0_3_fu_144}};

assign linebuf_y_val_V_1_address0 = zext_ln78_fu_596_p1;

assign linebuf_y_val_V_1_address1 = idxprom5_i240_i_i_reg_1011_pp0_iter1_reg;

assign linebuf_y_val_V_1_d0 = {{select_ln126_1_fu_637_p3}, {select_ln126_fu_631_p3}};

assign loopHeight_fu_351_p2 = (HeightIn_read_reg_852 + select_ln73_fu_344_p3);

assign or_ln174_8_i_i_fu_732_p7 = {{{{{{pix_val_V_5_2_fu_140}, {mpix_c_val_V_1_fu_136}}, {mpix_y_val_V_1_fu_132}}, {pix_val_V_2_2_fu_128}}, {mpix_c_val_V_0_fu_124}}, {mpix_y_val_V_0_fu_120}};

assign or_ln174_i_i_fu_839_p7 = {{{{{{{{{{8'd0}, {outpix_val_V_4_3_reg_1089}}}, {outpix_val_V_3_reg_1079}}}, {8'd0}}}, {outpix_val_V_1_3_reg_1084}}}, {outpix_val_V_0_reg_1074}};

assign out_y_fu_386_p2 = (zext_ln75_fu_373_p1 - select_ln73_reg_869);

assign outpix_val_V_0_fu_749_p1 = linebuf_y_val_V_1_q1[7:0];

assign outpix_val_V_1_3_fu_798_p3 = ((empty_114_reg_980[0:0] == 1'b1) ? outpix_val_V_1_fu_788_p4 : outpix_val_V_1_4_reg_1061_pp0_iter2_reg);

assign outpix_val_V_1_4_fu_589_p3 = ((empty_reg_972[0:0] == 1'b1) ? pixbuf_c_val_V_1_0_fu_568_p1 : pixbuf_c_val_V_2_0_9_fu_554_p1);

assign outpix_val_V_1_fu_788_p4 = {{add_ln1346_6_fu_782_p2[8:1]}};

assign outpix_val_V_4_3_fu_833_p3 = ((empty_114_reg_980[0:0] == 1'b1) ? outpix_val_V_4_fu_823_p4 : outpix_val_V_4_4_reg_1053_pp0_iter2_reg);

assign outpix_val_V_4_4_fu_582_p3 = ((empty_reg_972[0:0] == 1'b1) ? pixbuf_c_val_V_1_1_fu_572_p4 : pixbuf_c_val_V_2_1_11_fu_558_p4);

assign outpix_val_V_4_fu_823_p4 = {{add_ln1346_8_fu_817_p2[8:1]}};

assign pix_val_V_0_fu_436_p1 = stream_in_dout[7:0];

assign pixbuf_c_val_V_1_0_fu_568_p1 = linebuf_c_val_V_1_q1[7:0];

assign pixbuf_c_val_V_1_1_fu_572_p4 = {{linebuf_c_val_V_1_q1[15:8]}};

assign pixbuf_c_val_V_2_0_9_fu_554_p1 = linebuf_c_val_V_0_q1[7:0];

assign pixbuf_c_val_V_2_0_fu_673_p3 = ((cmp76_i_i_reg_990[0:0] == 1'b1) ? outpix_val_V_1_4_reg_1061 : ap_phi_mux_PixBufVal_val_V_0_2_phi_fu_328_p4);

assign pixbuf_c_val_V_2_1_10_fu_679_p3 = ((cmp76_i_i_reg_990[0:0] == 1'b1) ? outpix_val_V_4_4_reg_1053 : ap_phi_mux_pixbuf_c_val_V_2_1_3_i_i_phi_fu_319_p4);

assign pixbuf_c_val_V_2_1_11_fu_558_p4 = {{linebuf_c_val_V_0_q1[15:8]}};

assign select_ln126_1_fu_637_p3 = ((cmp76_i_i_reg_990[0:0] == 1'b1) ? outpix_val_V_3_i_i_reg_1038 : mpix_y_val_V_1_3_fu_148);

assign select_ln126_fu_631_p3 = ((cmp76_i_i_reg_990[0:0] == 1'b1) ? trunc_ln674_reg_1033 : mpix_y_val_V_0_3_fu_144);

assign select_ln151_1_fu_658_p3 = ((empty_reg_972[0:0] == 1'b1) ? pixbuf_c_val_V_2_0_9_reg_1043 : PixBufVal_val_V_0_fu_160);

assign select_ln151_fu_652_p3 = ((empty_reg_972[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_11_reg_1048 : pixbuf_c_val_V_2_1_7_fu_164);

assign select_ln73_fu_344_p3 = ((bPassThruVcrUp_loc_read_reg_858[0:0] == 1'b1) ? 16'd0 : 16'd2);

assign trunc_ln674_fu_540_p1 = linebuf_y_val_V_0_q1[7:0];

assign zext_ln215_37_fu_772_p1 = PixBufVal_val_V_0_fu_160;

assign zext_ln215_38_fu_804_p1 = outpix_val_V_4_4_reg_1053_pp0_iter2_reg;

assign zext_ln215_39_fu_807_p1 = pixbuf_c_val_V_2_1_7_fu_164;

assign zext_ln215_fu_769_p1 = outpix_val_V_1_4_reg_1061_pp0_iter2_reg;

assign zext_ln75_fu_373_p1 = y_reg_293;

assign zext_ln78_fu_596_p1 = x_reg_304_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    select_ln73_reg_869[0] <= 1'b0;
    select_ln73_reg_869[15:2] <= 14'b00000000000000;
    idxprom5_i240_i_i_reg_1011[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    idxprom5_i240_i_i_reg_1011_pp0_iter1_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //bd_v_multi_scaler_0_0_v_vcresampler37
