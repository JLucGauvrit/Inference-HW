// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bd_v_mix_0_0_v_mix,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.605545,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=72,HLS_SYN_DSP=0,HLS_SYN_FF=29473,HLS_SYN_LUT=30473,HLS_VERSION=2020_2}" *)

module bd_v_mix_0_0_v_mix (
        ap_clk,
        ap_rst_n,
        m_axi_mm_video1_AWVALID,
        m_axi_mm_video1_AWREADY,
        m_axi_mm_video1_AWADDR,
        m_axi_mm_video1_AWID,
        m_axi_mm_video1_AWLEN,
        m_axi_mm_video1_AWSIZE,
        m_axi_mm_video1_AWBURST,
        m_axi_mm_video1_AWLOCK,
        m_axi_mm_video1_AWCACHE,
        m_axi_mm_video1_AWPROT,
        m_axi_mm_video1_AWQOS,
        m_axi_mm_video1_AWREGION,
        m_axi_mm_video1_AWUSER,
        m_axi_mm_video1_WVALID,
        m_axi_mm_video1_WREADY,
        m_axi_mm_video1_WDATA,
        m_axi_mm_video1_WSTRB,
        m_axi_mm_video1_WLAST,
        m_axi_mm_video1_WID,
        m_axi_mm_video1_WUSER,
        m_axi_mm_video1_ARVALID,
        m_axi_mm_video1_ARREADY,
        m_axi_mm_video1_ARADDR,
        m_axi_mm_video1_ARID,
        m_axi_mm_video1_ARLEN,
        m_axi_mm_video1_ARSIZE,
        m_axi_mm_video1_ARBURST,
        m_axi_mm_video1_ARLOCK,
        m_axi_mm_video1_ARCACHE,
        m_axi_mm_video1_ARPROT,
        m_axi_mm_video1_ARQOS,
        m_axi_mm_video1_ARREGION,
        m_axi_mm_video1_ARUSER,
        m_axi_mm_video1_RVALID,
        m_axi_mm_video1_RREADY,
        m_axi_mm_video1_RDATA,
        m_axi_mm_video1_RLAST,
        m_axi_mm_video1_RID,
        m_axi_mm_video1_RUSER,
        m_axi_mm_video1_RRESP,
        m_axi_mm_video1_BVALID,
        m_axi_mm_video1_BREADY,
        m_axi_mm_video1_BRESP,
        m_axi_mm_video1_BID,
        m_axi_mm_video1_BUSER,
        m_axi_mm_video2_AWVALID,
        m_axi_mm_video2_AWREADY,
        m_axi_mm_video2_AWADDR,
        m_axi_mm_video2_AWID,
        m_axi_mm_video2_AWLEN,
        m_axi_mm_video2_AWSIZE,
        m_axi_mm_video2_AWBURST,
        m_axi_mm_video2_AWLOCK,
        m_axi_mm_video2_AWCACHE,
        m_axi_mm_video2_AWPROT,
        m_axi_mm_video2_AWQOS,
        m_axi_mm_video2_AWREGION,
        m_axi_mm_video2_AWUSER,
        m_axi_mm_video2_WVALID,
        m_axi_mm_video2_WREADY,
        m_axi_mm_video2_WDATA,
        m_axi_mm_video2_WSTRB,
        m_axi_mm_video2_WLAST,
        m_axi_mm_video2_WID,
        m_axi_mm_video2_WUSER,
        m_axi_mm_video2_ARVALID,
        m_axi_mm_video2_ARREADY,
        m_axi_mm_video2_ARADDR,
        m_axi_mm_video2_ARID,
        m_axi_mm_video2_ARLEN,
        m_axi_mm_video2_ARSIZE,
        m_axi_mm_video2_ARBURST,
        m_axi_mm_video2_ARLOCK,
        m_axi_mm_video2_ARCACHE,
        m_axi_mm_video2_ARPROT,
        m_axi_mm_video2_ARQOS,
        m_axi_mm_video2_ARREGION,
        m_axi_mm_video2_ARUSER,
        m_axi_mm_video2_RVALID,
        m_axi_mm_video2_RREADY,
        m_axi_mm_video2_RDATA,
        m_axi_mm_video2_RLAST,
        m_axi_mm_video2_RID,
        m_axi_mm_video2_RUSER,
        m_axi_mm_video2_RRESP,
        m_axi_mm_video2_BVALID,
        m_axi_mm_video2_BREADY,
        m_axi_mm_video2_BRESP,
        m_axi_mm_video2_BID,
        m_axi_mm_video2_BUSER,
        m_axi_mm_video3_AWVALID,
        m_axi_mm_video3_AWREADY,
        m_axi_mm_video3_AWADDR,
        m_axi_mm_video3_AWID,
        m_axi_mm_video3_AWLEN,
        m_axi_mm_video3_AWSIZE,
        m_axi_mm_video3_AWBURST,
        m_axi_mm_video3_AWLOCK,
        m_axi_mm_video3_AWCACHE,
        m_axi_mm_video3_AWPROT,
        m_axi_mm_video3_AWQOS,
        m_axi_mm_video3_AWREGION,
        m_axi_mm_video3_AWUSER,
        m_axi_mm_video3_WVALID,
        m_axi_mm_video3_WREADY,
        m_axi_mm_video3_WDATA,
        m_axi_mm_video3_WSTRB,
        m_axi_mm_video3_WLAST,
        m_axi_mm_video3_WID,
        m_axi_mm_video3_WUSER,
        m_axi_mm_video3_ARVALID,
        m_axi_mm_video3_ARREADY,
        m_axi_mm_video3_ARADDR,
        m_axi_mm_video3_ARID,
        m_axi_mm_video3_ARLEN,
        m_axi_mm_video3_ARSIZE,
        m_axi_mm_video3_ARBURST,
        m_axi_mm_video3_ARLOCK,
        m_axi_mm_video3_ARCACHE,
        m_axi_mm_video3_ARPROT,
        m_axi_mm_video3_ARQOS,
        m_axi_mm_video3_ARREGION,
        m_axi_mm_video3_ARUSER,
        m_axi_mm_video3_RVALID,
        m_axi_mm_video3_RREADY,
        m_axi_mm_video3_RDATA,
        m_axi_mm_video3_RLAST,
        m_axi_mm_video3_RID,
        m_axi_mm_video3_RUSER,
        m_axi_mm_video3_RRESP,
        m_axi_mm_video3_BVALID,
        m_axi_mm_video3_BREADY,
        m_axi_mm_video3_BRESP,
        m_axi_mm_video3_BID,
        m_axi_mm_video3_BUSER,
        s_axis_video_TDATA,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        K11,
        K12,
        K13,
        K21,
        K22,
        K23,
        K31,
        K32,
        K33,
        ROffset,
        GOffset,
        BOffset,
        K11_2,
        K12_2,
        K13_2,
        K21_2,
        K22_2,
        K23_2,
        K31_2,
        K32_2,
        K33_2,
        YOffset,
        UOffset,
        VOffset,
        m_axis_video_TDATA,
        m_axis_video_TVALID,
        m_axis_video_TREADY,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 12;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MM_VIDEO1_ID_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_ADDR_WIDTH = 64;
parameter    C_M_AXI_MM_VIDEO1_DATA_WIDTH = 128;
parameter    C_M_AXI_MM_VIDEO1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_WUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_RUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_BUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO1_USER_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO1_PROT_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MM_VIDEO2_ID_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_ADDR_WIDTH = 64;
parameter    C_M_AXI_MM_VIDEO2_DATA_WIDTH = 128;
parameter    C_M_AXI_MM_VIDEO2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_WUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_RUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_BUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO2_USER_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO2_PROT_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO2_CACHE_VALUE = 3;
parameter    C_M_AXI_MM_VIDEO3_ID_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_ADDR_WIDTH = 64;
parameter    C_M_AXI_MM_VIDEO3_DATA_WIDTH = 128;
parameter    C_M_AXI_MM_VIDEO3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_WUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_RUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_BUSER_WIDTH = 1;
parameter    C_M_AXI_MM_VIDEO3_USER_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO3_PROT_VALUE = 0;
parameter    C_M_AXI_MM_VIDEO3_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MM_VIDEO1_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MM_VIDEO2_WSTRB_WIDTH = (128 / 8);
parameter C_M_AXI_MM_VIDEO3_WSTRB_WIDTH = (128 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_mm_video1_AWVALID;
input   m_axi_mm_video1_AWREADY;
output  [C_M_AXI_MM_VIDEO1_ADDR_WIDTH - 1:0] m_axi_mm_video1_AWADDR;
output  [C_M_AXI_MM_VIDEO1_ID_WIDTH - 1:0] m_axi_mm_video1_AWID;
output  [7:0] m_axi_mm_video1_AWLEN;
output  [2:0] m_axi_mm_video1_AWSIZE;
output  [1:0] m_axi_mm_video1_AWBURST;
output  [1:0] m_axi_mm_video1_AWLOCK;
output  [3:0] m_axi_mm_video1_AWCACHE;
output  [2:0] m_axi_mm_video1_AWPROT;
output  [3:0] m_axi_mm_video1_AWQOS;
output  [3:0] m_axi_mm_video1_AWREGION;
output  [C_M_AXI_MM_VIDEO1_AWUSER_WIDTH - 1:0] m_axi_mm_video1_AWUSER;
output   m_axi_mm_video1_WVALID;
input   m_axi_mm_video1_WREADY;
output  [C_M_AXI_MM_VIDEO1_DATA_WIDTH - 1:0] m_axi_mm_video1_WDATA;
output  [C_M_AXI_MM_VIDEO1_WSTRB_WIDTH - 1:0] m_axi_mm_video1_WSTRB;
output   m_axi_mm_video1_WLAST;
output  [C_M_AXI_MM_VIDEO1_ID_WIDTH - 1:0] m_axi_mm_video1_WID;
output  [C_M_AXI_MM_VIDEO1_WUSER_WIDTH - 1:0] m_axi_mm_video1_WUSER;
output   m_axi_mm_video1_ARVALID;
input   m_axi_mm_video1_ARREADY;
output  [C_M_AXI_MM_VIDEO1_ADDR_WIDTH - 1:0] m_axi_mm_video1_ARADDR;
output  [C_M_AXI_MM_VIDEO1_ID_WIDTH - 1:0] m_axi_mm_video1_ARID;
output  [7:0] m_axi_mm_video1_ARLEN;
output  [2:0] m_axi_mm_video1_ARSIZE;
output  [1:0] m_axi_mm_video1_ARBURST;
output  [1:0] m_axi_mm_video1_ARLOCK;
output  [3:0] m_axi_mm_video1_ARCACHE;
output  [2:0] m_axi_mm_video1_ARPROT;
output  [3:0] m_axi_mm_video1_ARQOS;
output  [3:0] m_axi_mm_video1_ARREGION;
output  [C_M_AXI_MM_VIDEO1_ARUSER_WIDTH - 1:0] m_axi_mm_video1_ARUSER;
input   m_axi_mm_video1_RVALID;
output   m_axi_mm_video1_RREADY;
input  [C_M_AXI_MM_VIDEO1_DATA_WIDTH - 1:0] m_axi_mm_video1_RDATA;
input   m_axi_mm_video1_RLAST;
input  [C_M_AXI_MM_VIDEO1_ID_WIDTH - 1:0] m_axi_mm_video1_RID;
input  [C_M_AXI_MM_VIDEO1_RUSER_WIDTH - 1:0] m_axi_mm_video1_RUSER;
input  [1:0] m_axi_mm_video1_RRESP;
input   m_axi_mm_video1_BVALID;
output   m_axi_mm_video1_BREADY;
input  [1:0] m_axi_mm_video1_BRESP;
input  [C_M_AXI_MM_VIDEO1_ID_WIDTH - 1:0] m_axi_mm_video1_BID;
input  [C_M_AXI_MM_VIDEO1_BUSER_WIDTH - 1:0] m_axi_mm_video1_BUSER;
output   m_axi_mm_video2_AWVALID;
input   m_axi_mm_video2_AWREADY;
output  [C_M_AXI_MM_VIDEO2_ADDR_WIDTH - 1:0] m_axi_mm_video2_AWADDR;
output  [C_M_AXI_MM_VIDEO2_ID_WIDTH - 1:0] m_axi_mm_video2_AWID;
output  [7:0] m_axi_mm_video2_AWLEN;
output  [2:0] m_axi_mm_video2_AWSIZE;
output  [1:0] m_axi_mm_video2_AWBURST;
output  [1:0] m_axi_mm_video2_AWLOCK;
output  [3:0] m_axi_mm_video2_AWCACHE;
output  [2:0] m_axi_mm_video2_AWPROT;
output  [3:0] m_axi_mm_video2_AWQOS;
output  [3:0] m_axi_mm_video2_AWREGION;
output  [C_M_AXI_MM_VIDEO2_AWUSER_WIDTH - 1:0] m_axi_mm_video2_AWUSER;
output   m_axi_mm_video2_WVALID;
input   m_axi_mm_video2_WREADY;
output  [C_M_AXI_MM_VIDEO2_DATA_WIDTH - 1:0] m_axi_mm_video2_WDATA;
output  [C_M_AXI_MM_VIDEO2_WSTRB_WIDTH - 1:0] m_axi_mm_video2_WSTRB;
output   m_axi_mm_video2_WLAST;
output  [C_M_AXI_MM_VIDEO2_ID_WIDTH - 1:0] m_axi_mm_video2_WID;
output  [C_M_AXI_MM_VIDEO2_WUSER_WIDTH - 1:0] m_axi_mm_video2_WUSER;
output   m_axi_mm_video2_ARVALID;
input   m_axi_mm_video2_ARREADY;
output  [C_M_AXI_MM_VIDEO2_ADDR_WIDTH - 1:0] m_axi_mm_video2_ARADDR;
output  [C_M_AXI_MM_VIDEO2_ID_WIDTH - 1:0] m_axi_mm_video2_ARID;
output  [7:0] m_axi_mm_video2_ARLEN;
output  [2:0] m_axi_mm_video2_ARSIZE;
output  [1:0] m_axi_mm_video2_ARBURST;
output  [1:0] m_axi_mm_video2_ARLOCK;
output  [3:0] m_axi_mm_video2_ARCACHE;
output  [2:0] m_axi_mm_video2_ARPROT;
output  [3:0] m_axi_mm_video2_ARQOS;
output  [3:0] m_axi_mm_video2_ARREGION;
output  [C_M_AXI_MM_VIDEO2_ARUSER_WIDTH - 1:0] m_axi_mm_video2_ARUSER;
input   m_axi_mm_video2_RVALID;
output   m_axi_mm_video2_RREADY;
input  [C_M_AXI_MM_VIDEO2_DATA_WIDTH - 1:0] m_axi_mm_video2_RDATA;
input   m_axi_mm_video2_RLAST;
input  [C_M_AXI_MM_VIDEO2_ID_WIDTH - 1:0] m_axi_mm_video2_RID;
input  [C_M_AXI_MM_VIDEO2_RUSER_WIDTH - 1:0] m_axi_mm_video2_RUSER;
input  [1:0] m_axi_mm_video2_RRESP;
input   m_axi_mm_video2_BVALID;
output   m_axi_mm_video2_BREADY;
input  [1:0] m_axi_mm_video2_BRESP;
input  [C_M_AXI_MM_VIDEO2_ID_WIDTH - 1:0] m_axi_mm_video2_BID;
input  [C_M_AXI_MM_VIDEO2_BUSER_WIDTH - 1:0] m_axi_mm_video2_BUSER;
output   m_axi_mm_video3_AWVALID;
input   m_axi_mm_video3_AWREADY;
output  [C_M_AXI_MM_VIDEO3_ADDR_WIDTH - 1:0] m_axi_mm_video3_AWADDR;
output  [C_M_AXI_MM_VIDEO3_ID_WIDTH - 1:0] m_axi_mm_video3_AWID;
output  [7:0] m_axi_mm_video3_AWLEN;
output  [2:0] m_axi_mm_video3_AWSIZE;
output  [1:0] m_axi_mm_video3_AWBURST;
output  [1:0] m_axi_mm_video3_AWLOCK;
output  [3:0] m_axi_mm_video3_AWCACHE;
output  [2:0] m_axi_mm_video3_AWPROT;
output  [3:0] m_axi_mm_video3_AWQOS;
output  [3:0] m_axi_mm_video3_AWREGION;
output  [C_M_AXI_MM_VIDEO3_AWUSER_WIDTH - 1:0] m_axi_mm_video3_AWUSER;
output   m_axi_mm_video3_WVALID;
input   m_axi_mm_video3_WREADY;
output  [C_M_AXI_MM_VIDEO3_DATA_WIDTH - 1:0] m_axi_mm_video3_WDATA;
output  [C_M_AXI_MM_VIDEO3_WSTRB_WIDTH - 1:0] m_axi_mm_video3_WSTRB;
output   m_axi_mm_video3_WLAST;
output  [C_M_AXI_MM_VIDEO3_ID_WIDTH - 1:0] m_axi_mm_video3_WID;
output  [C_M_AXI_MM_VIDEO3_WUSER_WIDTH - 1:0] m_axi_mm_video3_WUSER;
output   m_axi_mm_video3_ARVALID;
input   m_axi_mm_video3_ARREADY;
output  [C_M_AXI_MM_VIDEO3_ADDR_WIDTH - 1:0] m_axi_mm_video3_ARADDR;
output  [C_M_AXI_MM_VIDEO3_ID_WIDTH - 1:0] m_axi_mm_video3_ARID;
output  [7:0] m_axi_mm_video3_ARLEN;
output  [2:0] m_axi_mm_video3_ARSIZE;
output  [1:0] m_axi_mm_video3_ARBURST;
output  [1:0] m_axi_mm_video3_ARLOCK;
output  [3:0] m_axi_mm_video3_ARCACHE;
output  [2:0] m_axi_mm_video3_ARPROT;
output  [3:0] m_axi_mm_video3_ARQOS;
output  [3:0] m_axi_mm_video3_ARREGION;
output  [C_M_AXI_MM_VIDEO3_ARUSER_WIDTH - 1:0] m_axi_mm_video3_ARUSER;
input   m_axi_mm_video3_RVALID;
output   m_axi_mm_video3_RREADY;
input  [C_M_AXI_MM_VIDEO3_DATA_WIDTH - 1:0] m_axi_mm_video3_RDATA;
input   m_axi_mm_video3_RLAST;
input  [C_M_AXI_MM_VIDEO3_ID_WIDTH - 1:0] m_axi_mm_video3_RID;
input  [C_M_AXI_MM_VIDEO3_RUSER_WIDTH - 1:0] m_axi_mm_video3_RUSER;
input  [1:0] m_axi_mm_video3_RRESP;
input   m_axi_mm_video3_BVALID;
output   m_axi_mm_video3_BREADY;
input  [1:0] m_axi_mm_video3_BRESP;
input  [C_M_AXI_MM_VIDEO3_ID_WIDTH - 1:0] m_axi_mm_video3_BID;
input  [C_M_AXI_MM_VIDEO3_BUSER_WIDTH - 1:0] m_axi_mm_video3_BUSER;
input  [47:0] s_axis_video_TDATA;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
input  [5:0] s_axis_video_TKEEP;
input  [5:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
input  [31:0] K11;
input  [31:0] K12;
input  [31:0] K13;
input  [31:0] K21;
input  [31:0] K22;
input  [31:0] K23;
input  [31:0] K31;
input  [31:0] K32;
input  [31:0] K33;
input  [31:0] ROffset;
input  [31:0] GOffset;
input  [31:0] BOffset;
input  [31:0] K11_2;
input  [31:0] K12_2;
input  [31:0] K13_2;
input  [31:0] K21_2;
input  [31:0] K22_2;
input  [31:0] K23_2;
input  [31:0] K31_2;
input  [31:0] K32_2;
input  [31:0] K33_2;
input  [31:0] YOffset;
input  [31:0] UOffset;
input  [31:0] VOffset;
output  [47:0] m_axis_video_TDATA;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;
output  [5:0] m_axis_video_TKEEP;
output  [5:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] width;
wire   [15:0] height;
wire   [15:0] video_format;
wire   [15:0] background_Y_R;
wire   [15:0] background_U_G;
wire   [15:0] background_V_B;
wire   [31:0] layerEnable;
wire   [63:0] layer1_buf1;
wire   [63:0] layer1_buf2;
wire   [63:0] layer2_buf1;
wire   [63:0] layer2_buf2;
wire   [63:0] layer3_buf1;
wire   [63:0] layer3_buf2;
wire   [15:0] layerAlpha_0;
wire   [15:0] layerAlpha_1;
wire   [15:0] layerAlpha_2;
wire   [15:0] layerAlpha_3;
wire   [15:0] layerStartX_0;
wire   [15:0] layerStartX_1;
wire   [15:0] layerStartX_2;
wire   [15:0] layerStartX_3;
wire   [15:0] layerStartY_0;
wire   [15:0] layerStartY_1;
wire   [15:0] layerStartY_2;
wire   [15:0] layerStartY_3;
wire   [15:0] layerWidth_0;
wire   [15:0] layerWidth_1;
wire   [15:0] layerWidth_2;
wire   [15:0] layerWidth_3;
wire   [15:0] layerHeight_0;
wire   [15:0] layerHeight_1;
wire   [15:0] layerHeight_2;
wire   [15:0] layerHeight_3;
wire   [7:0] layerScaleFactor_0;
wire   [7:0] layerScaleFactor_1;
wire   [7:0] layerScaleFactor_2;
wire   [7:0] layerScaleFactor_3;
wire   [7:0] layerVideoFormat_0;
wire   [7:0] layerVideoFormat_1;
wire   [7:0] layerVideoFormat_2;
wire   [7:0] layerVideoFormat_3;
wire   [15:0] layerStride_0;
wire   [15:0] layerStride_1;
wire   [15:0] layerStride_2;
wire   [15:0] layerStride_3;
wire   [15:0] reserve;
wire    flush;
reg    s_axi_CTRL_flush_done;
wire    m_axi_mm_video1_flush_done;
wire    m_axi_mm_video2_flush_done;
wire    m_axi_mm_video3_flush_done;
wire    mm_video1_AWREADY;
wire    mm_video1_WREADY;
reg    mm_video1_ARVALID;
wire    mm_video1_ARREADY;
wire    mm_video1_RVALID;
reg    mm_video1_RREADY;
wire   [127:0] mm_video1_RDATA;
wire    mm_video1_RLAST;
wire   [0:0] mm_video1_RID;
wire   [0:0] mm_video1_RUSER;
wire   [1:0] mm_video1_RRESP;
wire    mm_video1_BVALID;
wire   [1:0] mm_video1_BRESP;
wire   [0:0] mm_video1_BID;
wire   [0:0] mm_video1_BUSER;
wire    mm_video2_AWREADY;
wire    mm_video2_WREADY;
reg    mm_video2_ARVALID;
wire    mm_video2_ARREADY;
wire    mm_video2_RVALID;
reg    mm_video2_RREADY;
wire   [127:0] mm_video2_RDATA;
wire    mm_video2_RLAST;
wire   [0:0] mm_video2_RID;
wire   [0:0] mm_video2_RUSER;
wire   [1:0] mm_video2_RRESP;
wire    mm_video2_BVALID;
wire   [1:0] mm_video2_BRESP;
wire   [0:0] mm_video2_BID;
wire   [0:0] mm_video2_BUSER;
wire    mm_video3_AWREADY;
wire    mm_video3_WREADY;
reg    mm_video3_ARVALID;
wire    mm_video3_ARREADY;
wire    mm_video3_RVALID;
reg    mm_video3_RREADY;
wire   [127:0] mm_video3_RDATA;
wire    mm_video3_RLAST;
wire   [0:0] mm_video3_RID;
wire   [0:0] mm_video3_RUSER;
wire   [1:0] mm_video3_RRESP;
wire    mm_video3_BVALID;
wire   [1:0] mm_video3_BRESP;
wire   [0:0] mm_video3_BID;
wire   [0:0] mm_video3_BUSER;
reg   [63:0] layer3_buf1_read_reg_1128;
reg   [63:0] layer2_buf2_read_reg_1133;
reg   [63:0] layer2_buf1_read_reg_1138;
reg   [63:0] layer1_buf2_read_reg_1143;
reg   [63:0] layer1_buf1_read_reg_1148;
wire   [3:0] HwReg_layerEnable_fu_734_p1;
reg   [3:0] HwReg_layerEnable_reg_1153;
wire   [7:0] HwReg_background_V_B_fu_738_p1;
reg   [7:0] HwReg_background_V_B_reg_1159;
wire   [7:0] HwReg_background_U_G_fu_742_p1;
reg   [7:0] HwReg_background_U_G_reg_1164;
wire   [7:0] HwReg_background_Y_R_fu_746_p1;
reg   [7:0] HwReg_background_Y_R_reg_1169;
wire   [11:0] HwReg_height_fu_750_p1;
reg   [11:0] HwReg_height_reg_1174;
wire   [11:0] HwReg_width_fu_754_p1;
reg   [11:0] HwReg_width_reg_1180;
wire   [11:0] HwReg_layerAlpha_3_2_fu_758_p1;
reg   [11:0] HwReg_layerAlpha_3_2_reg_1186;
reg   [15:0] HwReg_layerStartX_1_reg_1191;
reg   [15:0] HwReg_layerStartX_2_reg_1196;
reg   [15:0] HwReg_layerStartX_3_reg_1201;
reg   [15:0] HwReg_layerStartY_1_reg_1206;
reg   [15:0] HwReg_layerStartY_2_reg_1211;
reg   [15:0] HwReg_layerStartY_3_reg_1216;
reg   [15:0] HwReg_layerWidth_1_reg_1221;
reg   [15:0] HwReg_layerWidth_2_reg_1226;
reg   [15:0] HwReg_layerWidth_3_reg_1231;
reg   [15:0] HwReg_layerHeight_1_reg_1236;
reg   [15:0] HwReg_layerHeight_2_reg_1241;
reg   [15:0] HwReg_layerHeight_3_reg_1246;
reg   [7:0] HwReg_layerScaleFactor_1_reg_1251;
reg   [7:0] HwReg_layerScaleFactor_2_reg_1256;
reg   [7:0] HwReg_layerScaleFactor_3_reg_1261;
reg   [15:0] layerStride_0_read_reg_1266;
reg   [15:0] layerStride_1_read_reg_1271;
reg   [15:0] layerStride_2_read_reg_1276;
reg   [15:0] layerStride_3_read_reg_1281;
wire   [2:0] add_ln2614_fu_762_p2;
wire    ap_CS_fsm_state2;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WVALID;
wire   [127:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WDATA;
wire   [15:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WSTRB;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WLAST;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WID;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_RREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_BREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WVALID;
wire   [127:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WDATA;
wire   [15:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WSTRB;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WLAST;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WID;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_RREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_BREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WVALID;
wire   [127:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WDATA;
wire   [15:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WSTRB;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WLAST;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WID;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARVALID;
wire   [63:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARADDR;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARID;
wire   [31:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLEN;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARSIZE;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARBURST;
wire   [1:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLOCK;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARCACHE;
wire   [2:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARPROT;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARQOS;
wire   [3:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARREGION;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARUSER;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_RREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_BREADY;
wire   [47:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDATA;
wire   [5:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TKEEP;
wire   [5:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TSTRB;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TUSER;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TLAST;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TID;
wire   [0:0] grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDEST;
wire    grp_VMixHlsDataFlowFunction_fu_660_ap_start;
wire    grp_VMixHlsDataFlowFunction_fu_660_s_axis_video_TREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID;
wire    grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TREADY;
wire    grp_VMixHlsDataFlowFunction_fu_660_ap_done;
wire    grp_VMixHlsDataFlowFunction_fu_660_ap_ready;
wire    grp_VMixHlsDataFlowFunction_fu_660_ap_idle;
reg    grp_VMixHlsDataFlowFunction_fu_660_ap_continue;
wire   [2:0] ap_phi_mux_i_phi_fu_640_p4;
reg   [2:0] i_reg_636;
wire   [0:0] icmp_ln2614_fu_768_p2;
reg   [15:0] ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8;
reg    grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_ready;
wire    ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_done;
reg    ap_block_state4_on_subcall_done;
reg    ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready;
reg    ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done;
reg   [0:0] HwReg_layerEnableFlag_3_fu_358;
wire   [0:0] HwReg_layerEnableFlag_0_fu_872_p2;
wire   [1:0] trunc_ln2622_fu_838_p1;
reg   [0:0] HwReg_layerEnableFlag_3_1_fu_362;
reg   [0:0] HwReg_layerEnableFlag_3_2_fu_366;
reg   [0:0] HwReg_layerEnableFlag_3_3_fu_370;
reg   [15:0] HwReg_layerStride_3_fu_374;
reg   [15:0] HwReg_layerStride_3_1_fu_378;
reg   [15:0] HwReg_layerStride_3_2_fu_382;
reg   [7:0] HwReg_layerScaleFactor_3_1_fu_386;
reg   [7:0] HwReg_layerScaleFactor_2_1_fu_390;
reg   [7:0] HwReg_layerScaleFactor_1_1_fu_394;
reg   [15:0] HwReg_layerHeight_3_1_fu_398;
reg   [15:0] HwReg_layerHeight_2_1_fu_402;
reg   [15:0] HwReg_layerHeight_1_1_fu_406;
reg   [11:0] HwReg_layerAlpha_3_1_fu_410;
reg   [15:0] HwReg_layerStartX_1_1_fu_414;
reg   [15:0] HwReg_layerStartX_2_1_fu_418;
reg   [15:0] HwReg_layerStartX_3_1_fu_422;
reg   [15:0] HwReg_layerStartY_1_1_fu_426;
reg   [15:0] HwReg_layerStartY_2_1_fu_430;
reg   [15:0] HwReg_layerStartY_3_1_fu_434;
reg   [15:0] HwReg_layerWidth_1_1_fu_438;
reg   [15:0] HwReg_layerWidth_2_1_fu_442;
reg   [15:0] HwReg_layerWidth_3_1_fu_446;
wire   [3:0] zext_ln2623_fu_857_p1;
wire   [3:0] shl_ln2623_fu_861_p2;
wire   [3:0] and_ln2623_fu_867_p2;
wire    ap_CS_fsm_state5;
wire    regslice_both_m_axis_video_V_data_V_U_apdone_blk;
reg   [4:0] ap_NS_fsm;
wire    regslice_both_s_axis_video_V_data_V_U_apdone_blk;
wire   [47:0] s_axis_video_TDATA_int_regslice;
wire    s_axis_video_TVALID_int_regslice;
reg    s_axis_video_TREADY_int_regslice;
wire    regslice_both_s_axis_video_V_data_V_U_ack_in;
wire    regslice_both_s_axis_video_V_keep_V_U_apdone_blk;
wire   [5:0] s_axis_video_TKEEP_int_regslice;
wire    regslice_both_s_axis_video_V_keep_V_U_vld_out;
wire    regslice_both_s_axis_video_V_keep_V_U_ack_in;
wire    regslice_both_s_axis_video_V_strb_V_U_apdone_blk;
wire   [5:0] s_axis_video_TSTRB_int_regslice;
wire    regslice_both_s_axis_video_V_strb_V_U_vld_out;
wire    regslice_both_s_axis_video_V_strb_V_U_ack_in;
wire    regslice_both_s_axis_video_V_user_V_U_apdone_blk;
wire   [0:0] s_axis_video_TUSER_int_regslice;
wire    regslice_both_s_axis_video_V_user_V_U_vld_out;
wire    regslice_both_s_axis_video_V_user_V_U_ack_in;
wire    regslice_both_s_axis_video_V_last_V_U_apdone_blk;
wire   [0:0] s_axis_video_TLAST_int_regslice;
wire    regslice_both_s_axis_video_V_last_V_U_vld_out;
wire    regslice_both_s_axis_video_V_last_V_U_ack_in;
wire    regslice_both_s_axis_video_V_id_V_U_apdone_blk;
wire   [0:0] s_axis_video_TID_int_regslice;
wire    regslice_both_s_axis_video_V_id_V_U_vld_out;
wire    regslice_both_s_axis_video_V_id_V_U_ack_in;
wire    regslice_both_s_axis_video_V_dest_V_U_apdone_blk;
wire   [0:0] s_axis_video_TDEST_int_regslice;
wire    regslice_both_s_axis_video_V_dest_V_U_vld_out;
wire    regslice_both_s_axis_video_V_dest_V_U_ack_in;
wire    m_axis_video_TREADY_int_regslice;
wire    regslice_both_m_axis_video_V_data_V_U_vld_out;
wire    regslice_both_m_axis_video_V_keep_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_keep_V_U_vld_out;
wire    regslice_both_m_axis_video_V_strb_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_strb_V_U_vld_out;
wire    regslice_both_m_axis_video_V_user_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_user_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_user_V_U_vld_out;
wire    regslice_both_m_axis_video_V_last_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_last_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_last_V_U_vld_out;
wire    regslice_both_m_axis_video_V_id_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_id_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_id_V_U_vld_out;
wire    regslice_both_m_axis_video_V_dest_V_U_apdone_blk;
wire    regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy;
wire    regslice_both_m_axis_video_V_dest_V_U_vld_out;
reg    ap_condition_1158;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready = 1'b0;
#0 ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done = 1'b0;
end

bd_v_mix_0_0_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .width(width),
    .height(height),
    .video_format(video_format),
    .background_Y_R(background_Y_R),
    .background_U_G(background_U_G),
    .background_V_B(background_V_B),
    .layerEnable(layerEnable),
    .layerAlpha_0(layerAlpha_0),
    .layerStartX_0(layerStartX_0),
    .layerStartY_0(layerStartY_0),
    .layerWidth_0(layerWidth_0),
    .layerStride_0(layerStride_0),
    .layerHeight_0(layerHeight_0),
    .layerScaleFactor_0(layerScaleFactor_0),
    .layerVideoFormat_0(layerVideoFormat_0),
    .layerAlpha_1(layerAlpha_1),
    .layerStartX_1(layerStartX_1),
    .layerStartY_1(layerStartY_1),
    .layerWidth_1(layerWidth_1),
    .layerStride_1(layerStride_1),
    .layerHeight_1(layerHeight_1),
    .layerScaleFactor_1(layerScaleFactor_1),
    .layerVideoFormat_1(layerVideoFormat_1),
    .layer1_buf1(layer1_buf1),
    .layer1_buf2(layer1_buf2),
    .layerAlpha_2(layerAlpha_2),
    .layerStartX_2(layerStartX_2),
    .layerStartY_2(layerStartY_2),
    .layerWidth_2(layerWidth_2),
    .layerStride_2(layerStride_2),
    .layerHeight_2(layerHeight_2),
    .layerScaleFactor_2(layerScaleFactor_2),
    .layerVideoFormat_2(layerVideoFormat_2),
    .layer2_buf1(layer2_buf1),
    .layer2_buf2(layer2_buf2),
    .layerAlpha_3(layerAlpha_3),
    .layerStartX_3(layerStartX_3),
    .layerStartY_3(layerStartY_3),
    .layerWidth_3(layerWidth_3),
    .layerStride_3(layerStride_3),
    .layerHeight_3(layerHeight_3),
    .layerScaleFactor_3(layerScaleFactor_3),
    .layerVideoFormat_3(layerVideoFormat_3),
    .layer3_buf1(layer3_buf1),
    .layer3_buf2(layer3_buf2),
    .reserve(reserve),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .flush(flush),
    .flush_done(s_axi_CTRL_flush_done)
);

bd_v_mix_0_0_mm_video1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 128 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 105 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MM_VIDEO1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MM_VIDEO1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MM_VIDEO1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MM_VIDEO1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MM_VIDEO1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MM_VIDEO1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MM_VIDEO1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MM_VIDEO1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MM_VIDEO1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MM_VIDEO1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MM_VIDEO1_CACHE_VALUE ))
mm_video1_m_axi_U(
    .AWVALID(m_axi_mm_video1_AWVALID),
    .AWREADY(m_axi_mm_video1_AWREADY),
    .AWADDR(m_axi_mm_video1_AWADDR),
    .AWID(m_axi_mm_video1_AWID),
    .AWLEN(m_axi_mm_video1_AWLEN),
    .AWSIZE(m_axi_mm_video1_AWSIZE),
    .AWBURST(m_axi_mm_video1_AWBURST),
    .AWLOCK(m_axi_mm_video1_AWLOCK),
    .AWCACHE(m_axi_mm_video1_AWCACHE),
    .AWPROT(m_axi_mm_video1_AWPROT),
    .AWQOS(m_axi_mm_video1_AWQOS),
    .AWREGION(m_axi_mm_video1_AWREGION),
    .AWUSER(m_axi_mm_video1_AWUSER),
    .WVALID(m_axi_mm_video1_WVALID),
    .WREADY(m_axi_mm_video1_WREADY),
    .WDATA(m_axi_mm_video1_WDATA),
    .WSTRB(m_axi_mm_video1_WSTRB),
    .WLAST(m_axi_mm_video1_WLAST),
    .WID(m_axi_mm_video1_WID),
    .WUSER(m_axi_mm_video1_WUSER),
    .ARVALID(m_axi_mm_video1_ARVALID),
    .ARREADY(m_axi_mm_video1_ARREADY),
    .ARADDR(m_axi_mm_video1_ARADDR),
    .ARID(m_axi_mm_video1_ARID),
    .ARLEN(m_axi_mm_video1_ARLEN),
    .ARSIZE(m_axi_mm_video1_ARSIZE),
    .ARBURST(m_axi_mm_video1_ARBURST),
    .ARLOCK(m_axi_mm_video1_ARLOCK),
    .ARCACHE(m_axi_mm_video1_ARCACHE),
    .ARPROT(m_axi_mm_video1_ARPROT),
    .ARQOS(m_axi_mm_video1_ARQOS),
    .ARREGION(m_axi_mm_video1_ARREGION),
    .ARUSER(m_axi_mm_video1_ARUSER),
    .RVALID(m_axi_mm_video1_RVALID),
    .RREADY(m_axi_mm_video1_RREADY),
    .RDATA(m_axi_mm_video1_RDATA),
    .RLAST(m_axi_mm_video1_RLAST),
    .RID(m_axi_mm_video1_RID),
    .RUSER(m_axi_mm_video1_RUSER),
    .RRESP(m_axi_mm_video1_RRESP),
    .BVALID(m_axi_mm_video1_BVALID),
    .BREADY(m_axi_mm_video1_BREADY),
    .BRESP(m_axi_mm_video1_BRESP),
    .BID(m_axi_mm_video1_BID),
    .BUSER(m_axi_mm_video1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .flush(flush),
    .flush_done(m_axi_mm_video1_flush_done),
    .I_ARVALID(mm_video1_ARVALID),
    .I_ARREADY(mm_video1_ARREADY),
    .I_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARADDR),
    .I_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARID),
    .I_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLEN),
    .I_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARSIZE),
    .I_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLOCK),
    .I_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARCACHE),
    .I_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARQOS),
    .I_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARPROT),
    .I_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARUSER),
    .I_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARBURST),
    .I_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARREGION),
    .I_RVALID(mm_video1_RVALID),
    .I_RREADY(mm_video1_RREADY),
    .I_RDATA(mm_video1_RDATA),
    .I_RID(mm_video1_RID),
    .I_RUSER(mm_video1_RUSER),
    .I_RRESP(mm_video1_RRESP),
    .I_RLAST(mm_video1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(mm_video1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(mm_video1_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(mm_video1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(mm_video1_BRESP),
    .I_BID(mm_video1_BID),
    .I_BUSER(mm_video1_BUSER)
);

bd_v_mix_0_0_mm_video2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 128 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 105 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MM_VIDEO2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MM_VIDEO2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MM_VIDEO2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MM_VIDEO2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MM_VIDEO2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MM_VIDEO2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MM_VIDEO2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MM_VIDEO2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MM_VIDEO2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MM_VIDEO2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MM_VIDEO2_CACHE_VALUE ))
mm_video2_m_axi_U(
    .AWVALID(m_axi_mm_video2_AWVALID),
    .AWREADY(m_axi_mm_video2_AWREADY),
    .AWADDR(m_axi_mm_video2_AWADDR),
    .AWID(m_axi_mm_video2_AWID),
    .AWLEN(m_axi_mm_video2_AWLEN),
    .AWSIZE(m_axi_mm_video2_AWSIZE),
    .AWBURST(m_axi_mm_video2_AWBURST),
    .AWLOCK(m_axi_mm_video2_AWLOCK),
    .AWCACHE(m_axi_mm_video2_AWCACHE),
    .AWPROT(m_axi_mm_video2_AWPROT),
    .AWQOS(m_axi_mm_video2_AWQOS),
    .AWREGION(m_axi_mm_video2_AWREGION),
    .AWUSER(m_axi_mm_video2_AWUSER),
    .WVALID(m_axi_mm_video2_WVALID),
    .WREADY(m_axi_mm_video2_WREADY),
    .WDATA(m_axi_mm_video2_WDATA),
    .WSTRB(m_axi_mm_video2_WSTRB),
    .WLAST(m_axi_mm_video2_WLAST),
    .WID(m_axi_mm_video2_WID),
    .WUSER(m_axi_mm_video2_WUSER),
    .ARVALID(m_axi_mm_video2_ARVALID),
    .ARREADY(m_axi_mm_video2_ARREADY),
    .ARADDR(m_axi_mm_video2_ARADDR),
    .ARID(m_axi_mm_video2_ARID),
    .ARLEN(m_axi_mm_video2_ARLEN),
    .ARSIZE(m_axi_mm_video2_ARSIZE),
    .ARBURST(m_axi_mm_video2_ARBURST),
    .ARLOCK(m_axi_mm_video2_ARLOCK),
    .ARCACHE(m_axi_mm_video2_ARCACHE),
    .ARPROT(m_axi_mm_video2_ARPROT),
    .ARQOS(m_axi_mm_video2_ARQOS),
    .ARREGION(m_axi_mm_video2_ARREGION),
    .ARUSER(m_axi_mm_video2_ARUSER),
    .RVALID(m_axi_mm_video2_RVALID),
    .RREADY(m_axi_mm_video2_RREADY),
    .RDATA(m_axi_mm_video2_RDATA),
    .RLAST(m_axi_mm_video2_RLAST),
    .RID(m_axi_mm_video2_RID),
    .RUSER(m_axi_mm_video2_RUSER),
    .RRESP(m_axi_mm_video2_RRESP),
    .BVALID(m_axi_mm_video2_BVALID),
    .BREADY(m_axi_mm_video2_BREADY),
    .BRESP(m_axi_mm_video2_BRESP),
    .BID(m_axi_mm_video2_BID),
    .BUSER(m_axi_mm_video2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .flush(flush),
    .flush_done(m_axi_mm_video2_flush_done),
    .I_ARVALID(mm_video2_ARVALID),
    .I_ARREADY(mm_video2_ARREADY),
    .I_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARADDR),
    .I_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARID),
    .I_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLEN),
    .I_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARSIZE),
    .I_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLOCK),
    .I_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARCACHE),
    .I_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARQOS),
    .I_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARPROT),
    .I_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARUSER),
    .I_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARBURST),
    .I_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARREGION),
    .I_RVALID(mm_video2_RVALID),
    .I_RREADY(mm_video2_RREADY),
    .I_RDATA(mm_video2_RDATA),
    .I_RID(mm_video2_RID),
    .I_RUSER(mm_video2_RUSER),
    .I_RRESP(mm_video2_RRESP),
    .I_RLAST(mm_video2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(mm_video2_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(mm_video2_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(mm_video2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(mm_video2_BRESP),
    .I_BID(mm_video2_BID),
    .I_BUSER(mm_video2_BUSER)
);

bd_v_mix_0_0_mm_video3_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 128 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 105 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MM_VIDEO3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MM_VIDEO3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MM_VIDEO3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MM_VIDEO3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MM_VIDEO3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MM_VIDEO3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MM_VIDEO3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MM_VIDEO3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MM_VIDEO3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MM_VIDEO3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MM_VIDEO3_CACHE_VALUE ))
mm_video3_m_axi_U(
    .AWVALID(m_axi_mm_video3_AWVALID),
    .AWREADY(m_axi_mm_video3_AWREADY),
    .AWADDR(m_axi_mm_video3_AWADDR),
    .AWID(m_axi_mm_video3_AWID),
    .AWLEN(m_axi_mm_video3_AWLEN),
    .AWSIZE(m_axi_mm_video3_AWSIZE),
    .AWBURST(m_axi_mm_video3_AWBURST),
    .AWLOCK(m_axi_mm_video3_AWLOCK),
    .AWCACHE(m_axi_mm_video3_AWCACHE),
    .AWPROT(m_axi_mm_video3_AWPROT),
    .AWQOS(m_axi_mm_video3_AWQOS),
    .AWREGION(m_axi_mm_video3_AWREGION),
    .AWUSER(m_axi_mm_video3_AWUSER),
    .WVALID(m_axi_mm_video3_WVALID),
    .WREADY(m_axi_mm_video3_WREADY),
    .WDATA(m_axi_mm_video3_WDATA),
    .WSTRB(m_axi_mm_video3_WSTRB),
    .WLAST(m_axi_mm_video3_WLAST),
    .WID(m_axi_mm_video3_WID),
    .WUSER(m_axi_mm_video3_WUSER),
    .ARVALID(m_axi_mm_video3_ARVALID),
    .ARREADY(m_axi_mm_video3_ARREADY),
    .ARADDR(m_axi_mm_video3_ARADDR),
    .ARID(m_axi_mm_video3_ARID),
    .ARLEN(m_axi_mm_video3_ARLEN),
    .ARSIZE(m_axi_mm_video3_ARSIZE),
    .ARBURST(m_axi_mm_video3_ARBURST),
    .ARLOCK(m_axi_mm_video3_ARLOCK),
    .ARCACHE(m_axi_mm_video3_ARCACHE),
    .ARPROT(m_axi_mm_video3_ARPROT),
    .ARQOS(m_axi_mm_video3_ARQOS),
    .ARREGION(m_axi_mm_video3_ARREGION),
    .ARUSER(m_axi_mm_video3_ARUSER),
    .RVALID(m_axi_mm_video3_RVALID),
    .RREADY(m_axi_mm_video3_RREADY),
    .RDATA(m_axi_mm_video3_RDATA),
    .RLAST(m_axi_mm_video3_RLAST),
    .RID(m_axi_mm_video3_RID),
    .RUSER(m_axi_mm_video3_RUSER),
    .RRESP(m_axi_mm_video3_RRESP),
    .BVALID(m_axi_mm_video3_BVALID),
    .BREADY(m_axi_mm_video3_BREADY),
    .BRESP(m_axi_mm_video3_BRESP),
    .BID(m_axi_mm_video3_BID),
    .BUSER(m_axi_mm_video3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .flush(flush),
    .flush_done(m_axi_mm_video3_flush_done),
    .I_ARVALID(mm_video3_ARVALID),
    .I_ARREADY(mm_video3_ARREADY),
    .I_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARADDR),
    .I_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARID),
    .I_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLEN),
    .I_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARSIZE),
    .I_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLOCK),
    .I_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARCACHE),
    .I_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARQOS),
    .I_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARPROT),
    .I_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARUSER),
    .I_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARBURST),
    .I_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARREGION),
    .I_RVALID(mm_video3_RVALID),
    .I_RREADY(mm_video3_RREADY),
    .I_RDATA(mm_video3_RDATA),
    .I_RID(mm_video3_RID),
    .I_RUSER(mm_video3_RUSER),
    .I_RRESP(mm_video3_RRESP),
    .I_RLAST(mm_video3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(mm_video3_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(mm_video3_WREADY),
    .I_WDATA(128'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(16'd0),
    .I_BVALID(mm_video3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(mm_video3_BRESP),
    .I_BID(mm_video3_BID),
    .I_BUSER(mm_video3_BUSER)
);

bd_v_mix_0_0_VMixHlsDataFlowFunction grp_VMixHlsDataFlowFunction_fu_660(
    .m_axi_mm_video1_AWVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWVALID),
    .m_axi_mm_video1_AWREADY(1'b0),
    .m_axi_mm_video1_AWADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWADDR),
    .m_axi_mm_video1_AWID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWID),
    .m_axi_mm_video1_AWLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWLEN),
    .m_axi_mm_video1_AWSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWSIZE),
    .m_axi_mm_video1_AWBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWBURST),
    .m_axi_mm_video1_AWLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWLOCK),
    .m_axi_mm_video1_AWCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWCACHE),
    .m_axi_mm_video1_AWPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWPROT),
    .m_axi_mm_video1_AWQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWQOS),
    .m_axi_mm_video1_AWREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWREGION),
    .m_axi_mm_video1_AWUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_AWUSER),
    .m_axi_mm_video1_WVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WVALID),
    .m_axi_mm_video1_WREADY(1'b0),
    .m_axi_mm_video1_WDATA(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WDATA),
    .m_axi_mm_video1_WSTRB(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WSTRB),
    .m_axi_mm_video1_WLAST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WLAST),
    .m_axi_mm_video1_WID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WID),
    .m_axi_mm_video1_WUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_WUSER),
    .m_axi_mm_video1_ARVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARVALID),
    .m_axi_mm_video1_ARREADY(mm_video1_ARREADY),
    .m_axi_mm_video1_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARADDR),
    .m_axi_mm_video1_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARID),
    .m_axi_mm_video1_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLEN),
    .m_axi_mm_video1_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARSIZE),
    .m_axi_mm_video1_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARBURST),
    .m_axi_mm_video1_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARLOCK),
    .m_axi_mm_video1_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARCACHE),
    .m_axi_mm_video1_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARPROT),
    .m_axi_mm_video1_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARQOS),
    .m_axi_mm_video1_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARREGION),
    .m_axi_mm_video1_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARUSER),
    .m_axi_mm_video1_RVALID(mm_video1_RVALID),
    .m_axi_mm_video1_RREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_RREADY),
    .m_axi_mm_video1_RDATA(mm_video1_RDATA),
    .m_axi_mm_video1_RLAST(mm_video1_RLAST),
    .m_axi_mm_video1_RID(mm_video1_RID),
    .m_axi_mm_video1_RUSER(mm_video1_RUSER),
    .m_axi_mm_video1_RRESP(mm_video1_RRESP),
    .m_axi_mm_video1_BVALID(1'b0),
    .m_axi_mm_video1_BREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_BREADY),
    .m_axi_mm_video1_BRESP(2'd0),
    .m_axi_mm_video1_BID(1'd0),
    .m_axi_mm_video1_BUSER(1'd0),
    .m_axi_mm_video2_AWVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWVALID),
    .m_axi_mm_video2_AWREADY(1'b0),
    .m_axi_mm_video2_AWADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWADDR),
    .m_axi_mm_video2_AWID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWID),
    .m_axi_mm_video2_AWLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWLEN),
    .m_axi_mm_video2_AWSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWSIZE),
    .m_axi_mm_video2_AWBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWBURST),
    .m_axi_mm_video2_AWLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWLOCK),
    .m_axi_mm_video2_AWCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWCACHE),
    .m_axi_mm_video2_AWPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWPROT),
    .m_axi_mm_video2_AWQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWQOS),
    .m_axi_mm_video2_AWREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWREGION),
    .m_axi_mm_video2_AWUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_AWUSER),
    .m_axi_mm_video2_WVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WVALID),
    .m_axi_mm_video2_WREADY(1'b0),
    .m_axi_mm_video2_WDATA(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WDATA),
    .m_axi_mm_video2_WSTRB(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WSTRB),
    .m_axi_mm_video2_WLAST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WLAST),
    .m_axi_mm_video2_WID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WID),
    .m_axi_mm_video2_WUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_WUSER),
    .m_axi_mm_video2_ARVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARVALID),
    .m_axi_mm_video2_ARREADY(mm_video2_ARREADY),
    .m_axi_mm_video2_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARADDR),
    .m_axi_mm_video2_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARID),
    .m_axi_mm_video2_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLEN),
    .m_axi_mm_video2_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARSIZE),
    .m_axi_mm_video2_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARBURST),
    .m_axi_mm_video2_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARLOCK),
    .m_axi_mm_video2_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARCACHE),
    .m_axi_mm_video2_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARPROT),
    .m_axi_mm_video2_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARQOS),
    .m_axi_mm_video2_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARREGION),
    .m_axi_mm_video2_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARUSER),
    .m_axi_mm_video2_RVALID(mm_video2_RVALID),
    .m_axi_mm_video2_RREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_RREADY),
    .m_axi_mm_video2_RDATA(mm_video2_RDATA),
    .m_axi_mm_video2_RLAST(mm_video2_RLAST),
    .m_axi_mm_video2_RID(mm_video2_RID),
    .m_axi_mm_video2_RUSER(mm_video2_RUSER),
    .m_axi_mm_video2_RRESP(mm_video2_RRESP),
    .m_axi_mm_video2_BVALID(1'b0),
    .m_axi_mm_video2_BREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_BREADY),
    .m_axi_mm_video2_BRESP(2'd0),
    .m_axi_mm_video2_BID(1'd0),
    .m_axi_mm_video2_BUSER(1'd0),
    .m_axi_mm_video3_AWVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWVALID),
    .m_axi_mm_video3_AWREADY(1'b0),
    .m_axi_mm_video3_AWADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWADDR),
    .m_axi_mm_video3_AWID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWID),
    .m_axi_mm_video3_AWLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWLEN),
    .m_axi_mm_video3_AWSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWSIZE),
    .m_axi_mm_video3_AWBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWBURST),
    .m_axi_mm_video3_AWLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWLOCK),
    .m_axi_mm_video3_AWCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWCACHE),
    .m_axi_mm_video3_AWPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWPROT),
    .m_axi_mm_video3_AWQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWQOS),
    .m_axi_mm_video3_AWREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWREGION),
    .m_axi_mm_video3_AWUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_AWUSER),
    .m_axi_mm_video3_WVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WVALID),
    .m_axi_mm_video3_WREADY(1'b0),
    .m_axi_mm_video3_WDATA(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WDATA),
    .m_axi_mm_video3_WSTRB(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WSTRB),
    .m_axi_mm_video3_WLAST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WLAST),
    .m_axi_mm_video3_WID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WID),
    .m_axi_mm_video3_WUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_WUSER),
    .m_axi_mm_video3_ARVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARVALID),
    .m_axi_mm_video3_ARREADY(mm_video3_ARREADY),
    .m_axi_mm_video3_ARADDR(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARADDR),
    .m_axi_mm_video3_ARID(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARID),
    .m_axi_mm_video3_ARLEN(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLEN),
    .m_axi_mm_video3_ARSIZE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARSIZE),
    .m_axi_mm_video3_ARBURST(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARBURST),
    .m_axi_mm_video3_ARLOCK(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARLOCK),
    .m_axi_mm_video3_ARCACHE(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARCACHE),
    .m_axi_mm_video3_ARPROT(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARPROT),
    .m_axi_mm_video3_ARQOS(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARQOS),
    .m_axi_mm_video3_ARREGION(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARREGION),
    .m_axi_mm_video3_ARUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARUSER),
    .m_axi_mm_video3_RVALID(mm_video3_RVALID),
    .m_axi_mm_video3_RREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_RREADY),
    .m_axi_mm_video3_RDATA(mm_video3_RDATA),
    .m_axi_mm_video3_RLAST(mm_video3_RLAST),
    .m_axi_mm_video3_RID(mm_video3_RID),
    .m_axi_mm_video3_RUSER(mm_video3_RUSER),
    .m_axi_mm_video3_RRESP(mm_video3_RRESP),
    .m_axi_mm_video3_BVALID(1'b0),
    .m_axi_mm_video3_BREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_BREADY),
    .m_axi_mm_video3_BRESP(2'd0),
    .m_axi_mm_video3_BID(1'd0),
    .m_axi_mm_video3_BUSER(1'd0),
    .p_read(HwReg_width_reg_1180),
    .p_read1(HwReg_height_reg_1174),
    .p_read2(HwReg_background_Y_R_reg_1169),
    .p_read13(HwReg_background_U_G_reg_1164),
    .p_read24(HwReg_background_V_B_reg_1159),
    .p_read3(HwReg_layerEnable_reg_1153),
    .HwReg_layer1_buf1(layer1_buf1_read_reg_1148),
    .HwReg_layer1_buf2(layer1_buf2_read_reg_1143),
    .HwReg_layer2_buf1(layer2_buf1_read_reg_1138),
    .HwReg_layer2_buf2(layer2_buf2_read_reg_1133),
    .HwReg_layer3_buf1(layer3_buf1_read_reg_1128),
    .p_read4(HwReg_layerEnableFlag_3_fu_358),
    .p_read15(HwReg_layerEnableFlag_3_1_fu_362),
    .p_read26(HwReg_layerEnableFlag_3_2_fu_366),
    .p_read37(HwReg_layerEnableFlag_3_3_fu_370),
    .p_read8(HwReg_layerAlpha_3_1_fu_410),
    .p_read9(HwReg_layerStartX_1_1_fu_414),
    .p_read10(HwReg_layerStartX_2_1_fu_418),
    .p_read11(HwReg_layerStartX_3_1_fu_422),
    .p_read12(HwReg_layerStartY_1_1_fu_426),
    .p_read135(HwReg_layerStartY_2_1_fu_430),
    .p_read14(HwReg_layerStartY_3_1_fu_434),
    .p_read415(HwReg_width_reg_1180),
    .p_read16(HwReg_layerWidth_1_1_fu_438),
    .p_read17(HwReg_layerWidth_2_1_fu_442),
    .p_read18(HwReg_layerWidth_3_1_fu_446),
    .p_read5(HwReg_height_reg_1174),
    .p_read19(HwReg_layerHeight_1_1_fu_406),
    .p_read20(HwReg_layerHeight_2_1_fu_402),
    .p_read21(HwReg_layerHeight_3_1_fu_398),
    .p_read22(HwReg_layerScaleFactor_1_1_fu_394),
    .p_read23(HwReg_layerScaleFactor_2_1_fu_390),
    .p_read246(HwReg_layerScaleFactor_3_1_fu_386),
    .p_read46(HwReg_layerStride_3_2_fu_382),
    .p_read57(HwReg_layerStride_3_1_fu_378),
    .p_read6(HwReg_layerStride_3_fu_374),
    .s_axis_video_TDATA(s_axis_video_TDATA_int_regslice),
    .s_axis_video_TKEEP(s_axis_video_TKEEP_int_regslice),
    .s_axis_video_TSTRB(s_axis_video_TSTRB_int_regslice),
    .s_axis_video_TUSER(s_axis_video_TUSER_int_regslice),
    .s_axis_video_TLAST(s_axis_video_TLAST_int_regslice),
    .s_axis_video_TID(s_axis_video_TID_int_regslice),
    .s_axis_video_TDEST(s_axis_video_TDEST_int_regslice),
    .m_axis_video_TDATA(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDATA),
    .m_axis_video_TKEEP(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TSTRB),
    .m_axis_video_TUSER(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TUSER),
    .m_axis_video_TLAST(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TLAST),
    .m_axis_video_TID(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TID),
    .m_axis_video_TDEST(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDEST),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .p_read2_ap_vld(1'b1),
    .p_read13_ap_vld(1'b1),
    .p_read24_ap_vld(1'b1),
    .p_read3_ap_vld(1'b1),
    .HwReg_layer1_buf1_ap_vld(1'b1),
    .HwReg_layer1_buf2_ap_vld(1'b1),
    .HwReg_layer2_buf1_ap_vld(1'b1),
    .HwReg_layer2_buf2_ap_vld(1'b1),
    .HwReg_layer3_buf1_ap_vld(1'b1),
    .p_read4_ap_vld(1'b1),
    .p_read15_ap_vld(1'b1),
    .p_read26_ap_vld(1'b1),
    .p_read37_ap_vld(1'b1),
    .p_read9_ap_vld(1'b1),
    .p_read10_ap_vld(1'b1),
    .p_read11_ap_vld(1'b1),
    .p_read12_ap_vld(1'b1),
    .p_read135_ap_vld(1'b1),
    .p_read14_ap_vld(1'b1),
    .p_read16_ap_vld(1'b1),
    .p_read17_ap_vld(1'b1),
    .p_read18_ap_vld(1'b1),
    .p_read19_ap_vld(1'b1),
    .p_read20_ap_vld(1'b1),
    .p_read21_ap_vld(1'b1),
    .p_read22_ap_vld(1'b1),
    .p_read23_ap_vld(1'b1),
    .p_read246_ap_vld(1'b1),
    .p_read46_ap_vld(1'b1),
    .p_read57_ap_vld(1'b1),
    .p_read6_ap_vld(1'b1),
    .p_read_ap_vld(1'b1),
    .p_read1_ap_vld(1'b1),
    .p_read8_ap_vld(1'b1),
    .p_read415_ap_vld(1'b1),
    .p_read5_ap_vld(1'b1),
    .ap_start(grp_VMixHlsDataFlowFunction_fu_660_ap_start),
    .s_axis_video_TVALID(s_axis_video_TVALID_int_regslice),
    .s_axis_video_TREADY(grp_VMixHlsDataFlowFunction_fu_660_s_axis_video_TREADY),
    .m_axis_video_TVALID(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .m_axis_video_TREADY(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TREADY),
    .ap_done(grp_VMixHlsDataFlowFunction_fu_660_ap_done),
    .ap_ready(grp_VMixHlsDataFlowFunction_fu_660_ap_ready),
    .ap_idle(grp_VMixHlsDataFlowFunction_fu_660_ap_idle),
    .ap_continue(grp_VMixHlsDataFlowFunction_fu_660_ap_continue)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 48 ))
regslice_both_s_axis_video_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TDATA),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_data_V_U_ack_in),
    .data_out(s_axis_video_TDATA_int_regslice),
    .vld_out(s_axis_video_TVALID_int_regslice),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_data_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 6 ))
regslice_both_s_axis_video_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TKEEP),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_keep_V_U_ack_in),
    .data_out(s_axis_video_TKEEP_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_keep_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_keep_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 6 ))
regslice_both_s_axis_video_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TSTRB),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_strb_V_U_ack_in),
    .data_out(s_axis_video_TSTRB_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_strb_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_strb_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_s_axis_video_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TUSER),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_user_V_U_ack_in),
    .data_out(s_axis_video_TUSER_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_user_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_user_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_s_axis_video_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TLAST),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_last_V_U_ack_in),
    .data_out(s_axis_video_TLAST_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_last_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_last_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_s_axis_video_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TID),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_id_V_U_ack_in),
    .data_out(s_axis_video_TID_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_id_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_id_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_s_axis_video_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(s_axis_video_TDEST),
    .vld_in(s_axis_video_TVALID),
    .ack_in(regslice_both_s_axis_video_V_dest_V_U_ack_in),
    .data_out(s_axis_video_TDEST_int_regslice),
    .vld_out(regslice_both_s_axis_video_V_dest_V_U_vld_out),
    .ack_out(s_axis_video_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_video_V_dest_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 48 ))
regslice_both_m_axis_video_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDATA),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(m_axis_video_TREADY_int_regslice),
    .data_out(m_axis_video_TDATA),
    .vld_out(regslice_both_m_axis_video_V_data_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_data_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 6 ))
regslice_both_m_axis_video_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TKEEP),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_video_TKEEP),
    .vld_out(regslice_both_m_axis_video_V_keep_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_keep_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 6 ))
regslice_both_m_axis_video_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TSTRB),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy),
    .data_out(m_axis_video_TSTRB),
    .vld_out(regslice_both_m_axis_video_V_strb_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_strb_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TUSER),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_user_V_U_ack_in_dummy),
    .data_out(m_axis_video_TUSER),
    .vld_out(regslice_both_m_axis_video_V_user_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_user_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TLAST),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_video_TLAST),
    .vld_out(regslice_both_m_axis_video_V_last_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_last_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TID),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_id_V_U_ack_in_dummy),
    .data_out(m_axis_video_TID),
    .vld_out(regslice_both_m_axis_video_V_id_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_id_V_U_apdone_blk)
);

bd_v_mix_0_0_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_video_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TDEST),
    .vld_in(grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TVALID),
    .ack_in(regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy),
    .data_out(m_axis_video_TDEST),
    .vld_out(regslice_both_m_axis_video_V_dest_V_U_vld_out),
    .ack_out(m_axis_video_TREADY),
    .apdone_blk(regslice_both_m_axis_video_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done <= 1'b0;
        end else if ((grp_VMixHlsDataFlowFunction_fu_660_ap_done == 1'b1)) begin
            ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready <= 1'b0;
        end else if ((grp_VMixHlsDataFlowFunction_fu_660_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg <= 1'b1;
        end else if ((grp_VMixHlsDataFlowFunction_fu_660_ap_ready == 1'b1)) begin
            grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_636 <= add_ln2614_fu_762_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_636 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    s_axi_CTRL_flush_done <= (m_axi_mm_video3_flush_done & m_axi_mm_video2_flush_done & m_axi_mm_video1_flush_done);
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        HwReg_background_U_G_reg_1164 <= HwReg_background_U_G_fu_742_p1;
        HwReg_background_V_B_reg_1159 <= HwReg_background_V_B_fu_738_p1;
        HwReg_background_Y_R_reg_1169 <= HwReg_background_Y_R_fu_746_p1;
        HwReg_height_reg_1174 <= HwReg_height_fu_750_p1;
        HwReg_layerAlpha_3_2_reg_1186 <= HwReg_layerAlpha_3_2_fu_758_p1;
        HwReg_layerEnable_reg_1153 <= HwReg_layerEnable_fu_734_p1;
        HwReg_layerHeight_1_reg_1236 <= layerHeight_1;
        HwReg_layerHeight_2_reg_1241 <= layerHeight_2;
        HwReg_layerHeight_3_reg_1246 <= layerHeight_3;
        HwReg_layerScaleFactor_1_reg_1251 <= layerScaleFactor_1;
        HwReg_layerScaleFactor_2_reg_1256 <= layerScaleFactor_2;
        HwReg_layerScaleFactor_3_reg_1261 <= layerScaleFactor_3;
        HwReg_layerStartX_1_reg_1191 <= layerStartX_1;
        HwReg_layerStartX_2_reg_1196 <= layerStartX_2;
        HwReg_layerStartX_3_reg_1201 <= layerStartX_3;
        HwReg_layerStartY_1_reg_1206 <= layerStartY_1;
        HwReg_layerStartY_2_reg_1211 <= layerStartY_2;
        HwReg_layerStartY_3_reg_1216 <= layerStartY_3;
        HwReg_layerWidth_1_reg_1221 <= layerWidth_1;
        HwReg_layerWidth_2_reg_1226 <= layerWidth_2;
        HwReg_layerWidth_3_reg_1231 <= layerWidth_3;
        HwReg_width_reg_1180 <= HwReg_width_fu_754_p1;
        layer1_buf1_read_reg_1148 <= layer1_buf1;
        layer1_buf2_read_reg_1143 <= layer1_buf2;
        layer2_buf1_read_reg_1138 <= layer2_buf1;
        layer2_buf2_read_reg_1133 <= layer2_buf2;
        layer3_buf1_read_reg_1128 <= layer3_buf1;
        layerStride_0_read_reg_1266 <= layerStride_0;
        layerStride_1_read_reg_1271 <= layerStride_1;
        layerStride_2_read_reg_1276 <= layerStride_2;
        layerStride_3_read_reg_1281 <= layerStride_3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2614_fu_768_p2 == 1'd0) & (ap_phi_mux_i_phi_fu_640_p4 == 3'd3) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerAlpha_3_1_fu_410 <= HwReg_layerAlpha_3_2_reg_1186;
        HwReg_layerHeight_3_1_fu_398 <= HwReg_layerHeight_3_reg_1246;
        HwReg_layerScaleFactor_3_1_fu_386 <= HwReg_layerScaleFactor_3_reg_1261;
        HwReg_layerStartX_3_1_fu_422 <= HwReg_layerStartX_3_reg_1201;
        HwReg_layerStartY_3_1_fu_434 <= HwReg_layerStartY_3_reg_1216;
        HwReg_layerWidth_3_1_fu_446 <= HwReg_layerWidth_3_reg_1231;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln2622_fu_838_p1 == 2'd1) & (icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerEnableFlag_3_1_fu_362 <= HwReg_layerEnableFlag_0_fu_872_p2;
        HwReg_layerStride_3_2_fu_382 <= ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln2622_fu_838_p1 == 2'd2) & (icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerEnableFlag_3_2_fu_366 <= HwReg_layerEnableFlag_0_fu_872_p2;
        HwReg_layerStride_3_1_fu_378 <= ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln2622_fu_838_p1 == 2'd3) & (icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerEnableFlag_3_3_fu_370 <= HwReg_layerEnableFlag_0_fu_872_p2;
        HwReg_layerStride_3_fu_374 <= ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln2622_fu_838_p1 == 2'd0) & (icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerEnableFlag_3_fu_358 <= HwReg_layerEnableFlag_0_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2614_fu_768_p2 == 1'd0) & (ap_phi_mux_i_phi_fu_640_p4 == 3'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerHeight_1_1_fu_406 <= HwReg_layerHeight_1_reg_1236;
        HwReg_layerScaleFactor_1_1_fu_394 <= HwReg_layerScaleFactor_1_reg_1251;
        HwReg_layerStartX_1_1_fu_414 <= HwReg_layerStartX_1_reg_1191;
        HwReg_layerStartY_1_1_fu_426 <= HwReg_layerStartY_1_reg_1206;
        HwReg_layerWidth_1_1_fu_438 <= HwReg_layerWidth_1_reg_1221;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln2614_fu_768_p2 == 1'd0) & (ap_phi_mux_i_phi_fu_640_p4 == 3'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        HwReg_layerHeight_2_1_fu_402 <= HwReg_layerHeight_2_reg_1241;
        HwReg_layerScaleFactor_2_1_fu_390 <= HwReg_layerScaleFactor_2_reg_1256;
        HwReg_layerStartX_2_1_fu_418 <= HwReg_layerStartX_2_reg_1196;
        HwReg_layerStartY_2_1_fu_430 <= HwReg_layerStartY_2_reg_1211;
        HwReg_layerWidth_2_1_fu_442 <= HwReg_layerWidth_2_reg_1226;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_m_axis_video_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        if ((ap_phi_mux_i_phi_fu_640_p4 == 3'd3)) begin
            ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = layerStride_3_read_reg_1281;
        end else if ((ap_phi_mux_i_phi_fu_640_p4 == 3'd1)) begin
            ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = layerStride_1_read_reg_1271;
        end else if ((ap_phi_mux_i_phi_fu_640_p4 == 3'd2)) begin
            ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = layerStride_2_read_reg_1276;
        end else if ((1'b1 == ap_condition_1158)) begin
            ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = layerStride_0_read_reg_1266;
        end else begin
            ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = 'bx;
        end
    end else begin
        ap_phi_mux_HwReg_layerStride_0_phi_fu_650_p8 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_m_axis_video_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_VMixHlsDataFlowFunction_fu_660_ap_continue = 1'b1;
    end else begin
        grp_VMixHlsDataFlowFunction_fu_660_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video1_ARVALID = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_ARVALID;
    end else begin
        mm_video1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video1_RREADY = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video1_RREADY;
    end else begin
        mm_video1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video2_ARVALID = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_ARVALID;
    end else begin
        mm_video2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video2_RREADY = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video2_RREADY;
    end else begin
        mm_video2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video3_ARVALID = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_ARVALID;
    end else begin
        mm_video3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        mm_video3_RREADY = grp_VMixHlsDataFlowFunction_fu_660_m_axi_mm_video3_RREADY;
    end else begin
        mm_video3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        s_axis_video_TREADY_int_regslice = grp_VMixHlsDataFlowFunction_fu_660_s_axis_video_TREADY;
    end else begin
        s_axis_video_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln2614_fu_768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_m_axis_video_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HwReg_background_U_G_fu_742_p1 = background_U_G[7:0];

assign HwReg_background_V_B_fu_738_p1 = background_V_B[7:0];

assign HwReg_background_Y_R_fu_746_p1 = background_Y_R[7:0];

assign HwReg_height_fu_750_p1 = height[11:0];

assign HwReg_layerAlpha_3_2_fu_758_p1 = layerAlpha_3[11:0];

assign HwReg_layerEnableFlag_0_fu_872_p2 = ((and_ln2623_fu_867_p2 != 4'd0) ? 1'b1 : 1'b0);

assign HwReg_layerEnable_fu_734_p1 = layerEnable[3:0];

assign HwReg_width_fu_754_p1 = width[11:0];

assign add_ln2614_fu_762_p2 = (i_reg_636 + 3'd1);

assign and_ln2623_fu_867_p2 = (shl_ln2623_fu_861_p2 & HwReg_layerEnable_reg_1153);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_ready & ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_done) == 1'b0);
end

always @ (*) begin
    ap_condition_1158 = (~(ap_phi_mux_i_phi_fu_640_p4 == 3'd2) & ~(ap_phi_mux_i_phi_fu_640_p4 == 3'd1) & ~(ap_phi_mux_i_phi_fu_640_p4 == 3'd3));
end

assign ap_phi_mux_i_phi_fu_640_p4 = i_reg_636;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_done = (grp_VMixHlsDataFlowFunction_fu_660_ap_done | ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_done);

assign ap_sync_grp_VMixHlsDataFlowFunction_fu_660_ap_ready = (grp_VMixHlsDataFlowFunction_fu_660_ap_ready | ap_sync_reg_grp_VMixHlsDataFlowFunction_fu_660_ap_ready);

assign grp_VMixHlsDataFlowFunction_fu_660_ap_start = grp_VMixHlsDataFlowFunction_fu_660_ap_start_reg;

assign grp_VMixHlsDataFlowFunction_fu_660_m_axis_video_TREADY = (m_axis_video_TREADY_int_regslice & ap_CS_fsm_state4);

assign icmp_ln2614_fu_768_p2 = ((i_reg_636 == 3'd4) ? 1'b1 : 1'b0);

assign m_axis_video_TVALID = regslice_both_m_axis_video_V_data_V_U_vld_out;

assign s_axis_video_TREADY = regslice_both_s_axis_video_V_data_V_U_ack_in;

assign shl_ln2623_fu_861_p2 = 4'd1 << zext_ln2623_fu_857_p1;

assign trunc_ln2622_fu_838_p1 = i_reg_636[1:0];

assign zext_ln2623_fu_857_p1 = trunc_ln2622_fu_838_p1;


// synthesis translate_off
`include "bd_v_mix_0_0_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //bd_v_mix_0_0_v_mix

