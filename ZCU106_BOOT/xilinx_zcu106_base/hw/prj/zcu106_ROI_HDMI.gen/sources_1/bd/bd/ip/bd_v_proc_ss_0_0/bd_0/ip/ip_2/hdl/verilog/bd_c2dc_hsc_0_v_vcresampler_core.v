// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bd_c2dc_hsc_0_v_vcresampler_core (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_out_422_dout,
        stream_out_422_empty_n,
        stream_out_422_read,
        Height,
        WidthOut,
        stream_out_420_din,
        stream_out_420_full_n,
        stream_out_420_write,
        bPassThru_dout,
        bPassThru_empty_n,
        bPassThru_read
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state8 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] stream_out_422_dout;
input   stream_out_422_empty_n;
output   stream_out_422_read;
input  [15:0] Height;
input  [15:0] WidthOut;
output  [47:0] stream_out_420_din;
input   stream_out_420_full_n;
output   stream_out_420_write;
input  [0:0] bPassThru_dout;
input   bPassThru_empty_n;
output   bPassThru_read;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_out_422_read;
reg[47:0] stream_out_420_din;
reg stream_out_420_write;
reg bPassThru_read;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    stream_out_422_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln1674_reg_878;
reg   [0:0] cmp24_i_reg_859;
reg    stream_out_420_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln1674_reg_878_pp0_iter1_reg;
reg   [0:0] tmp_reg_869;
reg   [0:0] bPassThru_read_reg_751;
reg    ap_enable_reg_pp0_iter3;
reg    bPassThru_blk_n;
reg   [14:0] x_reg_253;
reg   [14:0] x_reg_253_pp0_iter1_reg;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op68_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
reg    ap_predicate_op143_write_state6;
reg    ap_block_state6_pp0_stage0_iter2;
reg    ap_predicate_op148_write_state7;
reg    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [14:0] loopWidth_fu_283_p4;
wire    ap_CS_fsm_state2;
wire   [15:0] zext_ln1669_fu_298_p1;
reg   [15:0] zext_ln1669_reg_766;
wire   [15:0] loopHeight_fu_302_p2;
reg   [15:0] loopHeight_reg_771;
wire   [0:0] icmp_ln1671_fu_308_p2;
reg   [0:0] icmp_ln1671_reg_776;
wire   [0:0] cmp18531_i_fu_314_p2;
wire   [14:0] add_ln1671_fu_320_p2;
reg   [14:0] add_ln1671_reg_844;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1671_1_fu_330_p2;
wire   [0:0] empty_fu_340_p1;
reg   [0:0] empty_reg_853;
wire   [0:0] cmp24_i_fu_344_p2;
wire   [0:0] cmp73_i_fu_349_p2;
reg   [0:0] cmp73_i_reg_863;
wire   [14:0] add_ln1674_fu_363_p2;
reg   [14:0] add_ln1674_reg_873;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln1674_fu_369_p2;
wire   [63:0] idxprom5_i240_i_fu_378_p1;
reg   [63:0] idxprom5_i240_i_reg_882;
reg   [10:0] linebuf_c_val_V_0_addr_reg_888;
reg   [10:0] linebuf_c_val_V_0_addr_reg_888_pp0_iter1_reg;
reg   [10:0] linebuf_y_val_V_0_addr_reg_894;
wire   [7:0] pixbuf_c_val_V_2_0_1_fu_487_p1;
reg   [7:0] pixbuf_c_val_V_2_0_1_reg_900;
reg   [7:0] pixbuf_c_val_V_2_1_reg_907;
wire   [7:0] trunc_ln674_fu_520_p1;
reg   [7:0] trunc_ln674_reg_919;
reg   [7:0] p_Result_0_1_i_reg_924;
reg   [7:0] trunc_ln_reg_929;
reg   [7:0] trunc_ln213_1_reg_934;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_condition_pp0_exit_iter2_state6;
wire   [10:0] linebuf_y_val_V_0_address0;
reg    linebuf_y_val_V_0_ce0;
reg    linebuf_y_val_V_0_we0;
wire   [15:0] linebuf_y_val_V_0_d0;
wire   [10:0] linebuf_y_val_V_0_address1;
reg    linebuf_y_val_V_0_ce1;
wire   [15:0] linebuf_y_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_0_address0;
reg    linebuf_c_val_V_0_ce0;
reg    linebuf_c_val_V_0_we0;
wire   [15:0] linebuf_c_val_V_0_d0;
wire   [10:0] linebuf_c_val_V_0_address1;
reg    linebuf_c_val_V_0_ce1;
wire   [15:0] linebuf_c_val_V_0_q1;
wire   [10:0] linebuf_c_val_V_1_address0;
reg    linebuf_c_val_V_1_ce0;
reg    linebuf_c_val_V_1_we0;
wire   [15:0] linebuf_c_val_V_1_d0;
wire   [10:0] linebuf_c_val_V_1_address1;
reg    linebuf_c_val_V_1_ce1;
wire   [15:0] linebuf_c_val_V_1_q1;
reg   [14:0] y_reg_242;
wire    ap_CS_fsm_state8;
reg   [14:0] ap_phi_mux_x_phi_fu_257_p4;
reg   [7:0] ap_phi_mux_pixbuf_c_val_V_2_1_0_i_phi_fu_268_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_0_i_reg_265;
wire   [7:0] ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_0_i_reg_265;
reg   [7:0] ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_0_i_reg_265;
reg   [7:0] ap_phi_mux_pixbuf_c_val_V_2_0_0_i_phi_fu_277_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_0_0_i_reg_274;
wire   [7:0] ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_0_0_i_reg_274;
reg   [7:0] ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_0_0_i_reg_274;
wire   [63:0] zext_ln1674_fu_501_p1;
reg   [7:0] mpix_y_val_V_0_fu_116;
wire   [7:0] pix_val_V_0_fu_383_p1;
reg   [7:0] mpix_c_val_V_0_fu_120;
reg   [7:0] pix_val_V_2_1_fu_124;
reg   [7:0] mpix_y_val_V_1_fu_128;
reg   [7:0] mpix_c_val_V_1_fu_132;
reg   [7:0] pix_val_V_5_1_fu_136;
reg   [7:0] mpix_y_val_V_0_1_fu_140;
reg   [7:0] mpix_y_val_V_1_1_fu_144;
reg   [7:0] pixbuf_c_val_V_2_0_fu_148;
reg   [7:0] pixbuf_c_val_V_2_1_1_fu_152;
reg    ap_block_state1;
wire   [47:0] or_ln174_4_i_fu_707_p7;
reg    ap_block_pp0_stage0_01001;
wire   [47:0] or_ln174_9_i_fu_736_p7;
wire   [0:0] xor_ln1669_fu_293_p2;
wire   [15:0] zext_ln1671_fu_326_p1;
wire   [15:0] out_y_fu_335_p2;
wire   [10:0] empty_62_fu_374_p1;
wire   [7:0] select_ln1783_1_fu_572_p3;
wire   [7:0] select_ln1783_fu_566_p3;
wire   [7:0] trunc_ln674_2_fu_543_p1;
wire   [8:0] shl_ln_fu_587_p3;
wire   [9:0] zext_ln1346_fu_598_p1;
wire   [9:0] zext_ln215_fu_594_p1;
wire   [8:0] zext_ln1346_1_fu_602_p1;
wire   [8:0] add_ln1346_1_fu_612_p2;
wire   [9:0] zext_ln1346_3_fu_618_p1;
wire   [9:0] add_ln1346_fu_606_p2;
wire   [9:0] add_ln1346_2_fu_622_p2;
wire   [7:0] p_Result_3_1_1_i_fu_547_p4;
wire   [8:0] shl_ln1345_1_fu_638_p3;
wire   [9:0] zext_ln1346_2_fu_649_p1;
wire   [9:0] zext_ln215_1_fu_645_p1;
wire   [8:0] zext_ln1346_4_fu_653_p1;
wire   [8:0] add_ln1346_4_fu_663_p2;
wire   [9:0] zext_ln1346_5_fu_669_p1;
wire   [9:0] add_ln1346_3_fu_657_p2;
wire   [9:0] add_ln1346_5_fu_673_p2;
wire   [7:0] outpix_val_V_load_4_i_fu_730_p3;
wire   [7:0] outpix_val_V_load_1_i_fu_724_p3;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_64;
reg    ap_enable_state4_pp0_iter0_stage0;
reg    ap_enable_operation_88;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_predicate_op109_store_state6;
reg    ap_enable_operation_109;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_enable_operation_87;
reg    ap_enable_operation_100;
reg    ap_enable_operation_104;
reg    ap_enable_operation_92;
reg    ap_enable_operation_105;
reg    ap_enable_operation_117;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_276;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

bd_c2dc_hsc_0_v_vcresampler_core_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_y_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_y_val_V_0_address0),
    .ce0(linebuf_y_val_V_0_ce0),
    .we0(linebuf_y_val_V_0_we0),
    .d0(linebuf_y_val_V_0_d0),
    .address1(linebuf_y_val_V_0_address1),
    .ce1(linebuf_y_val_V_0_ce1),
    .q1(linebuf_y_val_V_0_q1)
);

bd_c2dc_hsc_0_v_vcresampler_core_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_0_address0),
    .ce0(linebuf_c_val_V_0_ce0),
    .we0(linebuf_c_val_V_0_we0),
    .d0(linebuf_c_val_V_0_d0),
    .address1(linebuf_c_val_V_0_address1),
    .ce1(linebuf_c_val_V_0_ce1),
    .q1(linebuf_c_val_V_0_q1)
);

bd_c2dc_hsc_0_v_vcresampler_core_linebuf_y_val_V_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
linebuf_c_val_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(linebuf_c_val_V_1_address0),
    .ce0(linebuf_c_val_V_1_ce0),
    .we0(linebuf_c_val_V_1_we0),
    .d0(linebuf_c_val_V_1_d0),
    .address1(linebuf_c_val_V_1_address1),
    .ce1(linebuf_c_val_V_1_ce1),
    .q1(linebuf_c_val_V_1_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln1671_1_fu_330_p2 == 1'd1) | (icmp_ln1671_reg_776 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter2_state6)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1)))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter2_state6))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_276)) begin
        if (((cmp24_i_reg_859 == 1'd0) & (icmp_ln1674_reg_878 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_0_0_i_reg_274 <= pixbuf_c_val_V_2_0_1_fu_487_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_0_0_i_reg_274 <= ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_0_0_i_reg_274;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_276)) begin
        if (((cmp24_i_reg_859 == 1'd0) & (icmp_ln1674_reg_878 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_0_i_reg_265 <= {{linebuf_c_val_V_0_q1[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_0_i_reg_265 <= ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_0_i_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
        x_reg_253 <= 15'd0;
    end else if (((icmp_ln1674_reg_878 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_reg_253 <= add_ln1674_reg_873;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_reg_242 <= add_ln1671_reg_844;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1671_fu_308_p2 == 1'd1))) begin
        y_reg_242 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_reg_776 == 1'd1))) begin
        add_ln1671_reg_844 <= add_ln1671_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln1674_reg_873 <= add_ln1674_fu_363_p2;
        ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_0_0_i_reg_274 <= ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_0_0_i_reg_274;
        ap_phi_reg_pp0_iter1_pixbuf_c_val_V_2_1_0_i_reg_265 <= ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_0_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bPassThru_read_reg_751 <= bPassThru_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
        cmp24_i_reg_859 <= cmp24_i_fu_344_p2;
        cmp73_i_reg_863 <= cmp73_i_fu_349_p2;
        empty_reg_853 <= empty_fu_340_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln1671_reg_776 <= icmp_ln1671_fu_308_p2;
        loopHeight_reg_771 <= loopHeight_fu_302_p2;
        zext_ln1669_reg_766[0] <= zext_ln1669_fu_298_p1[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1674_reg_878 <= icmp_ln1674_fu_369_p2;
        icmp_ln1674_reg_878_pp0_iter1_reg <= icmp_ln1674_reg_878;
        linebuf_c_val_V_0_addr_reg_888_pp0_iter1_reg <= linebuf_c_val_V_0_addr_reg_888;
        x_reg_253_pp0_iter1_reg <= x_reg_253;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1674_fu_369_p2 == 1'd0))) begin
        idxprom5_i240_i_reg_882[10 : 0] <= idxprom5_i240_i_fu_378_p1[10 : 0];
        linebuf_c_val_V_0_addr_reg_888 <= idxprom5_i240_i_fu_378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1674_reg_878 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_y_val_V_0_addr_reg_894 <= idxprom5_i240_i_reg_882;
        pixbuf_c_val_V_2_0_1_reg_900 <= pixbuf_c_val_V_2_0_1_fu_487_p1;
        pixbuf_c_val_V_2_1_reg_907 <= {{linebuf_c_val_V_0_q1[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((cmp24_i_reg_859 == 1'd1) & (icmp_ln1674_reg_878 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mpix_c_val_V_0_fu_120 <= {{stream_out_422_dout[15:8]}};
        mpix_c_val_V_1_fu_132 <= {{stream_out_422_dout[39:32]}};
        mpix_y_val_V_0_1_fu_140 <= pix_val_V_0_fu_383_p1;
        mpix_y_val_V_0_fu_116 <= pix_val_V_0_fu_383_p1;
        mpix_y_val_V_1_1_fu_144 <= {{stream_out_422_dout[31:24]}};
        mpix_y_val_V_1_fu_128 <= {{stream_out_422_dout[31:24]}};
        pix_val_V_2_1_fu_124 <= {{stream_out_422_dout[23:16]}};
        pix_val_V_5_1_fu_136 <= {{stream_out_422_dout[47:40]}};
        pixbuf_c_val_V_2_0_fu_148 <= {{stream_out_422_dout[15:8]}};
        pixbuf_c_val_V_2_1_1_fu_152 <= {{stream_out_422_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_0_1_i_reg_924 <= {{linebuf_y_val_V_0_q1[15:8]}};
        trunc_ln674_reg_919 <= trunc_ln674_fu_520_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
        tmp_reg_869 <= out_y_fu_335_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (empty_reg_853 == 1'd0))) begin
        trunc_ln213_1_reg_934 <= {{add_ln1346_5_fu_673_p2[9:2]}};
        trunc_ln_reg_929 <= {{add_ln1346_2_fu_622_p2[9:2]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1674_fu_369_p2 == 1'd1))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln1671_1_fu_330_p2 == 1'd1) | (icmp_ln1671_reg_776 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (cmp24_i_reg_859 == 1'd1))) begin
        ap_phi_mux_pixbuf_c_val_V_2_0_0_i_phi_fu_277_p4 = pixbuf_c_val_V_2_0_fu_148;
    end else begin
        ap_phi_mux_pixbuf_c_val_V_2_0_0_i_phi_fu_277_p4 = ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_0_0_i_reg_274;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (cmp24_i_reg_859 == 1'd1))) begin
        ap_phi_mux_pixbuf_c_val_V_2_1_0_i_phi_fu_268_p4 = pixbuf_c_val_V_2_1_1_fu_152;
    end else begin
        ap_phi_mux_pixbuf_c_val_V_2_1_0_i_phi_fu_268_p4 = ap_phi_reg_pp0_iter2_pixbuf_c_val_V_2_1_0_i_reg_265;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_x_phi_fu_257_p4 = add_ln1674_reg_873;
    end else begin
        ap_phi_mux_x_phi_fu_257_p4 = x_reg_253;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThru_blk_n = bPassThru_empty_n;
    end else begin
        bPassThru_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((bPassThru_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        bPassThru_read = 1'b1;
    end else begin
        bPassThru_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln1671_1_fu_330_p2 == 1'd1) | (icmp_ln1671_reg_776 == 1'd0)))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        linebuf_c_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (cmp24_i_reg_859 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_1_ce0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_c_val_V_1_ce1 = 1'b1;
    end else begin
        linebuf_c_val_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_c_val_V_1_we0 = 1'b1;
    end else begin
        linebuf_c_val_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_ce0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_y_val_V_0_ce1 = 1'b1;
    end else begin
        linebuf_y_val_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        linebuf_y_val_V_0_we0 = 1'b1;
    end else begin
        linebuf_y_val_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (bPassThru_read_reg_751 == 1'd0) & (tmp_reg_869 == 1'd0) & (1'b0 == ap_block_pp0_stage0)) | ((bPassThru_read_reg_751 == 1'd1) & (tmp_reg_869 == 1'd0) & (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        stream_out_420_blk_n = stream_out_420_full_n;
    end else begin
        stream_out_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_predicate_op148_write_state7 == 1'b1))) begin
            stream_out_420_din = or_ln174_9_i_fu_736_p7;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op143_write_state6 == 1'b1))) begin
            stream_out_420_din = or_ln174_4_i_fu_707_p7;
        end else begin
            stream_out_420_din = 'bx;
        end
    end else begin
        stream_out_420_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op148_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op143_write_state6 == 1'b1)))) begin
        stream_out_420_write = 1'b1;
    end else begin
        stream_out_420_write = 1'b0;
    end
end

always @ (*) begin
    if (((cmp24_i_reg_859 == 1'd1) & (icmp_ln1674_reg_878 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_422_blk_n = stream_out_422_empty_n;
    end else begin
        stream_out_422_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_read_state5 == 1'b1))) begin
        stream_out_422_read = 1'b1;
    end else begin
        stream_out_422_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((bPassThru_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln1671_1_fu_330_p2 == 1'd1) | (icmp_ln1671_reg_776 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1671_1_fu_330_p2 == 1'd0) & (cmp18531_i_fu_314_p2 == 1'd0) & (icmp_ln1671_reg_776 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1346_1_fu_612_p2 = (zext_ln1346_1_fu_602_p1 + 9'd2);

assign add_ln1346_2_fu_622_p2 = (zext_ln1346_3_fu_618_p1 + add_ln1346_fu_606_p2);

assign add_ln1346_3_fu_657_p2 = (zext_ln1346_2_fu_649_p1 + zext_ln215_1_fu_645_p1);

assign add_ln1346_4_fu_663_p2 = (zext_ln1346_4_fu_653_p1 + 9'd2);

assign add_ln1346_5_fu_673_p2 = (zext_ln1346_5_fu_669_p1 + add_ln1346_3_fu_657_p2);

assign add_ln1346_fu_606_p2 = (zext_ln1346_fu_598_p1 + zext_ln215_fu_594_p1);

assign add_ln1671_fu_320_p2 = (y_reg_242 + 15'd1);

assign add_ln1674_fu_363_p2 = (ap_phi_mux_x_phi_fu_257_p4 + 15'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op148_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op143_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_out_422_empty_n == 1'b0) & (ap_predicate_op68_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op148_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op143_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_out_422_empty_n == 1'b0) & (ap_predicate_op68_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op148_write_state7 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (stream_out_420_full_n == 1'b0) & (ap_predicate_op143_write_state6 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (stream_out_422_empty_n == 1'b0) & (ap_predicate_op68_read_state5 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((bPassThru_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = ((stream_out_422_empty_n == 1'b0) & (ap_predicate_op68_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter2 = ((stream_out_420_full_n == 1'b0) & (ap_predicate_op143_write_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter3 = ((stream_out_420_full_n == 1'b0) & (ap_predicate_op148_write_state7 == 1'b1));
end

always @ (*) begin
    ap_condition_276 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_100 = (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_104 = (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_105 = (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_117 = (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_64 = (icmp_ln1674_fu_369_p2 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_87 = (icmp_ln1674_reg_878 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_88 = (icmp_ln1674_reg_878 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_92 = (icmp_ln1674_reg_878 == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter0_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_0_0_i_reg_274 = 'bx;

assign ap_phi_reg_pp0_iter0_pixbuf_c_val_V_2_1_0_i_reg_265 = 'bx;

always @ (*) begin
    ap_predicate_op109_store_state6 = ((icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0) & (cmp24_i_reg_859 == 1'd1));
end

always @ (*) begin
    ap_predicate_op143_write_state6 = ((bPassThru_read_reg_751 == 1'd1) & (tmp_reg_869 == 1'd0) & (icmp_ln1674_reg_878_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_write_state7 = ((bPassThru_read_reg_751 == 1'd0) & (tmp_reg_869 == 1'd0));
end

always @ (*) begin
    ap_predicate_op68_read_state5 = ((cmp24_i_reg_859 == 1'd1) & (icmp_ln1674_reg_878 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign cmp18531_i_fu_314_p2 = ((loopWidth_fu_283_p4 == 15'd0) ? 1'b1 : 1'b0);

assign cmp24_i_fu_344_p2 = ((zext_ln1671_fu_326_p1 < Height) ? 1'b1 : 1'b0);

assign cmp73_i_fu_349_p2 = ((y_reg_242 != 15'd0) ? 1'b1 : 1'b0);

assign empty_62_fu_374_p1 = ap_phi_mux_x_phi_fu_257_p4[10:0];

assign empty_fu_340_p1 = out_y_fu_335_p2[0:0];

assign icmp_ln1671_1_fu_330_p2 = ((zext_ln1671_fu_326_p1 == loopHeight_reg_771) ? 1'b1 : 1'b0);

assign icmp_ln1671_fu_308_p2 = (($signed(loopHeight_fu_302_p2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1674_fu_369_p2 = ((ap_phi_mux_x_phi_fu_257_p4 == loopWidth_fu_283_p4) ? 1'b1 : 1'b0);

assign idxprom5_i240_i_fu_378_p1 = empty_62_fu_374_p1;

assign linebuf_c_val_V_0_address0 = linebuf_c_val_V_0_addr_reg_888_pp0_iter1_reg;

assign linebuf_c_val_V_0_address1 = idxprom5_i240_i_fu_378_p1;

assign linebuf_c_val_V_0_d0 = {{pixbuf_c_val_V_2_1_1_fu_152}, {pixbuf_c_val_V_2_0_fu_148}};

assign linebuf_c_val_V_1_address0 = zext_ln1674_fu_501_p1;

assign linebuf_c_val_V_1_address1 = idxprom5_i240_i_reg_882;

assign linebuf_c_val_V_1_d0 = {{select_ln1783_1_fu_572_p3}, {select_ln1783_fu_566_p3}};

assign linebuf_y_val_V_0_address0 = linebuf_y_val_V_0_addr_reg_894;

assign linebuf_y_val_V_0_address1 = idxprom5_i240_i_reg_882;

assign linebuf_y_val_V_0_d0 = {{mpix_y_val_V_1_1_fu_144}, {mpix_y_val_V_0_1_fu_140}};

assign loopHeight_fu_302_p2 = (Height + zext_ln1669_fu_298_p1);

assign loopWidth_fu_283_p4 = {{WidthOut[15:1]}};

assign or_ln174_4_i_fu_707_p7 = {{{{{{pix_val_V_5_1_fu_136}, {mpix_c_val_V_1_fu_132}}, {mpix_y_val_V_1_fu_128}}, {pix_val_V_2_1_fu_124}}, {mpix_c_val_V_0_fu_120}}, {mpix_y_val_V_0_fu_116}};

assign or_ln174_9_i_fu_736_p7 = {{{{{{{{{{8'd0}, {outpix_val_V_load_4_i_fu_730_p3}}}, {p_Result_0_1_i_reg_924}}}, {8'd0}}}, {outpix_val_V_load_1_i_fu_724_p3}}}, {trunc_ln674_reg_919}};

assign out_y_fu_335_p2 = (zext_ln1671_fu_326_p1 - zext_ln1669_reg_766);

assign outpix_val_V_load_1_i_fu_724_p3 = ((empty_reg_853[0:0] == 1'b1) ? 8'd0 : trunc_ln_reg_929);

assign outpix_val_V_load_4_i_fu_730_p3 = ((empty_reg_853[0:0] == 1'b1) ? 8'd0 : trunc_ln213_1_reg_934);

assign p_Result_3_1_1_i_fu_547_p4 = {{linebuf_c_val_V_1_q1[15:8]}};

assign pix_val_V_0_fu_383_p1 = stream_out_422_dout[7:0];

assign pixbuf_c_val_V_2_0_1_fu_487_p1 = linebuf_c_val_V_0_q1[7:0];

assign select_ln1783_1_fu_572_p3 = ((cmp73_i_reg_863[0:0] == 1'b1) ? pixbuf_c_val_V_2_1_reg_907 : ap_phi_mux_pixbuf_c_val_V_2_1_0_i_phi_fu_268_p4);

assign select_ln1783_fu_566_p3 = ((cmp73_i_reg_863[0:0] == 1'b1) ? pixbuf_c_val_V_2_0_1_reg_900 : ap_phi_mux_pixbuf_c_val_V_2_0_0_i_phi_fu_277_p4);

assign shl_ln1345_1_fu_638_p3 = {{pixbuf_c_val_V_2_1_reg_907}, {1'd0}};

assign shl_ln_fu_587_p3 = {{pixbuf_c_val_V_2_0_1_reg_900}, {1'd0}};

assign start_out = real_start;

assign trunc_ln674_2_fu_543_p1 = linebuf_c_val_V_1_q1[7:0];

assign trunc_ln674_fu_520_p1 = linebuf_y_val_V_0_q1[7:0];

assign xor_ln1669_fu_293_p2 = (bPassThru_read_reg_751 ^ 1'd1);

assign zext_ln1346_1_fu_602_p1 = ap_phi_mux_pixbuf_c_val_V_2_0_0_i_phi_fu_277_p4;

assign zext_ln1346_2_fu_649_p1 = shl_ln1345_1_fu_638_p3;

assign zext_ln1346_3_fu_618_p1 = add_ln1346_1_fu_612_p2;

assign zext_ln1346_4_fu_653_p1 = ap_phi_mux_pixbuf_c_val_V_2_1_0_i_phi_fu_268_p4;

assign zext_ln1346_5_fu_669_p1 = add_ln1346_4_fu_663_p2;

assign zext_ln1346_fu_598_p1 = shl_ln_fu_587_p3;

assign zext_ln1669_fu_298_p1 = xor_ln1669_fu_293_p2;

assign zext_ln1671_fu_326_p1 = y_reg_242;

assign zext_ln1674_fu_501_p1 = x_reg_253_pp0_iter1_reg;

assign zext_ln215_1_fu_645_p1 = p_Result_3_1_1_i_fu_547_p4;

assign zext_ln215_fu_594_p1 = trunc_ln674_2_fu_543_p1;

always @ (posedge ap_clk) begin
    zext_ln1669_reg_766[15:1] <= 15'b000000000000000;
    idxprom5_i240_i_reg_882[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //bd_c2dc_hsc_0_v_vcresampler_core
